Program.Sub.ScreenSU.Start
Gui.Form..Create
Gui.Form..Caption("WF Dashboard")
Gui.Form..Size(27570,14040)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..BackColor(-2147483633)
Gui.Form..MousePointer(0)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form.GsGridWF.Create(GsGridControl)
Gui.Form.GsGridWF.Size(27165,12810)
Gui.Form.GsGridWF.Position(45,540)
Gui.Form.GsGridWF.Event(CellValueChanged,GsGridWF_CellValueChanged)
Gui.Form.GsGridWF.Event(RowCellClick,GsGridWF_CellValueChanged)
Gui.Form.GsGridWF.Event(ColumnFilterChanged,GsGridWF_ColumnFilterChanged)
Gui.Form.cmdRepSave.Create(Button)
Gui.Form.cmdRepSave.Size(855,375)
Gui.Form.cmdRepSave.Position(105,75)
Gui.Form.cmdRepSave.Caption("Save")
Gui.Form.cmdRepSave.Event(Click,cmdRepSave_Click)
Gui.Form.cmdRefresh.Create(Button)
Gui.Form.cmdRefresh.Size(855,375)
Gui.Form.cmdRefresh.Position(1185,75)
Gui.Form.cmdRefresh.Caption("Refresh")
Gui.Form.cmdRefresh.Event(Click,cmdRefresh_Click)
Gui.Form.lbl1.Create(Label,"Filter PL :",False,825,255,0,3510,165,True,0,"Arial",8,-2147483633,0)
Gui.Form.txtPL.Create(TextBox,"",False,540,300,0,4350,105,True,0,"Arial",8,-2147483643,1)
Gui.Form.txtPL.MaxLength(2)
Gui.Form.cmdok.Create(Button)
Gui.Form.cmdok.Size(405,330)
Gui.Form.cmdok.Position(5010,90)
Gui.Form.cmdok.Caption("Ok")
Gui.Form.cmdok.Event(Click,cmdok_Click)
Gui.Form.cmdok.Visible(False)
Gui.Form.cmdExpand.Create(Button)
Gui.Form.cmdExpand.Size(1260,375)
Gui.Form.cmdExpand.Position(2250,90)
Gui.Form.cmdExpand.Caption("Expand All")
Gui.Form.cmdExpand.Event(Click,cmdExpand_Click)
Gui.Form.lbljob.Create(Label,"Total No of Jobs :",False,2355,255,0,5760,210,True,0,"Arial",8,-2147483633,0)
Gui.Form.cmdReset.Create(Button)
Gui.Form.cmdReset.Size(1230,375)
Gui.Form.cmdReset.Position(8265,105)
Gui.Form.cmdReset.Caption("Rest Columns")
Gui.Form.cmdReset.Event(Click,MenuResetColumns)
Gui.Form.cmdPL.Create(Button)
Gui.Form.cmdPL.Size(1005,375)
Gui.Form.cmdPL.Position(9765,120)
Gui.Form.cmdPL.Caption("PL Setup")
Gui.Form.cmdPL.Event(Click,cmdPL_Click)
Gui.Form.cmdPL.Visible(False)
Gui.Form.framePL.Create(Frame)
Gui.Form.framePL.Size(7950,6150)
Gui.Form.framePL.Position(90,30)
Gui.Form.framePL.Visible(False)
Gui.Form.cmdPLClose.Create(Button)
Gui.Form.cmdPLClose.Size(855,375)
Gui.Form.cmdPLClose.Position(165,5715)
Gui.Form.cmdPLClose.Parent("framePL")
Gui.Form.cmdPLClose.Caption("Close")
Gui.Form.cmdPLClose.Event(Click,cmdPLClose_Click)
Gui.Form.GsPL.Create(GsGridControl)
Gui.Form.GsPL.Size(7545,5325)
Gui.Form.GsPL.Position(180,270)
Gui.Form.GsPL.Parent("framePL")
Gui.Form.GsPL.Event(RowCellClick,GsPL_RowCellClick)
Gui.Form.GsPL.Event(CellValueChanged,GsPL_CellValueChanged)
Gui.frmNestedQuote..Create
Gui.frmNestedQuote..Caption("Nested Quote")
Gui.frmNestedQuote..Size(13605,3825)
Gui.frmNestedQuote..MinX(0)
Gui.frmNestedQuote..MinY(0)
Gui.frmNestedQuote..Position(0,0)
Gui.frmNestedQuote..BackColor(-2147483633)
Gui.frmNestedQuote..MaxButton(False)
Gui.frmNestedQuote..MinButton(False)
Gui.frmNestedQuote..MousePointer(0)
Gui.frmNestedQuote..Event(UnLoad,frmNestedQuote_UnLoad)
Gui.frmNestedQuote.GsGridQuote.Create(GsGridControl)
Gui.frmNestedQuote.GsGridQuote.Size(13125,2430)
Gui.frmNestedQuote.GsGridQuote.Position(105,165)
Gui.frmNestedQuote.GsGridQuote.Event(CellValueChanged,GsGridQuote_CellValueChanged)
Gui.frmNestedQuote.cmd_RepQuote.Create(Button)
Gui.frmNestedQuote.cmd_RepQuote.Size(855,375)
Gui.frmNestedQuote.cmd_RepQuote.Position(150,2745)
Gui.frmNestedQuote.cmd_RepQuote.Caption("Save")
Gui.frmNestedQuote.cmd_RepQuote.Event(Click,cmd_RepQuote_Click)
Gui.frm2..Create
Gui.frm2..Caption("New Sales Bid SO")
Gui.frm2..Size(19560,3390)
Gui.frm2..MinX(0)
Gui.frm2..MinY(0)
Gui.frm2..Position(0,0)
Gui.frm2..BackColor(-2147483633)
Gui.frm2..MaxButton(False)
Gui.frm2..MinButton(False)
Gui.frm2..MousePointer(0)
Gui.frm2..Event(UnLoad,frm2_UnLoad)
Gui.frm2.GsGridQuote.Create(GsGridControl)
Gui.frm2.GsGridQuote.Size(18885,1875)
Gui.frm2.GsGridQuote.Position(240,315)
Gui.frm2.GsGridQuote.Event(CellValueChanged,GsGridWF_CellValueChanged)
Gui.frm2.cmdfrm2Save.Create(Button)
Gui.frm2.cmdfrm2Save.Size(855,375)
Gui.frm2.cmdfrm2Save.Position(240,2340)
Gui.frm2.cmdfrm2Save.Caption("Save")
Gui.frm2.cmdfrm2Save.Event(Click,cmd_RepQuote_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Global.sScreen.Declare(String)
V.Global.sSubfrmScreen.Declare(String)
V.Global.sSubScreen.Declare(String)
v.Global.bChanged.Declare 
v.Global.bDup.Declare 

v.Global.sgHdrView.Declare
v.Global.sgDetView.Declare
v.Global.sgREL.Declare
V.Global.bSave.Declare

V.Local.sCuser.Declare
V.Local.sCCmpy.Declare
V.Local.bValue.Declare

'Coded by: RAN
'Date: 03/07/2017


'open connection
F.ODBC.Connection!conx.OpenCompanyConnection(1000000)

''f.Intrinsic.Control.CallSub(create_menus)
f.Intrinsic.Control.CallSub(cmdrefresh_click)
V.Local.sCuser.Set(v.Caller.User)
V.Local.sCCmpy.Set(v.Caller.CompanyCode)
f.Global.Security.IsInGroup(V.Local.sCuser.trim,"PLDASH",V.Local.sCCmpy.trim,V.Local.bValue)
f.Intrinsic.Control.If(V.Local.bValue)
	gui.Form.cmdPL.Visible(True)
f.Intrinsic.Control.EndIf

GUI.Form.GsGridWF.Anchor(15)
gui.Form..show
gui.Form..WindowState(2)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Main.End

Program.Sub.Form_UnLoad.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
variable.local.returnvalue.Declare(long)


F.Intrinsic.Control.If(V.Global.bChanged,=,True)
	Function.Intrinsic.UI.MsgBox("Changes not saved, Do you want to save the changes ?", "Confirm", 4, variable.local.returnvalue)
	F.Intrinsic.Control.If(variable.local.returnvalue,=,6)
		f.Intrinsic.Control.CallSub(cmdrepsave_click)
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.EndIf 

f.Intrinsic.Control.CallSub(close_data)

'close connection to the database
F.ODBC.Connection!conx.Close

F.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Form_UnLoad.End

Program.Sub.Display_Data.Start
'F.Intrinsic.Control.SetErrorHandler("Display_Data_Err")
'F.Intrinsic.Control.ClearErrors
'
'V.Local.sError.Declare(String)
'v.Global.iWF.Declare(long)
'v.Local.ssql.Declare(String)
'v.Local.iret.Declare(long)
'v.Local.stitle.Declare(String)
'v.Local.istatus.Declare(long)
'v.Local.dduedate.Declare(date)
'
'
'
''F.Intrinsic.Debug.InvokeDebugger
''
''
'
'	f.Global.WorkFlow.GetIDFromTitle("Repair Process",v.Global.iWF)
'		'get the ID to create the workflow
'	f.Global.WorkFlow.GetTemplateIDFromTitle("Repair Process",v.Global.iWF)
'	
'	f.Intrinsic.Control.If(v.Global.iWF,=,-1)
'			'inform the user there is no template
'			f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title Repair Process")
'			f.Intrinsic.Control.CallSub(form_unload)
'	f.Intrinsic.Control.Else
'		'get the title of the template to create the workflow
'		f.Intrinsic.String.Build("Select TITLE, STATUS, T_TYPE from ATG_WFT_HEADER where WFT_ID = '{0}'",v.Global.iWF.Trim,v.Local.ssql)
'		F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
'		F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)
'			v.Local.stitle.Set(v.ODBC.conx!rst.FieldValTrim!TITLE)
'			v.Local.istatus.Set(v.ODBC.conx!rst.FieldVal!STATUS)
'		f.Intrinsic.Control.EndIf
'		F.ODBC.conx!rst.Close
'	f.Intrinsic.Control.EndIf
'	
'	'create the workflow from the template
'	f.Global.WorkFlow.CreateFromTemplate(v.Global.iWF,v.Local.stitle.trim,v.Ambient.Date,v.Local.dduedate,v.Caller.User,v.Local.istatus.Long,v.Local.iret)
'		
'	'get the correct line ID
'	f.Intrinsic.String.Build("Select description,User_Group,start_date,due_date,signoff_user_grp, perc_completion from ATG_WF_LINES where WF_ID = '{0}'",v.Local.iret,v.Local.ssql)
''	F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sSQL)
''	F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,False)
''		v.Local.iret.Set(v.ODBC.conx!rst.FieldValTrim!LINE_ID)
''	f.Intrinsic.Control.EndIf
''	F.ODBC.conx!rst.Close
'	
'	F.Intrinsic.Control.If(v.DataTable.WFDT.Exists,=,True)
'		F.Data.DataTable.Close("WFDT")
'	f.Intrinsic.Control.EndIf 
'	
'	F.Data.DataTable.CreateFromSQL("WFDT","conx",v.Local.sSQL,True)
'	
'	F.Data.DataTable.AddColumn("WFDT","Completed",String)
'	
'	gui.Form.GsGridWF.AddGridViewFromDataTable(v.Global.sgDetView,"WFDT") 
'	gui.Form.GsGridWF.mainview(v.Global.sgDetView)
'	
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"description","Caption","description")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"User_Group","Caption","User_Group")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"start_date","Caption","start_date")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"due_date","Caption","due_date")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"signoff_user_grp","Caption","signoff_user_grp")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"perc_completion","Caption","perc_completion")
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "start_date", "DisplayCustomDatetime", "d")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "due_date", "DisplayCustomDatetime", "d")
'	
'	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Completed", "EditorButton", "Completed")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Completed","Caption"," ")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Completed", "MaxWidth",100)
'
'F.Intrinsic.Control.ExitSub
'
'F.Intrinsic.Control.Label("Display_Data_Err")
'F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
'	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
'	F.Intrinsic.UI.Msgbox(V.Local.sError)
'Function.Intrinsic.Control.EndIf


Program.Sub.Display_Data.End

Program.Sub.Show_Data.Start
F.Intrinsic.Control.SetErrorHandler("Show_Data_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.iWF.Declare(long)
v.Local.ssql.Declare(String)
v.Local.iret.Declare(long)
v.Local.stitle.Declare(String)
v.Local.istatus.Declare(long)
v.Local.i.Declare(long)

'


	f.Global.WorkFlow.GetIDFromTitle("Repair Process",v.Local.iWF)
		'get the ID to create the workflow
	f.Global.WorkFlow.GetTemplateIDFromTitle("Repair Process",v.Local.iWF)

	f.Intrinsic.Control.If(v.Local.iWF,=,-1)
			'inform the user there is no template
			f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title Repair Process")
			f.Intrinsic.Control.CallSub(form_unload)
	f.Intrinsic.Control.EndIf

'Function.Intrinsic.Debug.InvokeDebugger
'Function.Intrinsic.Debug.Stop

'	v.Local.ssql.Set("select distinct Ord.order_no AS SOH,name_Customer,Customer_PO,Contact,ORD.Product_Line as 'PL',Ship_Via as 'Ship Via',Date_Due from v_Order_Header OH left join v_customer_master Cust on OH.customer = Cust.customer  join v_order_lines as ORD on OH.order_no = ORD.order_no  ")
'	f.Intrinsic.String.Build("{0}join v_ORDER_BILL_TO BILL on OH.order_no = BILL.order_no  where Ord.QTY_BO >0 and ORD.Product_Line between 'R1' and 'R5' order by Ord.order_no ",v.Local.ssql,v.Local.ssql)

'	v.Local.ssql.Set("select distinct Ord.order_no AS SOH,Cust.name_Customer,Customer_PO,Contact,ORD.Product_Line as 'PL',Ship_Via as 'Ship Via',Date_Due,rtrim(ltrim(OH.code_sort)) as ISS,OH.salesperson as OSS,OH.user_1 as 'End User',OH.user_2 as 'Location',OH.user_3 as 'Product',CONVERT(0,SQL_BIT) as 'EOM Billing','Hot' as Urgency from v_Order_Header OH left join v_customer_master Cust on OH.customer = Cust.customer  join v_order_lines as ORD on OH.order_no = ORD.order_no  ")
'	f.Intrinsic.String.Build("{0}join v_ORDER_BILL_TO BILL on OH.order_no = BILL.order_no  where ORD.Product_Line between 'R1' and 'R8' order by Ord.order_no ",v.Local.ssql,v.Local.ssql)


	v.Local.ssql.Set("select distinct Ord.order_no AS SOH,Cust.name_Customer,Customer_PO,Contact,ORD.Product_Line as 'PL',Ship_Via as 'Ship Via',Ord.Date_Item_PROM,rtrim(ltrim(ORD.Group_lines)) as ISS,OH.salesperson as OSS,OH.user_1 as 'End User',OH.user_2 as 'Location',OH.user_3 as 'Product',CASE WHEN EOMBilling IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(EOMBilling,SQL_BIT)  END AS 'EOMBilling',Urgency,' ' as SFlagHdr from v_Order_Header OH left join v_customer_master Cust on OH.customer = Cust.customer  join v_order_lines as ORD on OH.order_no = ORD.order_no  ")
	f.Intrinsic.String.Build("{0}join v_ORDER_BILL_TO BILL on OH.order_no = BILL.order_no left Join GCG_4391_RepairHdr GCG on OH.order_no = GCG.SO  join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}'",v.Local.ssql,v.Global.sScreen,v.Local.ssql)

'	f.Intrinsic.String.Build("{0} union select job+suffix as order_no,Cust.name_Customer,'' as contact,customer_PO,product_line,'' as shipvia,date_due ,rtrim(ltrim(JOB.code_sort)) as ISS,JOB.salesperson as OSS,'' as 'End User','' as Location,'' as Product,",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} CASE WHEN EOMBilling IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(EOMBilling,SQL_BIT)  END AS 'EOMBilling','' as Urgency,' ' as SFlagHdr  ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} from  v_job_header JOB left join v_customer_master Cust on JOB.customer = Cust.customer left Join GCG_4391_RepairHdr GCG on job+suffix = GCG.SO where year(Date_Closed) = '1900' and CAST(Sales_order AS DOUBLE) =0   and JOb.Product_Line between 'R1' and 'R8' order by order_no ",v.Local.ssql,v.Local.ssql)

	f.Intrinsic.String.Build("{0} union select JOB.job+JOB.suffix as order_no,Cust.name_Customer,customer_PO,'' as contact,product_line,'' as shipvia,date_due ,rtrim(ltrim(JOB.code_sort)) as ISS,JOB.salesperson as OSS,'' as 'End User',Usr.user_6 as 'Location',Usr.user_7 as 'Product',",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} CASE WHEN EOMBilling IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(EOMBilling,SQL_BIT)  END AS 'EOMBilling','' as Urgency,' ' as SFlagHdr  ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} from  v_job_header JOB left join WO_USER_FLDS USR on Job.Job = Usr.Job and Job.suffix = Usr.suffix left join v_customer_master Cust on JOB.customer = Cust.customer left Join GCG_4391_RepairHdr GCG on JOB.job+JOB.suffix = GCG.SO join GCG_4391_PL PLMast on PLMast.PL = JOB.Product_Line where year(Date_Closed) = '1900' and CAST(Sales_order AS DOUBLE) =0 and dash_type = '{1}' order by order_no ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)

'	v.Local.ssql.Set("select distinct Ord.order_no AS SOH,name_Customer,Customer_PO,Contact,ORD.Product_Line as 'PL',Ship_Via as 'Ship Via',Date_Due,rtrim(ltrim(OH.code_sort)) as ISS,salesperson as OSS,user_1 as 'User Field 1',user_2 as 'User Field 2',user_3 as 'User Field 3' from v_Order_Header OH left join v_customer_master Cust on OH.customer = Cust.customer  join v_order_lines as ORD on OH.order_no = ORD.order_no  ")
'	f.Intrinsic.String.Build("{0}join v_ORDER_BILL_TO BILL on OH.order_no = BILL.order_no  where Ord.QTY_BO >0 and ORD.Product_Line between 'R1' and 'R8' ",v.Local.ssql,v.Local.ssql)
'	
'	f.Intrinsic.String.Build("{0} union select distinct job AS SOH,' ' as name_Customer,Customer_PO,' ' as Contact,Product_Line as 'PL',' ' as 'Ship Via',",v.Local.ssql,v.Local.ssql)
' 	f.Intrinsic.String.Build("{0} Date_Due,rtrim(ltrim(code_sort)) as ISS,salesperson as OSS,' ' as 'User Field 1',' ' as 'User Field 2',' ' as 'User Field 3' ,",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} from v_job_header where CONVERT(sales_order,SQL_NUMERIC) >0 and date_closed <> '1900-01-01' and ORD.Product_Line between 'R1' and 'R8',",v.Local.ssql,v.Local.ssql)

'F.Intrinsic.Debug.InvokeDebugger
'
'F.Intrinsic.Debug.Stop

	F.Data.DataTable.CreateFromSql(v.Global.sgHdrView,"conx",v.Local.sSql,True)
	F.Data.DataView.Create(v.Global.sgHdrView,v.Global.sgHdrView)
	gui.Form.GsGridWF.AddGridViewFromDataView(v.Global.sgHdrView,v.Global.sgHdrView,v.Global.sgHdrView)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","Caption","Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","HeaderFontBold","True")

'	gui.Form.GsGridWF.SetGridViewProperty("Header","Editable",False)
'	gui.Form.GsGridWF.SetGridViewProperty("Header","readonly",True)

	gui.Form.GsGridWF.GetColumnCount(v.Global.sgHdrView,v.Local.iret)
	f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
		gui.Form.GsGridWF.GetColumnNamebyIndex(v.Global.sgHdrView,v.Local.i,v.Local.stitle)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,v.Local.stitle,"AllowEdit",False)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,v.Local.stitle,"ReadOnly",True)

		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,v.Local.stitle,"HeaderFontBold","True")
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,v.Local.stitle,"HeaderBackColor","#d3d3d3")
	f.Intrinsic.Control.Next(v.Local.i)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"EOMBilling","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"EOMBilling","ReadOnly",False)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Urgency","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Urgency","ReadOnly",False)

	gui.Form.GsGridWF.ColumnEdit(v.Global.sgHdrView,"Urgency","Dropdownlist","*!*Hot*!*Urgent*!*Normal*!*Spare Pump*!*Follow Up*!*Complete")


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","Caption","Customer Name")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Date_Item_PROM","Caption","Due Date")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView, "Date_Item_PROM", "DisplayCustomDatetime", "d")


	gui.Form.GsGridWF.AddStyleFormatCOndition(v.Global.sgHdrView, "SOH", "tagName1","NotEqual","1")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "SOH", "tagName1", "backcolor", "#C3FDB8")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "SOH", "tagName1", "ApplyToRow", True)

	gui.Form.GsGridWF.AddStyleFormatCondition(v.Global.sgHdrView,"SOH","Parentorange","Expression","len([SOH])<>7")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"SOH","Parentorange","Forecolor","Magenta")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"SOH","Parentorange","ApplyToRow",True)


	gui.Form.GsGridWF.AddStyleFormatCondition(v.Global.sgHdrView,"EOMBilling","Parentorange","Expression","[EOMBilling] = 1")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"EOMBilling","Parentorange","backcolor","Orange")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"EOMBilling","Parentorange","ApplyToRow",True)

	gui.Form.GsGridWF.AddStyleFormatCondition(v.Global.sgHdrView,"Urgency","Parentorange","Expression","[Urgency] = 'Hot'")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"Urgency","Parentorange","backcolor","Yellow")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"Urgency","Parentorange","ApplyToRow",True)

''	Gui.Form.GsGridControlName.HideRow(sGridview [string], iRowIndex [long], bHide/Unhide [Boolean])
	gui.Form.GsGridWF.AddSummaryItem(v.Global.sgHdrView, "name_Customer", "name_Customer", "Count", "Total No of Jobs :", "", "")


F.Intrinsic.Debug.Stop


'	v.Local.ssql.Set("select CASE WHEN ORD.Record_No = '' THEN ORD.order_no WHEN ORD.Record_No <> '' THEN ORD.order_no + '-' + ORD.Record_No END AS SOD")
'	f.Intrinsic.String.Build("{0} ,CASE WHEN WO.Suffix = '' THEN WO.Job WHEN WO.Suffix <> '' THEN WO.Job + '-' + WO.Suffix END AS WO ,CASE WHEN Est_Quote IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Est_Quote,SQL_BIT)  END AS Est_Quote,",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} CASE WHEN Disassembly IS NULL THEN '' else Disassembly  END AS Disassembly,CASE WHEN Firm_Quote_Req IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Firm_Quote_Req,SQL_BIT)  END AS Firm_Quote_Req,UpdateBOM1_DT,CASE WHEN Quote_New_Sub IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_New_Sub,SQL_BIT)  END AS Quote_New_Sub, Quote_New_Eng,Bond_Job_5K,Send_TY_5K,CASE WHEN Order_Parts IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Order_Parts,SQL_BIT)  END AS Order_Parts,PartsDue,CASE WHEN Routing IS NULL THEN '' else Routing  END AS Routing,CASE WHEN Machining IS NULL THEN '' else Machining  END AS Machining,CASE WHEN Assembly IS NULL THEN '' else Assembly  END AS Assembly,FS_Scheduled,CASE WHEN Shipper IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Shipper,SQL_BIT)  END AS Shipper,CASE WHEN Request_F5_Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Request_F5_Invoice,SQL_BIT)  END AS Request_F5_Invoice,",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} CASE WHEN As_Shipped_Report IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(As_Shipped_Report,SQL_BIT)  END AS As_Shipped_Report,CASE WHEN Dash.Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Dash.Invoice,SQL_BIT)  END AS Invoice,Notes,ORD.Product_Line as 'PLDET',ORD.order_no as SO,ORD.Record_No as So_Ln,'' as Quote,' ' as SFlag from order_header OH ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} join v_order_lines as ORD on OH.order_no = ORD.order_no  and OH.Record_No = ORD.Record_No  left join order_to_wo as WO on  ORD.order_no = WO.order_no and Ord.Record_No = Wo.Order_line  ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} left join GCG_4391_WFDashboard as Dash on  ORD.order_no = Dash.Sales_Order and Ord.Record_No = Dash.Sales_Line join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}' ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)

	v.Local.ssql.Set("select CASE WHEN ORD.Record_No = '' THEN ORD.order_no WHEN ORD.Record_No <> '' THEN ORD.order_no + '-' + ORD.Record_No END AS SOD")
	f.Intrinsic.String.Build("{0} ,CASE WHEN WO.Suffix = '' THEN WO.Job WHEN WO.Suffix <> '' THEN WO.Job + '-' + WO.Suffix END AS WO ,CASE WHEN Est_Quote IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Est_Quote,SQL_BIT)  END AS Est_Quote,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} CASE WHEN Disassembly IS NULL THEN '' else Disassembly  END AS Disassembly,CASE WHEN Firm_Quote_Req IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Firm_Quote_Req,SQL_BIT)  END AS Firm_Quote_Req,UpdateBOM1_DT,CASE WHEN Quote_New_Sub IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_New_Sub,SQL_BIT)  END AS Quote_New_Sub, Quote_New_Eng,Bond_Job_5K,Send_TY_5K,CASE WHEN Order_Parts IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Order_Parts,SQL_BIT)  END AS Order_Parts,PartsDue,CASE WHEN Routing IS NULL THEN '' else Routing  END AS Routing,CASE WHEN Machining IS NULL THEN '' else Machining  END AS Machining,CASE WHEN Assembly IS NULL THEN '' else Assembly  END AS Assembly,FS_Scheduled,CASE WHEN Shipper IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Shipper,SQL_BIT)  END AS Shipper,CASE WHEN Request_F5_Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Request_F5_Invoice,SQL_BIT)  END AS Request_F5_Invoice,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} CASE WHEN As_Shipped_Report IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(As_Shipped_Report,SQL_BIT)  END AS As_Shipped_Report,CASE WHEN Dash.Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Dash.Invoice,SQL_BIT)  END AS Invoice,Notes,ORD.Product_Line as 'PLDET',ORD.order_no as SO,ORD.Record_No as So_Ln,'' as Quote,' ' as SFlag  ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} from v_order_lines as ORD left join order_to_wo as WO on  ORD.order_no = WO.order_no and Ord.Record_No = Wo.Order_line  ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} left join GCG_4391_WFDashboard as Dash on  ORD.order_no = Dash.Sales_Order and Ord.Record_No = Dash.Sales_Line join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}' ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)


	f.Intrinsic.String.Build("{0} Union select CASE WHEN JHdr.suffix = '' THEN JHdr.Job WHEN JHdr.suffix  <> '' THEN JHdr.Job + '-' + JHdr.suffix END AS SOD,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN JHdr.suffix = '' THEN JHdr.Job WHEN JHdr.suffix  <> '' THEN JHdr.Job + '-' + JHdr.suffix END AS WO ,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN Est_Quote IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Est_Quote,SQL_BIT)  END AS Est_Quote,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN Disassembly IS NULL THEN '' else Disassembly  END AS Disassembly,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN Firm_Quote_Req IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Firm_Quote_Req,SQL_BIT)  END AS Firm_Quote_Req,UpdateBOM1_DT,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN Quote_New_Sub IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_New_Sub,SQL_BIT)  END AS Quote_New_Sub, Quote_New_Eng,Bond_Job_5K,Send_TY_5K,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN Order_Parts IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Order_Parts,SQL_BIT)  END AS Order_Parts,PartsDue,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN Routing IS NULL THEN '' else Routing  END AS Routing,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN Machining IS NULL THEN '' else Machining  END AS Machining,CASE WHEN Assembly IS NULL THEN '' else Assembly  END AS Assembly,FS_Scheduled,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN Shipper IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Shipper,SQL_BIT)  END AS Shipper,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN Request_F5_Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Request_F5_Invoice,SQL_BIT)  END AS Request_F5_Invoice,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN As_Shipped_Report IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(As_Shipped_Report,SQL_BIT)  END AS As_Shipped_Report,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}CASE WHEN Dash.Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Dash.Invoice,SQL_BIT)  END AS Invoice,Notes,product_line as 'PLDET',job+suffix as SO,' ' as So_Ln,'' as Quote,' ' as SFlag ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} from v_job_header JHdr left join GCG_4391_WFDashboard as Dash on  job+suffix = Dash.Sales_Order join GCG_4391_PL PLMast on PLMast.PL = JHdr.Product_Line where year(Date_Closed) = '1900' and CAST(JHdr.Sales_order AS DOUBLE) =0  and dash_type = '{1}'  order by ORD.order_no,ORD.Record_No",v.Local.ssql,v.Global.sScreen,v.Local.ssql)


	F.Data.DataTable.CreateFromSql(v.Global.sgREL,"conx",v.Local.sSql,True)
	F.Data.DataView.Create(v.Global.sgREL,v.Global.sgDetView)
	F.Data.DataTable.AddRelation(v.Global.sgHdrView,"SOH",v.Global.sgREL,"SO")
	gui.Form.GsGridWF.AddGridViewFromDataView(v.Global.sgDetView,v.Global.sgHdrView,v.Global.sgDetView)

	'	'---code to auto poulate data table from dictionary
	V.Local.bDictExists.Declare(boolean)

	F.Data.Dictionary.Exists("WFDIC",V.Local.bDictExists)
	F.Intrinsic.Control.If(V.Local.bDictExists,=,True)
		F.Data.Dictionary.Close("WFDIC")
	F.Intrinsic.Control.EndIf

'
'F.Intrinsic.Debug.InvokeDebugger
'

'	v.Local.ssql.Set("select distinct Ord.order_no SOH,OH.Quote Quote from Order_Header OH  left join v_customer_master Cust on OH.customer = Cust.customer join v_order_lines as ORD on OH.order_no = ORD.order_no and OH.Record_No = Ord.Record_No  ")
'	f.Intrinsic.String.Build("{0} join v_QUOTE_LINES QO on OH.QUOTE = QO.QUOTE_NO and  QO.QUOTE_WON = 'W' where Ord.QTY_BO >0 and ORD.Product_Line between 'R1' and 'R5' order by Ord.order_no, Ord.Record_No ",v.Local.ssql,v.Local.ssql)
'	'and ORD.Product_Line between 'R1' and 'R5'

	v.Local.ssql.Set("select distinct OH.order_no SOH,OH.Quote Quote from Order_Header OH  left join v_customer_master Cust on OH.customer = Cust.customer   ")
	f.Intrinsic.String.Build("{0} join v_QUOTE_LINES QO on OH.QUOTE = QO.QUOTE_NO  where OH.order_no in (select ORD.order_no from  v_order_lines as ORD join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where OH.order_no = ORD.order_no and dash_type = '{1}' ) ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)
	'and ORD.Product_Line between 'R1' and 'R5'

	F.Data.Dictionary.CreateFromSQL("WFDIC","conx",v.Local.ssql)
	F.Data.Dictionary.SetDefaultReturn("WFDIC","")

	F.Data.DataTable.FillFromDictionary(v.Global.sgREL,"WFDIC","SO","Quote")
''	=======================================


'F.Intrinsic.Debug.InvokeDebugger
'
'

	f.Intrinsic.Control.CallSub(enableapperance)
'	gui.Form.GsGridWF.MainView("Header")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "SO", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "SO_Ln", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Quote", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "PLDET", "Visible", False)
	'save flag
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Sflag", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView, "SflagHdr", "Visible", False)


	'Remove
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Quote", "Visible", True)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Est_Quote","Caption","Estimated Quote")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","Caption","Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","CellForeColor","Blue")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","Caption","Work Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","CellForeColor","Blue")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Disassembly","Caption","Disassembly")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Firm_Quote_Req","Caption","Firm Quote")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"UpdateBOM1_DT","Caption","Update BOM")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_New_Sub","Caption","Quote New Sub")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_New_Eng","Caption","Quote New Eng")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Bond_Job_5K","Caption","Bond Job over $50,000")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Send_TY_5K","Caption","Thank you Card > $50k")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","Caption","Order Parts")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsDue","Caption","Parts Due")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Routing","Caption","Routing")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Machining","Caption","Machining")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Assembly","Caption","Assembly")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"FS_Scheduled","Caption","FS Scheduled")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper","Caption","Shipper")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Request_F5_Invoice","Caption","Request FS Invoice")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"As_Shipped_Report","Caption","As Shipped Report")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice","Caption","Invoice")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","Caption","Notes")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","CellBackColor","LightYellow")



	gui.Form.GsGridWF.GetColumnCount(v.Global.sgDetView,v.Local.iret)
	f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
'	Gui.Form.GsGridWF.GetCellValueByColumnName(v.Global.sgDetView,"TYPE",V.Args.RowIndex,V.Local.sType)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
		gui.Form.GsGridWF.GetColumnNamebyIndex(v.Global.sgDetView,v.Local.i,v.Local.stitle)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"HeaderWordWrap","wrap")
'		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"MinWidth",50)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"HeaderFontBold","True")
	f.Intrinsic.Control.Next(v.Local.i)

	f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type1","Start",2)


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","MinWidth",80)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","MinWidth",80)

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Est_Quote","MinWidth",70)
'
'	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Quote_New_Sub","Dropdownlist","Complete*!*N/A")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_New_Sub","MinWidth",80)


	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Quote_New_Eng","Dropdownlist","Complete*!*N/A")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_New_Eng","MinWidth",80)
	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Bond_Job_5K","Dropdownlist","Complete*!*N/A")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Bond_Job_5K","MinWidth",80)
	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Send_TY_5K","Dropdownlist","Complete*!*N/A")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Send_TY_5K","MinWidth",80)


	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Disassembly","Dropdownlist","Not Started*!*In Process*!*Completed*!*Not Required")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Disassembly","MinWidth",80)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "UpdateBOM1_DT", "DisplayCustomDatetime", "d")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"UpdateBOM1_DT","MinWidth",70)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "PartsDue", "DisplayCustomDatetime", "d")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsDue","MinWidth",70)

	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Routing","Dropdownlist","Not Started*!*In Process*!*Completed*!*Not Required")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Routing","MinWidth",80)

	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Machining","Dropdownlist","Not Started*!*In Process*!*Completed*!*Not Required")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Machining","MinWidth",80)

	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Assembly","Dropdownlist","Not Started*!*In Process*!*Completed*!*Not Required")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Assembly","MinWidth",80)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","MinWidth",250)


'remove
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Est_Quote","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Est_Quote","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"UpdateBOM1_DT","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"UpdateBOM1_DT","ReadOnly",False)



'
'F.Intrinsic.Debug.InvokeDebugger
'
'

'
'


	'Remove this
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Est_Quote","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Est_Quote","ReadOnly",False)
'	
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Firm_Quote_Req","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Firm_Quote_Req","ReadOnly",False)

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"UpdateBOM1_DT","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"UpdateBOM1_DT","ReadOnly",False)

'
'	gui.Form.GsGridWF.SetCellProperty(v.Global.sgDetView,10,1,"Locked",True)
'	gui.Form.GsGridWF.SetCellProperty(v.Global.sgDetView,10,2,"Locked",True)



	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_New_Sub","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_New_Sub","ReadOnly",False)
	
	
	

	gui.Form.GsGridWF.MainView(v.Global.sgHdrView)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Show_Data_Err")

F.Intrinsic.Control.If(V.Ambient.ErrorNumber,=,21034)
	f.Intrinsic.Control.CallSub(pouplate_hdrdup)
F.Intrinsic.Control.elseIf(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

'
Program.Sub.Show_Data.End

Program.Sub.GsGridWF_RowCellClick.Start
F.Intrinsic.Control.SetErrorHandler("GsGridWF_CellValueChanged_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iRet.Declare(long)
V.Local.sRow.Declare(String)
V.Local.sQO.Declare(String)
V.Local.sSO.Declare(String)
v.Local.PType.Declare(String)
V.Local.sFile.Declare(string)
V.Local.iCol.Declare(long)


'f.Intrinsic.Control.If(V.Args.Value,=,False)
'		gui.Form.GsGridWF.SetCellValue(v.Global.sgDetView,10,V.Args.RowIndex,"01/01/1900")
'		gui.Form.GsGridWF.SetCellProperty(v.Global.sgDetView, 10, V.Args.RowIndex, "Locked" ,False)
'	f.Intrinsic.Control.Else
'		gui.Form.GsGridWF.SetCellProperty(v.Global.sgDetView, 10, V.Args.RowIndex, "Locked" ,True)
'f.Intrinsic.Control.EndIf 
'
'f.Intrinsic.Control.ExitSub 

'
''gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,0,V.Args.RowIndex,V.Local.iRet)
'
'
'Gui.frmResched.GsGCRouter.SetCellAppearance("gvRouter",6,V.Local.iCnt,"BackColor","WhiteSmoke")

'''
''	f.Intrinsic.UI.Msgbox(V.Args.Value)
'	f.Intrinsic.Control.If(V.Args.Value,=,False)
'		gui.Form.GsGridWF.SetCellAppearance(v.Global.sgDetView, 10,  V.Args.RowIndex, "forecolor", "WhiteSmoke")
''		gui.Form.GsGridWF.SetCellDisplayFormat(v.Global.sgDetView,10,v.Args.RowIndex,"CustomNumeric","p")
'	f.Intrinsic.Control.Else
'		gui.Form.GsGridWF.SetCellAppearance(v.Global.sgDetView, 10,  V.Args.RowIndex, "forecolor", "White")
''		gui.Form.GsGridWF.SetCellDisplayFormat(v.Global.sgDetView,10,v.Args.RowIndex,"CustomNumeric","p")
'	f.Intrinsic.Control.EndIf 
'''	
'	f.Intrinsic.Control.ExitSub 


'f.Intrinsic.Control.If(V.Args.column,<>,"Est_Quote")
'f.Intrinsic.Control.andIf(V.Args.column,<>,"Quote_Required")
'f.Intrinsic.Control.andIf(V.Args.column,<>,"Update_BOM1")
'	f.Intrinsic.Control.ExitSub 
'f.Intrinsic.Control.EndIf 

'gui.Form..MousePointer(1)
'gui.Form..enabled(false)

''
'F.Intrinsic.Debug.InvokeDebugger
'
'

'Shipper Column used in REPAIR & ISSNEWSALES
f.Intrinsic.Control.If(V.Args.column,=,"Shipper")
	f.Intrinsic.Control.If(V.Global.sScreen,=,"Show_Data")
		f.Intrinsic.Control.ExitSub 
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.EndIf 





'v.Local.iCol.Declare(long)


'F.Intrinsic.Debug.InvokeDebugger
'
'F.Intrinsic.Debug.Stop

'f.Intrinsic.UI.Msgbox("GsGridWF_RowCellClick")
'	f.Intrinsic.UI.Msgbox(V.Args.column)

'	Function.Data.DataTable.SetValue(v.Global.sgREL,1,v.Local.iCol , "1")
'	Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)

'
f.Intrinsic.Control.If(V.Args.column,=,"SO","OR",V.Args.column,=,"SOD",V.Args.column,=,"SODUP")
	'SO_NO
	'SO_Line
	f.Intrinsic.Control.If(V.Args.column,<>,"SODUP")
		gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,0,V.Args.RowIndex,V.Local.sSO)
	f.Intrinsic.Control.Else
		gui.Form.GsGridWF.GetCellValue("DView",0,V.Args.RowIndex,V.Local.sSO)
	f.Intrinsic.Control.EndIf 	

'	f.Intrinsic.Control.If(V.Local.sSO.Trim,<>,"")
'		f.Intrinsic.String.Split(V.Local.sSO,"-",V.Local.sSO)
'		F.Intrinsic.String.Concat(V.Local.sSO(0),"!*!","O","!*!","*!*ZDR*!*",V.Local.sSO)
'		F.Global.General.CallWrapperSync(200000,V.Local.sSO)
'	f.Intrinsic.Control.EndIf 

	f.Intrinsic.Control.If(V.Local.sSO.Trim,<>,"")
		f.Intrinsic.String.Split(V.Local.sSO,"-",V.Local.sSO)
		f.Intrinsic.Control.If(V.Local.sSO(0).Length,=,7)
			F.Intrinsic.String.Concat(V.Local.sSO(0),"!*!","O","!*!","*!*ZDR*!*",V.Local.sSO)
			F.Global.General.CallWrapperSync(200000,V.Local.sSO)
		f.Intrinsic.Control.else
			F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sSO,V.Local.sSO(1),V.Local.sSO)
			F.Global.General.CallWrapperSync(2009,V.Local.sSO)
		f.Intrinsic.Control.EndIf 
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.elseIf(V.Args.column,=,"WO")
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,1,V.Args.RowIndex,V.Local.sSO)
	f.Intrinsic.Control.If(V.Local.sSO.Trim,<>,"")
'	V.Local.sSO.Set("000155-001")
		f.Intrinsic.String.Split(V.Local.sSO,"-",V.Local.sSO)
'		F.Intrinsic.String.Build("7!*!{0}!*!{1}!*!A",V.Local.sSO(0),V.Local.sSO(1),V.Local.sSO)
'		F.Global.General.CallWrapperSync(450000,V.Local.sSO)
		F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sSO,V.Local.sSO(1),V.Local.sSO)
		F.Global.General.CallWrapperSync(2009,V.Local.sSO)
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.EndIf 	


'f.Intrinsic.Control.If(V.Args.column,=,"Est_Quote")
'	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
''		gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,24,V.Args.RowIndex,V.Local.sQO)
''		f.Intrinsic.Control.If(V.Local.sQO.Trim,<>,"")
''			gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,2,V.Args.RowIndex,True)
'			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'
'			gui.Form..enabled(false)
'			gui.frmNestedQuote..Caption("Quote - Repair")
'			V.Global.sSubScreen.Set("QuoteREP")
'			f.Intrinsic.Control.CallSub(est_quote,"cROW",V.Args.RowIndex,"QType","EST")
'			gui.frmNestedQuote..Show
'			gui.frmNestedQuote..AlwaysOnTop(True)
''		f.Intrinsic.Control.Else
''			f.Intrinsic.UI.Msgbox("Quote not found")
''			f.Intrinsic.Control.ExitSub 
''		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.EndIf 
''f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_Required")
''Control or Field Service Quote
'f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_Required","OR",V.Args.column,=,"Quote_RequiredCO") 
'	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
''		f.Intrinsic.Control.If(V.Args.column,=,"Quote_Required")
''			gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,22,V.Args.RowIndex,V.Local.sQO)
''		f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_RequiredCO")
''			gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,2,V.Args.RowIndex,V.Local.sQO)
''		f.Intrinsic.Control.EndIf 
'		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'
''		f.Intrinsic.Control.If(V.Local.sQO.Trim,<>,"")
'			f.Intrinsic.Control.If(V.Args.column,=,"Quote_Required")
'				'field service Quote
'				v.Local.PType.Set("FSQ")
''				gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,4,V.Args.RowIndex,True)
'			f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_RequiredCO")
'				'Control Quote
'				v.Local.PType.Set("COQ")
'				'8 13 14
''				gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,8,V.Args.RowIndex,True)
'			f.Intrinsic.Control.EndIf
'			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'			gui.Form..enabled(false)
'			f.Intrinsic.Control.CallSub(Quote_RequiredFS,"cROW",V.Args.RowIndex,"QType",v.Local.PType)
'			gui.frmNestedQuote..Caption("Quote Required")
'			V.Global.sSubScreen.Set("QuoteFS")
'			gui.frmNestedQuote..Show
'			gui.frmNestedQuote..AlwaysOnTop(True)
''		f.Intrinsic.Control.Else
''			f.Intrinsic.UI.Msgbox("Quote not found")
''			f.Intrinsic.Control.ExitSub 
''		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"Firm_Quote_Req")
'	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
'			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'			gui.Form..enabled(false)
'			f.Intrinsic.Control.CallSub(Est_Quote,"cROW",V.Args.RowIndex,"QType","FRM")
'			gui.frmNestedQuote..Caption("Firm Quote Required")
'			V.Global.sSubScreen.Set("QuoteREP")
'			gui.frmNestedQuote..Show
'			gui.frmNestedQuote..AlwaysOnTop(True)
''		f.Intrinsic.Control.Else
''			f.Intrinsic.UI.Msgbox("Quote not found")
''			gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,5,V.Args.RowIndex,False)
''			f.Intrinsic.Control.ExitSub 
''		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"IsBid_Quote")
'	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
''		gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,2,V.Args.RowIndex,V.Local.sQO)
''		f.Intrinsic.Control.If(V.Local.sQO.Trim,<>,"")
''			gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,5,V.Args.RowIndex,True)
'			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'			gui.Form..enabled(false)
'			f.Intrinsic.Control.CallSub(Quote_ISS,"cROW",V.Args.RowIndex)
'			gui.frmNestedQuote..Caption("New Bid Quote")
'			V.Global.sSubScreen.Set("QuoteISS")
''			Gui.frmNestedQuote.GsGridQuote.Size(19005,2430)
'			gui.frmNestedQuote..Show
'			gui.frmNestedQuote..AlwaysOnTop(True)
''		f.Intrinsic.Control.Else
''			f.Intrinsic.UI.Msgbox("Quote not found")
'''			gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,5,V.Args.RowIndex,False)
'''			F.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column,False)
''			f.Intrinsic.Control.ExitSub 
''		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"IsBid_SO")
'	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
''		gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,15,V.Args.RowIndex,True)
'		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'		gui.Form..enabled(false)
'		f.Intrinsic.Control.CallSub(SO_ISS,"cROW",V.Args.RowIndex)
'		gui.frm2..Caption("New Bid Sales")
'		V.Global.sSubfrmScreen.Set("SOISS")
''		Gui.frmNestedQuote.GsGridQuote.Size(19005,2430)
'		gui.frm2..enabled(True)
'		gui.frm2..Show
'		gui.frm2..AlwaysOnTop(True)
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"Controls_Programming")
'	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
''		gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,14,V.Args.RowIndex,True)
'		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'		gui.Form..enabled(false)
'		f.Intrinsic.Control.CallSub(control_program,"cROW",V.Args.RowIndex)
'		gui.frm2..Caption("Control Programming")
'
'		V.Global.sSubfrmScreen.Set("COPROG")
''		Gui.frmNestedQuote.GsGridQuote.Size(19005,2430)
'		gui.frm2..Show
'		gui.frm2..AlwaysOnTop(True)
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"Verify_ShipSchedule","OR",V.Args.column,=,"SendOut_Pricing",V.Args.column,=,"Issue_Material",V.Args.column,=,"Shipper",V.Args.column,=,"HFAPO_Request",V.Args.column,=,"Send_Customer",V.Args.column,=,"Revise_Submittal",V.Args.column,=,"Approval_Submitted",V.Args.column,=,"Release_HFAPO",V.Args.column,=,"Quote_Sent",V.Args.column,=,"Customer_Approval",V.Args.column,=,"Submittals_Approval")
'	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
'		gui.Form..enabled(false)
'
'		f.Intrinsic.Control.If(V.Args.column,=,"Issue_Material")
'			v.Local.PType.Set("S001")
'			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"Verify_ShipSchedule")
'			v.Local.PType.Set("S002")
'			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"Shipper")
'			v.Local.PType.Set("S003")
'			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"SendOut_Pricing")
'			v.Local.PType.Set("S004")
'			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"HFAPO_Request")
'			v.Local.PType.Set("SB01")
'			gui.frm2..enabled(false)
'			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"Send_Customer")
'			v.Local.PType.Set("SB02")
'			gui.frm2..enabled(false)
'			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"Revise_Submittal")
'			v.Local.PType.Set("SB03")
'			gui.frm2..enabled(false)
'			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"Approval_Submitted")
'			v.Local.PType.Set("SB04")
'			gui.frm2..enabled(false)
'			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"Release_HFAPO")
'			v.Local.PType.Set("SB05")
'			gui.frm2..enabled(false)
'			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_Sent")
'			v.Local.PType.Set("S005")
'			gui.frm2..enabled(false)
'			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"Customer_Approval")
'			v.Local.PType.Set("S006")
'			gui.frm2..enabled(false)
'			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"Submittals_Approval")
'			v.Local.PType.Set("SB06")
'			gui.frm2..enabled(false)
'			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.EndIf 
''		f.Intrinsic.UI.Msgbox(v.Local.PType)
'		f.Intrinsic.Control.CallSub(NestedPUMP_ISS,"cROW",V.Args.RowIndex,"Pump_Type",v.Local.PType)
'		gui.frmNestedQuote..Caption("Pump Panel")
'		V.Global.sSubScreen.Set("Pump_ISS")
'		gui.frmNestedQuote..Show
'		gui.frmNestedQuote..AlwaysOnTop(True)
'	f.Intrinsic.Control.EndIf 
''f.Intrinsic.Control.elseIf(V.Args.column,=,"PartsNeeded")
'f.Intrinsic.Control.elseIf(V.Args.column,=,"PartsNeeded","OR",V.Args.column,=,"PartsNeeded_Cont")
'	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
'		f.Intrinsic.Control.If(V.Args.column,=,"PartsNeeded")
'			'field service Parts
'			v.Local.PType.Set("FSP")
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"PartsNeeded_Cont")
'			'Control parts
'			v.Local.PType.Set("COP")
'		f.Intrinsic.Control.EndIf
'		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'		gui.Form..enabled(false)
'		f.Intrinsic.Control.CallSub(Parts_FS,"cROW",V.Args.RowIndex,"PType",v.Local.PType)
'		gui.frmNestedQuote..Caption("Parts Needed")
'		V.Global.sSubScreen.Set("PartsFS")
'		gui.frmNestedQuote..Show
'		gui.frmNestedQuote..AlwaysOnTop(True)
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"Update_BOM1")
'	f.Intrinsic.Control.If(V.Args.Value,=,False)
'		F.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,"UpdateBOM1_DT",v.ambient.DBNULL)
'		'F.Data.DataTable.SetValue("ESTQUOTE",0,"Create_Calendar",v.Ambient.DBNULL)
'		F.Intrinsic.Control.ExitSub
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"SO","OR",V.Args.column,=,"SOD")
'	'SO_NO
'	'SO_Line
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,0,V.Args.RowIndex,V.Local.sSO)
'	f.Intrinsic.Control.If(V.Local.sSO.Trim,<>,"")
'		f.Intrinsic.String.Split(V.Local.sSO,"-",V.Local.sSO)
'		F.Intrinsic.String.Concat(V.Local.sSO(0),"!*!","O","!*!","*!*ZDR*!*",V.Local.sSO)
'		F.Global.General.CallWrapperSync(200000,V.Local.sSO)
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"WO")
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,1,V.Args.RowIndex,V.Local.sSO)
'	f.Intrinsic.Control.If(V.Local.sSO.Trim,<>,"")
''	V.Local.sSO.Set("000155-001")
'		f.Intrinsic.String.Split(V.Local.sSO,"-",V.Local.sSO)
''		F.Intrinsic.String.Build("7!*!{0}!*!{1}!*!A",V.Local.sSO(0),V.Local.sSO(1),V.Local.sSO)
''		F.Global.General.CallWrapperSync(450000,V.Local.sSO)
'		F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sSO,V.Local.sSO(1),V.Local.sSO)
'		F.Global.General.CallWrapperSync(2009,V.Local.sSO)
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"Pump_Check_In")
'	f.Intrinsic.Control.If(V.Args.Value,=,True)
'		f.Intrinsic.UI.Msgbox("Notify 712")
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"Was_Start_Job" ,"OR",V.Args.column,=,"StartUpJob")
'	f.Intrinsic.Control.If(V.Args.Value,=,True)
'		f.Intrinsic.UI.Msgbox("Notify Sales")
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_New_Sub")
'	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
''		f.Intrinsic.String.Build("{0}\GAB\GAS\GCG_4391_WFDashboard.g2u",V.Caller.PluginsDir,V.Local.sFile)
'''		F.Global.Task.CallASyncGas(V.Local.sFile,"IS*!*CALL",V.Local.iRet)
''		F.Global.Task.CallASyncGas(V.Local.sFile,"IS@CALL",V.Local.iRet)
''	f.Intrinsic.Control.EndIf
'		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'		f.Intrinsic.Control.CallSub("Quote_NewSub","cROW",V.Args.RowIndex)
'		gui.frmNestedQuote..Caption("Quote New Sub")
'		V.Global.sSubScreen.Set("QuoteNewSub")
'		gui.Form..enabled(false)
'		gui.frmNestedQuote..Show
'		gui.frmNestedQuote..AlwaysOnTop(True)
'	f.Intrinsic.Control.EndIf
'f.Intrinsic.Control.elseIf(V.Args.column,=,"Warranty_Job")
'	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
'		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
'		gui.Form..enabled(false)
'		f.Intrinsic.Control.CallSub(Warranty_Job,"cROW",V.Args.RowIndex)
'		gui.frmNestedQuote..Caption("Warranty Job")
'		V.Global.sSubScreen.Set("WarrantyJob")
'		gui.frmNestedQuote..Show
'		gui.frmNestedQuote..AlwaysOnTop(True)
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.Else
'	F.Intrinsic.Control.ExitSub
'f.Intrinsic.Control.EndIf 


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("GsGridWF_CellValueChanged_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.GsGridWF_RowCellClick.End

Program.Sub.GridMode.Start
F.Intrinsic.Control.SetErrorHandler("GridMode_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSql.Declare(String)
v.Local.iret.Declare(long)
v.Local.i.Declare(long)
v.Local.stitle.Declare(String)
v.Local.sret.Declare(String)
v.Local.bret.Declare(boolean)
v.Local.sheader.Declare(String)


Function.Data.Dictionary.Exists("DWFT", v.Local.bret)
f.Intrinsic.Control.If(v.Local.bret,=,true)
	Function.Data.Dictionary.Close("DWFT")
f.Intrinsic.Control.endif

'f.Intrinsic.String.Build("select description,ucase(rtrim(ltrim(User_Group)) +  '*!*' + rtrim(ltrim(SignOff_User_Grp))) from ATG_WFT_LINES where WFT_ID = {0} order by line",v.Args.WFID,v.Local.ssql)
f.Intrinsic.String.Build("select description,USR_GRP_FLAG  + '*!*' +  ucase(rtrim(ltrim(User_Group)) +  '*@*' + SIGNOFF_TYPE + '*!*' + rtrim(ltrim(SignOff_User_Grp))) from ATG_WFT_LINES where WFT_ID = {0} order by line",v.Args.WFID,v.Local.ssql)
Function.Data.Dictionary.CreateFromSQL("DWFT","conx",v.Local.ssql)
Function.Data.Dictionary.SetDefaultReturn("DWFT","")

'SIGNOFF_USER_GRP ,SIGNOFF_TYPE
'-1 USER 
'0  Group 
'
'USER_GROUP  USR_GRP_FLAG 
'USER then True
'GROUP then False
f.Intrinsic.Control.If(v.Args.SMODE,=,"Type1")
	gui.Form.GsGridWF.GetColumnCount(v.Global.sgDetView,v.Local.iret)
	f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)

		gui.Form.GsGridWF.GetColumnNamebyIndex(v.Global.sgDetView,v.Local.i,v.Local.sheader)
		Gui.Form.GsGridWF.GetColumnProperty(v.Global.sgDetView,v.Local.sheader, "Caption", v.Local.stitle)

	'	Function.Data.Dictionary.ReturnKeyFromValue("DWFT",V.Local.stitle.UCase,V.Local.sret)

		V.Local.sret.Set(v.Dictionary.DWFT![V.Local.stitle.UCase])

		f.Intrinsic.Control.If(V.Local.sret,<>,"")
			f.Intrinsic.String.Split(V.Local.sret,"*@*",V.Local.sret)

			f.Intrinsic.Control.CallSub("GetValue","User_Group",V.Local.sret(0),"SignOff",V.Local.sret(1))
			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,V.Local.sheader,"AllowEdit",v.Args.bRet)
			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,V.Local.sheader,"ReadOnly",v.Args.bRet.not)

			F.Intrinsic.Control.Label("GridMode_Next")
		f.Intrinsic.Control.EndIf 
	f.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.Control.elseIf(v.Args.SMODE,=,"Type2")
	gui.frmNestedQuote.GsGridQuote.GetColumnCount("Grid_ESTQUOTE",v.Local.iret)
	f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)

		gui.frmNestedQuote.GsGridQuote.GetColumnNamebyIndex("Grid_ESTQUOTE",v.Local.i,v.Local.sheader)
		gui.frmNestedQuote.GsGridQuote.GetColumnProperty("Grid_ESTQUOTE",v.Local.sheader, "Caption", v.Local.stitle)

	'	Function.Data.Dictionary.ReturnKeyFromValue("DWFT",V.Local.stitle.UCase,V.Local.sret)

		V.Local.sret.Set(v.Dictionary.DWFT![V.Local.stitle.UCase])

		f.Intrinsic.Control.If(V.Local.sret,<>,"")
			f.Intrinsic.String.Split(V.Local.sret,"*@*",V.Local.sret)

			f.Intrinsic.Control.CallSub("GetValue","User_Group",V.Local.sret(0),"SignOff",V.Local.sret(1))
			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",V.Local.sheader,"AllowEdit",v.Args.bRet)
			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",V.Local.sheader,"ReadOnly",v.Args.bRet.not)

			F.Intrinsic.Control.Label("GridMode_Next")
		f.Intrinsic.Control.EndIf 
	f.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.Control.elseIf(v.Args.SMODE,=,"Type3")
	gui.frm2.GsGridQuote.GetColumnCount("Grid_frm2",v.Local.iret)
	f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)

		gui.frm2.GsGridQuote.GetColumnNamebyIndex("Grid_frm2",v.Local.i,v.Local.sheader)
		gui.frm2.GsGridQuote.GetColumnProperty("Grid_frm2",v.Local.sheader, "Caption", v.Local.stitle)

	'	Function.Data.Dictionary.ReturnKeyFromValue("DWFT",V.Local.stitle.UCase,V.Local.sret)

		V.Local.sret.Set(v.Dictionary.DWFT![V.Local.stitle.UCase])

		f.Intrinsic.Control.If(V.Local.sret,<>,"")
			f.Intrinsic.String.Split(V.Local.sret,"*@*",V.Local.sret)

			f.Intrinsic.Control.CallSub("GetValue","User_Group",V.Local.sret(0),"SignOff",V.Local.sret(1))
			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",V.Local.sheader,"AllowEdit",v.Args.bRet)
			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",V.Local.sheader,"ReadOnly",v.Args.bRet.not)

			F.Intrinsic.Control.Label("GridMode_Next")
		f.Intrinsic.Control.EndIf 
	f.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.Control.endif


'============old code
'f.Intrinsic.String.Build("select line,description,SignOff_User_Grp,User_Group from ATG_WFT_LINES where WFT_ID = {0} order by line",v.Args.WFID,v.Local.ssql)
'F.ODBC.Connection!conx.OpenRecordsetRO("RST",V.Local.sSql)	
'
'F.Intrinsic.Control.DoUntil(V.ODBC.conx!RST.EOF,=,True)
'	f.Intrinsic.Control.CallSub("GetValue","Group",v.ODBC.conx!rst.FieldValTrim!User_Group,"User",v.ODBC.conx!rst.FieldValTrim!SIGNOFF_USER_GRP)
'	f.Intrinsic.Control.If(v.Args.SMODE,=,"Repair")
'		f.Intrinsic.Control.If(v.ODBC.conx!rst.FieldVal!line,=,1)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Est_Quote","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Est_Quote","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,3)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Disassembly","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Disassembly","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,4)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Firm_Quote_Req","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Firm_Quote_Req","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,5)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"UpdateBOM1_DT","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"UpdateBOM1_DT","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,6)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_New_Sub","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_New_Sub","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,7)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_New_Eng","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_New_Eng","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,8)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Bond_Job_5K","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Bond_Job_5K","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,9)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Send_TY_5K","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Send_TY_5K","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,10)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,11)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Routing","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Routing","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,12)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Machining","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Machining","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,13)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Assembly","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Assembly","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,14)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,15)
''			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Update_BOM2","AllowEdit",v.Args.bRet)
''			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Update_BOM2","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,16)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Request_F5_Invoice","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Request_F5_Invoice","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,17)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"As_Shipped_Report","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"As_Shipped_Report","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,18)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.endif
'	f.Intrinsic.Control.ElseIf(v.Args.SMODE,=,"Quote")
'		f.Intrinsic.Control.If(v.ODBC.conx!rst.FieldVal!line,=,1)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Opennew_quote_router","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Opennew_quote_router","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,2)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","PPP","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","PPP","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,3)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","RequestFS_Quote","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","RequestFS_Quote","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,4)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Send_Repair_Quote","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Send_Repair_Quote","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,5)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Customer_Approval","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Customer_Approval","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.ElseIf(v.Args.SMODE,=,"FieldService")
'		f.Intrinsic.Control.If(v.ODBC.conx!rst.FieldVal!line,=,1)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"FS_Request_Rec","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"FS_Request_Rec","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,2)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Define_Job_Spec","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Define_Job_Spec","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,3)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Required","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Required","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,4)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Start_SO","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Start_SO","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,5)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"CreateWO","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"CreateWO","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,6)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Schedule_Service","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Schedule_Service","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,7)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"VoiceConf","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"VoiceConf","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,8)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Email_conf_dt","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Email_conf_dt","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,9)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsNeeded","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsNeeded","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,10)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Sp_Equip","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Sp_Equip","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,11)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_Reports","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_Reports","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,12)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Reconfirm_Cust","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Reconfirm_Cust","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,13)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Process_WO_Comp","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Process_WO_Comp","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,14)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,15)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Pump_Check_In","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Pump_Check_In","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,16)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RGA","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RGA","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,17)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Do_return","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Do_return","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,18)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Was_Start_Job","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Was_Start_Job","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.endif
'	f.Intrinsic.Control.ElseIf(v.Args.SMODE,=,"QuoteFS")
'		f.Intrinsic.Control.If(v.ODBC.conx!rst.FieldVal!line,=,1)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Opennew_quote_router","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Opennew_quote_router","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,2)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote_app10k","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote_app10k","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,3)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","ISS_Quote_app","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","ISS_Quote_app","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,4)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Send_Quote","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Send_Quote","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,5)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Customer_Approval","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Customer_Approval","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.ElseIf(v.Args.SMODE,=,"PartsFS")
'		f.Intrinsic.Control.If(v.ODBC.conx!rst.FieldVal!line,=,1)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Order_PartsPO","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Order_PartsPO","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,2)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Commit_Partsstock","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Commit_Partsstock","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,3)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Receive_InParts","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Receive_InParts","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,4)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Shipper","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Shipper","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.ElseIf(v.Args.SMODE,=,"Buckeye")
'		f.Intrinsic.Control.If(v.ODBC.conx!rst.FieldVal!line,=,2)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Bill_DT","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Bill_DT","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,3)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Job_DT","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Job_DT","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,4)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"InspRpt_DT","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"InspRpt_DT","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,5)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Pics_DT","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Pics_DT","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,6)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_DT","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_DT","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,7)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper_DT","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper_DT","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,8)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Remove_DT","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Remove_DT","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,9)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Close","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Close","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.ElseIf(v.Args.SMODE,=,"ISSNewSales")
'		f.Intrinsic.Control.If(v.ODBC.conx!rst.FieldVal!line,=,1)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RFQ_Received","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RFQ_Received","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,2)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_Quote","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_Quote","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,3)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"FS_RFQ","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"FS_RFQ","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,4)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_RFQ","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_RFQ","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,5)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SendOut_Pricing","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SendOut_Pricing","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,6)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Follow_up","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Follow_up","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,7)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Double_CheckSheet","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Double_CheckSheet","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,8)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Router_Worksheet","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Router_Worksheet","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,9)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Approval_10k","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Approval_10k","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,10)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Sent","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Sent","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,11)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Customer_Approval","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Customer_Approval","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,12)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_SO","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_SO","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,13)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Create_SO","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Create_SO","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,14)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Send_OrderAck","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Send_OrderAck","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,15)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_PhysicalFile","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_PhysicalFile","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,16)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PO_TCNeeded","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PO_TCNeeded","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,17)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_CutoffDT","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_CutoffDT","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,18)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Issue_Material","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Issue_Material","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,19)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,20)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Verify_ShipSchedule","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Verify_ShipSchedule","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,21)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,22)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"BOM","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"BOM","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.ElseIf(v.Args.SMODE,=,"ISSQuoteBid")
'		f.Intrinsic.Control.If(v.ODBC.conx!rst.FieldVal!line,=,1)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Create_Calendar","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Create_Calendar","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,2)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendInvite_OSS","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendInvite_OSS","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,3)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Prepare_EFile","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Prepare_EFile","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,4)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","DevelopScope_Bid","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","DevelopScope_Bid","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,5)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendScope_Contractor","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendScope_Contractor","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,6)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","BidTeam_Analyze","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","BidTeam_Analyze","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,7)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","AssignProject_ISS","AllowEdit",v.Args.bRet)
'			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","AssignProject_ISS","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.ElseIf(v.Args.SMODE,=,"ISSSoBid")
'		f.Intrinsic.Control.If(v.ODBC.conx!rst.FieldVal!line,=,1)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_OrderAck","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_OrderAck","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,2)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","HFAPO_Request","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","HFAPO_Request","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,3)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submittals_Approval","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submittals_Approval","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,4)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_Customer","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_Customer","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,5)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Follow_Bond","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Follow_Bond","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,6)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Confirm_Receipt","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Confirm_Receipt","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,7)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","SubmittalFU_DT","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","SubmittalFU_DT","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,8)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Revise_Submittal","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Revise_Submittal","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,9)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Approval_Submitted","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Approval_Submitted","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,10)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Release_HFAPO","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Release_HFAPO","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,11)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Notice_Furnishing","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Notice_Furnishing","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,12)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Prevenative_Maint","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Prevenative_Maint","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,13)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","O_M","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","O_M","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,14)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_FSRequest","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_FSRequest","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.ElseIf(v.Args.SMODE,=,"Control") 
'		f.Intrinsic.Control.If(v.ODBC.conx!rst.FieldVal!line,=,1)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Request_Received","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Request_Received","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,2)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_Programming","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_Programming","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,3)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Walk_requied","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Walk_requied","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,4)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Walk_Complete","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Walk_Complete","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,5)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Define_Job","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Define_Job","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,6)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_RequiredCO","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_RequiredCO","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,7)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Create_SO","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Create_SO","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,8)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Create_WO","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Create_WO","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,9)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"KISM_job","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"KISM_job","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,10)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_Engineer","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_Engineer","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,11)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsNeeded_Cont","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsNeeded_Cont","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,12)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Reconfirm_Customer","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Reconfirm_Customer","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,13)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Email_Customer","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Email_Customer","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,14)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Schedule_Contractor","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Schedule_Contractor","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,15)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_ServerFile","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_ServerFile","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,16)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Process_WO","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Process_WO","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,17)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Job_complete","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Job_complete","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,18)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,19)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RGA","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RGA","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,20)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"StartUpJob","AllowEdit",v.Args.bRet)
'			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"StartUpJob","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.ElseIf(v.Args.SMODE,=,"ControlProg")
'		f.Intrinsic.Control.If(v.ODBC.conx!rst.FieldVal!line,=,1)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submittal_Package","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submittal_Package","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,2)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Package_Review","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Package_Review","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,3)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Receive_Approval","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Receive_Approval","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,4)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Review_Job","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Review_Job","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,5)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Develop_Project","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Develop_Project","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,6)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","ProjectPlan_Customer","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","ProjectPlan_Customer","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,7)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_RD","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_RD","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,8)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_PLC","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_PLC","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,9)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_SCADA","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_SCADA","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,10)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","List_Parts","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","List_Parts","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,11)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Punch_List","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Punch_List","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,12)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Document_Pump","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Document_Pump","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,13)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_Drawing","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_Drawing","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,14)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Invoice_Total","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Invoice_Total","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,15)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Customer_Training","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Customer_Training","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,16)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Review_Customer","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Review_Customer","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,17)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Develope_Custom","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Develope_Custom","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,18)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Final_Punch","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Final_Punch","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,19)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","ReviewPunch_List","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","ReviewPunch_List","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,20)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Approved_Punch","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Approved_Punch","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,21)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submit_Programming","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submit_Programming","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,22)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Provide_Customer_OM","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Provide_Customer_OM","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,23)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Provide_Customer","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Provide_Customer","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,24)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Save_Files","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Save_Files","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,25)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Save_Project","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Save_Project","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,26)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","PunchList_Complete","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","PunchList_Complete","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,27)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Project_Audit","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Project_Audit","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,28)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Project_Closeout","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Project_Closeout","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.ElseIf(v.ODBC.conx!rst.FieldVal!line,=,29)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submit_Customer","AllowEdit",v.Args.bRet)
'			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submit_Customer","ReadOnly",v.Args.bRet.not)
'		f.Intrinsic.Control.EndIf 
'	f.Intrinsic.Control.EndIf 
'	f.ODBC.conx!RST.MoveNext 
'f.Intrinsic.Control.Loop 
'f.ODBC.conx!RST.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("GridMode_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,=,21087)
	f.Intrinsic.Control.GoTo("GridMode_Next")
F.Intrinsic.Control.ElseIf(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.GridMode.End

Program.Sub.GetValue.Start
F.Intrinsic.Control.SetErrorHandler("GetValue_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.bValue.Declare(Boolean)
V.Local.sValue.Declare(String)
V.Local.sCuser.Declare(String)
V.Local.sCCmpy.Declare(String)
V.Local.sret.Declare(String)


'V.Local.sCuser.Set(v.Caller.User)
'V.Local.sCCmpy.Set(v.Caller.CompanyCode)
'
'f.Intrinsic.Control.If(v.Args.User,<>,"")
'	f.Intrinsic.Control.If(v.Args.User,<>,V.Local.sCuser.trim)
'		f.Intrinsic.Variable.AddRV("bRet","False")
'	f.Intrinsic.Control.Else
'		f.Intrinsic.Variable.AddRV("bRet","True")
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.ElseIf(v.Args.Group,<>,"")
'	f.Global.Security.IsInGroup(V.Local.sCuser.trim,v.Args.Group,V.Local.sCCmpy.trim,V.Local.bValue)
''	f.Global.Security.IsInGroup("RAN",v.Args.Group,v.Caller.CompanyCode,V.Local.bValue)
''	f.Intrinsic.Variable.AddRV("bRet",V.Local.bValue)
'	f.Intrinsic.Control.If(V.Local.bValue,=,True)
'		f.Intrinsic.Variable.AddRV("bRet","True")
'	f.Intrinsic.Control.Else
'		f.Intrinsic.Variable.AddRV("bRet","False")
'	f.Intrinsic.Control.EndIf
'f.Intrinsic.Control.EndIf 


V.Local.sCuser.Set(v.Caller.User)
V.Local.sCCmpy.Set(v.Caller.CompanyCode)


'User_Group
'USER_GROUP  USR_GRP_FLAG 
'USER then True
'GROUP then False

f.Intrinsic.String.Split(v.Args.USER_GROUP,"*!*",V.Local.sret)

f.Intrinsic.Control.If(V.Local.sret(1).trim,<>,"")
	f.Intrinsic.Control.If(V.Local.sret(0),=,"0")  ' GROUP
		f.Global.Security.IsInGroup(V.Local.sCuser.trim,V.Local.sret(1),V.Local.sCCmpy.trim,V.Local.bValue)
		f.Intrinsic.Control.If(V.Local.bValue,=,True)
			f.Intrinsic.Variable.AddRV("bRet","True")
		f.Intrinsic.Control.Else
			f.Intrinsic.Variable.AddRV("bRet","False")
			f.Intrinsic.Control.ExitSub 
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.ElseIf(V.Local.sret(0),=,"1")  ' USER 
		f.Intrinsic.Control.If(V.Local.sret(1).trim,<>,V.Local.sCuser.trim)
			f.Intrinsic.Variable.AddRV("bRet","False")
			f.Intrinsic.Control.ExitSub 
		f.Intrinsic.Control.Else
			f.Intrinsic.Variable.AddRV("bRet","True")
		f.Intrinsic.Control.EndIf 
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.EndIf 

'SignOff
'SIGNOFF_USER_GRP ,SIGNOFF_TYPE
'-1 USER 
'0  Group 

f.Intrinsic.String.Split(v.Args.SignOff,"*!*",V.Local.sret)
f.Intrinsic.Control.If(V.Local.sret(1).trim,<>,"")
	f.Intrinsic.Control.If(V.Local.sret(0),=,"0")  ' GROUP
		f.Global.Security.IsInGroup(V.Local.sCuser.trim,V.Local.sret(1).trim,V.Local.sCCmpy.trim,V.Local.bValue)
		f.Intrinsic.Control.If(V.Local.bValue,=,True)
			f.Intrinsic.Variable.AddRV("bRet","True")
		f.Intrinsic.Control.Else
			f.Intrinsic.Variable.AddRV("bRet","False")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.ElseIf(V.Local.sret(0),=,"-1")  ' USER 
		f.Intrinsic.Control.If(V.Local.sret(1).trim,<>,V.Local.sCuser.trim)
			f.Intrinsic.Variable.AddRV("bRet","False")
		f.Intrinsic.Control.Else
			f.Intrinsic.Variable.AddRV("bRet","True")
		f.Intrinsic.Control.EndIf 
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.EndIf 

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("GetValue_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.GetValue.End

Program.Sub.frmNestedQuote_UnLoad.Start
F.Intrinsic.Control.SetErrorHandler("GetValue_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'

'
'
'

f.Intrinsic.Control.If(v.Global.sSubfrmScreen,"=","SOISS")
	gui.frm2..enabled(true)
f.Intrinsic.Control.Else
	gui.Form..enabled(true)
f.Intrinsic.Control.Endif
gui.frmNestedQuote..Visible(false)



F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("GetValue_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.frmNestedQuote_UnLoad.End

Program.Sub.frmBuckJob_UnLoad.Start
F.Intrinsic.Control.SetErrorHandler("frmNestedQuote_UnLoad_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

gui.Form..enabled(true)
gui.frmBuckJob..Visible(false)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("frmNestedQuote_UnLoad_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.frmBuckJob_UnLoad.End

Program.Sub.GsGridWF_CellValueChanged.Start
F.Intrinsic.Control.SetErrorHandler("GsGridWF_CellValueChanged_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iRet.Declare(long)
V.Local.sRow.Declare(String)
V.Local.sQO.Declare(String)
V.Local.sSO.Declare(String)
v.Local.PType.Declare(String)
V.Local.sFile.Declare(string)
V.Local.iCol.Declare(long)



f.Intrinsic.Control.If(V.Args.button,=,"Left")
	f.Intrinsic.Control.CallSub(gsgridwf_rowcellclick,"column",v.Args.column,"RowIndex",V.Args.RowIndex)
	f.Intrinsic.Control.ExitSub 
f.Intrinsic.Control.EndIf 

'f.Intrinsic.UI.Msgbox("GsGridWF_Cellvaluechanged")
Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,"SFlag","1")
'f.Intrinsic.UI.Msgbox("GsGridWF_CellValueChanged")
'
'f.Intrinsic.UI.Msgbox(v.Args.column)
'
v.Global.bChanged.Set(True)

f.Intrinsic.Control.If(V.Args.column,=,"Urgency","or",V.Args.column,=,"EOMBilling",V.Args.column,=,"CombinedJob")
	Function.Data.DataTable.SetValue(v.Global.sgHdrView,V.Args.RowIndex,"SFlagHdr","1")
f.Intrinsic.Control.EndIf 


'Shipper Column used in REPAIR & ISSNEWSALES
f.Intrinsic.Control.If(V.Args.column,=,"Shipper")
	f.Intrinsic.Control.If(V.Global.sScreen,=,"Show_Data")
		f.Intrinsic.Control.ExitSub 
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.EndIf 


'v.Local.iCol.Declare(long)


'F.Intrinsic.Debug.InvokeDebugger
'
'F.Intrinsic.Debug.Stop

'f.Intrinsic.UI.Msgbox("GsGridWF_RowCellClick")
'	f.Intrinsic.UI.Msgbox(V.Args.column)

'	Function.Data.DataTable.SetValue(v.Global.sgREL,1,v.Local.iCol , "1")
'	Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)


f.Intrinsic.Control.If(V.Args.column,=,"Est_Quote")
	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
'		gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,24,V.Args.RowIndex,V.Local.sQO)
'		f.Intrinsic.Control.If(V.Local.sQO.Trim,<>,"")
'			gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,2,V.Args.RowIndex,True)
			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)

			gui.Form..enabled(false)
			gui.frmNestedQuote..Caption("Quote - Repair")
			V.Global.sSubScreen.Set("QuoteREP")
			f.Intrinsic.Control.CallSub(est_quote,"cROW",V.Args.RowIndex,"QType","EST")
			gui.frmNestedQuote..Show
			gui.frmNestedQuote..AlwaysOnTop(True)
'		f.Intrinsic.Control.Else
'			f.Intrinsic.UI.Msgbox("Quote not found")
'			f.Intrinsic.Control.ExitSub 
'		f.Intrinsic.Control.EndIf 
	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_Required")
'Control or Field Service Quote
f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_Required","OR",V.Args.column,=,"Quote_RequiredCO") 
	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
'		f.Intrinsic.Control.If(V.Args.column,=,"Quote_Required")
'			gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,22,V.Args.RowIndex,V.Local.sQO)
'		f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_RequiredCO")
'			gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,2,V.Args.RowIndex,V.Local.sQO)
'		f.Intrinsic.Control.EndIf 
		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)

'		f.Intrinsic.Control.If(V.Local.sQO.Trim,<>,"")
			f.Intrinsic.Control.If(V.Args.column,=,"Quote_Required")
				'field service Quote
				v.Local.PType.Set("FSQ")
'				gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,4,V.Args.RowIndex,True)
			f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_RequiredCO")
				'Control Quote
				v.Local.PType.Set("COQ")
				'8 13 14
'				gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,8,V.Args.RowIndex,True)
			f.Intrinsic.Control.EndIf
			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
			gui.Form..enabled(false)
			f.Intrinsic.Control.CallSub(Quote_RequiredFS,"cROW",V.Args.RowIndex,"QType",v.Local.PType)
			gui.frmNestedQuote..Caption("Quote Required")
			V.Global.sSubScreen.Set("QuoteFS")
			gui.frmNestedQuote..Show
			gui.frmNestedQuote..AlwaysOnTop(True)
'		f.Intrinsic.Control.Else
'			f.Intrinsic.UI.Msgbox("Quote not found")
'			f.Intrinsic.Control.ExitSub 
'		f.Intrinsic.Control.EndIf 
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.elseIf(V.Args.column,=,"Firm_Quote_Req")
	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
			gui.Form..enabled(false)
			f.Intrinsic.Control.CallSub(Est_Quote,"cROW",V.Args.RowIndex,"QType","FRM")
			gui.frmNestedQuote..Caption("Firm Quote Required")
			V.Global.sSubScreen.Set("QuoteREP")
			gui.frmNestedQuote..Show
			gui.frmNestedQuote..AlwaysOnTop(True)
'		f.Intrinsic.Control.Else
'			f.Intrinsic.UI.Msgbox("Quote not found")
'			gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,5,V.Args.RowIndex,False)
'			f.Intrinsic.Control.ExitSub 
'		f.Intrinsic.Control.EndIf 
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.elseIf(V.Args.column,=,"IsBid_Quote")
	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
'		gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,2,V.Args.RowIndex,V.Local.sQO)
'		f.Intrinsic.Control.If(V.Local.sQO.Trim,<>,"")
'			gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,5,V.Args.RowIndex,True)
			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
			gui.Form..enabled(false)
			f.Intrinsic.Control.CallSub(Quote_ISS,"cROW",V.Args.RowIndex)
			gui.frmNestedQuote..Caption("New Bid Quote")
			V.Global.sSubScreen.Set("QuoteISS")
'			Gui.frmNestedQuote.GsGridQuote.Size(19005,2430)
			gui.frmNestedQuote..Show
			gui.frmNestedQuote..AlwaysOnTop(True)
'		f.Intrinsic.Control.Else
'			f.Intrinsic.UI.Msgbox("Quote not found")
''			gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,5,V.Args.RowIndex,False)
''			F.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column,False)
'			f.Intrinsic.Control.ExitSub 
'		f.Intrinsic.Control.EndIf 
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.elseIf(V.Args.column,=,"IsBid_SO")
	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
'		gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,15,V.Args.RowIndex,True)
		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
		gui.Form..enabled(false)
		f.Intrinsic.Control.CallSub(SO_ISS,"cROW",V.Args.RowIndex)
		gui.frm2..Caption("New Bid Sales")
		V.Global.sSubfrmScreen.Set("SOISS")
'		Gui.frmNestedQuote.GsGridQuote.Size(19005,2430)
		gui.frm2..enabled(True)
		gui.frm2..Show
		gui.frm2..AlwaysOnTop(True)
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.elseIf(V.Args.column,=,"Controls_Programming")
	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
'		gui.Form.GsGridWF.setCellValue(v.Global.sgDetView,14,V.Args.RowIndex,True)
		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
		gui.Form..enabled(false)
		f.Intrinsic.Control.CallSub(control_program,"cROW",V.Args.RowIndex)
		gui.frm2..Caption("Control Programming")

		V.Global.sSubfrmScreen.Set("COPROG")
'		Gui.frmNestedQuote.GsGridQuote.Size(19005,2430)
		gui.frm2..Show
		gui.frm2..AlwaysOnTop(True)
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.elseIf(V.Args.column,=,"Verify_ShipSchedule","OR",V.Args.column,=,"SendOut_Pricing",V.Args.column,=,"Issue_Material",V.Args.column,=,"Shipper",V.Args.column,=,"HFAPO_Request",V.Args.column,=,"Send_Customer",V.Args.column,=,"Revise_Submittal",V.Args.column,=,"Approval_Submitted",V.Args.column,=,"Release_HFAPO",V.Args.column,=,"Quote_Sent",V.Args.column,=,"Customer_Approval",V.Args.column,=,"Submittals_Approval")
	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
		gui.Form..enabled(false)

		f.Intrinsic.Control.If(V.Args.column,=,"Issue_Material")
			v.Local.PType.Set("S001")
			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.elseIf(V.Args.column,=,"Verify_ShipSchedule")
			v.Local.PType.Set("S002")
			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.elseIf(V.Args.column,=,"Shipper")
			v.Local.PType.Set("S003")
			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.elseIf(V.Args.column,=,"SendOut_Pricing")
			v.Local.PType.Set("S004")
			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.elseIf(V.Args.column,=,"HFAPO_Request")
			v.Local.PType.Set("SB01")
			gui.frm2..enabled(false)
			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.elseIf(V.Args.column,=,"Send_Customer")
			v.Local.PType.Set("SB02")
			gui.frm2..enabled(false)
			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.elseIf(V.Args.column,=,"Revise_Submittal")
			v.Local.PType.Set("SB03")
			gui.frm2..enabled(false)
			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.elseIf(V.Args.column,=,"Approval_Submitted")
			v.Local.PType.Set("SB04")
			gui.frm2..enabled(false)
			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.elseIf(V.Args.column,=,"Release_HFAPO")
			v.Local.PType.Set("SB05")
			gui.frm2..enabled(false)
			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_Sent")
			v.Local.PType.Set("S005")
			gui.frm2..enabled(false)
			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.elseIf(V.Args.column,=,"Customer_Approval")
			v.Local.PType.Set("S006")
			gui.frm2..enabled(false)
			Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.elseIf(V.Args.column,=,"Submittals_Approval")
			v.Local.PType.Set("SB06")
			gui.frm2..enabled(false)
			Function.Data.DataTable.SetValue("ESTSO",V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.EndIf 
'		f.Intrinsic.UI.Msgbox(v.Local.PType)
		f.Intrinsic.Control.CallSub(NestedPUMP_ISS,"cROW",V.Args.RowIndex,"Pump_Type",v.Local.PType)
		gui.frmNestedQuote..Caption("Pump Panel")
		V.Global.sSubScreen.Set("Pump_ISS")
		gui.frmNestedQuote..Show
		gui.frmNestedQuote..AlwaysOnTop(True)
	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"PartsNeeded")
f.Intrinsic.Control.elseIf(V.Args.column,=,"PartsNeeded","OR",V.Args.column,=,"PartsNeeded_Cont")
	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
		f.Intrinsic.Control.If(V.Args.column,=,"PartsNeeded")
			'field service Parts
			v.Local.PType.Set("FSP")
		f.Intrinsic.Control.elseIf(V.Args.column,=,"PartsNeeded_Cont")
			'Control parts
			v.Local.PType.Set("COP")
		f.Intrinsic.Control.EndIf
		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
		gui.Form..enabled(false)
		f.Intrinsic.Control.CallSub(Parts_FS,"cROW",V.Args.RowIndex,"PType",v.Local.PType)
		gui.frmNestedQuote..Caption("Parts Needed")
		V.Global.sSubScreen.Set("PartsFS")
		gui.frmNestedQuote..Show
		gui.frmNestedQuote..AlwaysOnTop(True)
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.elseIf(V.Args.column,=,"Update_BOM1")
	f.Intrinsic.Control.If(V.Args.Value,=,False)
		F.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,"UpdateBOM1_DT",v.ambient.DBNULL)
		'F.Data.DataTable.SetValue("ESTQUOTE",0,"Create_Calendar",v.Ambient.DBNULL)
		F.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"SO","OR",V.Args.column,=,"SOD")
'	'SO_NO
'	'SO_Line
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,0,V.Args.RowIndex,V.Local.sSO)
'	f.Intrinsic.Control.If(V.Local.sSO.Trim,<>,"")
'		f.Intrinsic.String.Split(V.Local.sSO,"-",V.Local.sSO)
'		F.Intrinsic.String.Concat(V.Local.sSO(0),"!*!","O","!*!","*!*ZDR*!*",V.Local.sSO)
'		F.Global.General.CallWrapperSync(200000,V.Local.sSO)
'	f.Intrinsic.Control.EndIf 
'f.Intrinsic.Control.elseIf(V.Args.column,=,"WO")
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,1,V.Args.RowIndex,V.Local.sSO)
'	f.Intrinsic.Control.If(V.Local.sSO.Trim,<>,"")
''	V.Local.sSO.Set("000155-001")
'		f.Intrinsic.String.Split(V.Local.sSO,"-",V.Local.sSO)
''		F.Intrinsic.String.Build("7!*!{0}!*!{1}!*!A",V.Local.sSO(0),V.Local.sSO(1),V.Local.sSO)
''		F.Global.General.CallWrapperSync(450000,V.Local.sSO)
'		F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sSO,V.Local.sSO(1),V.Local.sSO)
'		F.Global.General.CallWrapperSync(2009,V.Local.sSO)
'	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.elseIf(V.Args.column,=,"Pump_Check_In")
	f.Intrinsic.Control.If(V.Args.Value,=,True)
		f.Intrinsic.UI.Msgbox("Notify 712")
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.elseIf(V.Args.column,=,"Was_Start_Job" ,"OR",V.Args.column,=,"StartUpJob")
	f.Intrinsic.Control.If(V.Args.Value,=,True)
		f.Intrinsic.UI.Msgbox("Notify Sales")
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.elseIf(V.Args.column,=,"Quote_New_Sub")
	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
'		f.Intrinsic.String.Build("{0}\GAB\GAS\GCG_4391_WFDashboard.g2u",V.Caller.PluginsDir,V.Local.sFile)
''		F.Global.Task.CallASyncGas(V.Local.sFile,"IS*!*CALL",V.Local.iRet)
'		F.Global.Task.CallASyncGas(V.Local.sFile,"IS@CALL",V.Local.iRet)
'	f.Intrinsic.Control.EndIf
		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
		f.Intrinsic.Control.CallSub("Quote_NewSub","cROW",V.Args.RowIndex)
		gui.frmNestedQuote..Caption("Quote New Sub")
		V.Global.sSubScreen.Set("QuoteNewSub")
		gui.Form..enabled(false)
		gui.frmNestedQuote..Show
		gui.frmNestedQuote..AlwaysOnTop(True)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.elseIf(V.Args.column,=,"Warranty_Job")
	f.Intrinsic.Control.If(V.Args.Value,=,True,"OR",V.Args.CellValue,=,True)
		Function.Data.DataTable.SetValue(v.Global.sgREL,V.Args.RowIndex,V.Args.column , True)
		gui.Form..enabled(false)
		f.Intrinsic.Control.CallSub(Warranty_Job,"cROW",V.Args.RowIndex)
		gui.frmNestedQuote..Caption("Warranty Job")
		V.Global.sSubScreen.Set("WarrantyJob")
		gui.frmNestedQuote..Show
		gui.frmNestedQuote..AlwaysOnTop(True)
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.Else
	F.Intrinsic.Control.ExitSub
f.Intrinsic.Control.EndIf 

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("GsGridWF_CellValueChanged_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.GsGridWF_CellValueChanged.End

Program.Sub.Est_Quote.Start
F.Intrinsic.Control.SetErrorHandler("Est_Quote_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSO.Declare(String)
V.Local.sSline.Declare(String)
V.Local.sQO.Declare(String)
v.Local.iWF.Declare(long)
V.Local.sSQL.Declare(String)
v.Local.sQType.Declare(String)
v.Local.stitle.Declare(String)
v.Local.i.Declare(long)
v.Local.iret.Declare(String)
V.Local.iCol.Declare(long)


f.Global.WorkFlow.GetIDFromTitle("Quote - Repair",v.Local.iWF)
	'get the ID to create the workflow
f.Global.WorkFlow.GetTemplateIDFromTitle("Quote - Repair",v.Local.iWF)

f.Intrinsic.Control.If(v.Local.iWF,=,-1)
		'inform the user there is no template
		f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title Quote - Repair Process")
f.Intrinsic.Control.EndIf

'gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,21,V.Args.cROW,V.Local.sSO)
'gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,22,V.Args.cROW,V.Local.sSline)
'gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,23,V.Args.cROW,V.Local.sQO)



gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO_Ln", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "QUOTE", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sQO)


f.Intrinsic.String.Build("select '{0}' as Quote, CASE WHEN Opennew_quote_router IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Opennew_quote_router,SQL_BIT)  END AS Opennew_quote_router,CASE WHEN PPP IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(PPP,SQL_BIT)  END AS PPP,CASE WHEN RequestFS_Quote IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(RequestFS_Quote,SQL_BIT)  END AS RequestFS_Quote,CASE WHEN Send_Repair_Quote IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Send_Repair_Quote,SQL_BIT)  END AS Send_Repair_Quote,CASE WHEN Customer_Approval IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Customer_Approval,SQL_BIT)  END AS Customer_Approval,SOrder,SLine,Quote_Type  from GCG_4391_WFREPQuote where SOrder = '{1}' and SLine = '{2}' and Quote_Type = '{3}'",V.Local.sQO,V.Local.sSO,V.Local.sSline,v.Args.QType,v.Local.sSQL)

F.Intrinsic.Control.If(v.DataTable.ESTQUOTE.Exists,=,True)
	F.Data.DataTable.Close("ESTQUOTE")
f.Intrinsic.Control.EndIf 


F.Data.DataTable.CreateFromSQL("ESTQUOTE","conx",v.Local.sSQL,True)
gui.frmNestedQuote.GsGridQuote.AddGridViewFromDataTable("Grid_ESTQUOTE","ESTQUOTE") 
gui.frmNestedQuote.GsGridQuote.mainview("Grid_ESTQUOTE")

F.Intrinsic.Control.If(Variable.DataTable.ESTQUOTE.rowcount,=,0)
	F.Data.DataTable.AddRow("ESTQUOTE", "Quote_Type",v.Args.QType,"Quote", V.Local.sQO, "Opennew_quote_router", False, "PPP",False,"RequestFS_Quote",False,"Send_Repair_Quote",False,"Customer_Approval",False,"SOrder",V.Local.sSO,"SLine",V.Local.sSline)
Function.Intrinsic.Control.EndIf

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote","AllowEdit",False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote","ReadOnly",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote","MinWidth",80)

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Opennew_quote_router","Caption","Open New Quote Router")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","PPP","Caption","PPP")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","RequestFS_Quote","Caption","Request FS Quote")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Send_Repair_Quote","Caption","Send Repair Quote")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Customer_Approval","Caption","Customer Approval")

gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "Enableappearanceevenrow", "True")
gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "ColumnPanelRowHeight", "40")



gui.frmNestedQuote.GsGridQuote.GetColumnCount("Grid_ESTQUOTE",v.Local.iret)
f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
	gui.frmNestedQuote.GsGridQuote.GetColumnNamebyIndex("Grid_ESTQUOTE",v.Local.i,v.Local.stitle)
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"HeaderWordWrap","wrap")
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"MinWidth",50)
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"HeaderFontBold","True")
f.Intrinsic.Control.Next(v.Local.i)


'f.Intrinsic.Control.CallSub(GridMode,"WFID",v.Local.iWF,"SMODE","Type2")
f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type2","Start",1)


gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SOrder", "Visible", False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SLine", "Visible", False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "Quote_Type", "Visible", False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Est_Quote_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Est_Quote.End

Program.Sub.cmd_RepQuote_Click.Start
F.Intrinsic.Control.SetErrorHandler("Est_Quote_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)





	'cannot delete multiple type exist
'	Function.ODBC.Connection!conx.Execute("delete from GCG_4391_WFFSQuote")

Function.ODBC.Connection!conx.BeginTransaction
f.Intrinsic.Control.If(V.Global.sSubfrmScreen,"=","COPROG")
	F.Data.DataTable.SaveToDB("ESTSO","conx","GCG_4391_ContSubProg","SO*!*SO_Ln",256,"SO@!@SO*!*SO_Ln@!@SO_Ln*!*Submittal_Package@!@Submittal_Package*!*Package_Review@!@Package_Review*!*Receive_Approval@!@Receive_Approval*!*Review_Job@!@Review_Job*!*Develop_Project@!@Develop_Project*!*ProjectPlan_Customer@!@ProjectPlan_Customer*!*Complete_RD@!@Complete_RD*!*Complete_PLC@!@Complete_PLC*!*Complete_SCADA@!@Complete_SCADA*!*List_Parts@!@List_Parts*!*Punch_List@!@Punch_List*!*Document_Pump@!@Document_Pump*!*Complete_Drawing@!@Complete_Drawing*!*Invoice_Total@!@Invoice_Total*!*Customer_Training@!@Customer_Training*!*Review_Customer@!@Review_Customer*!*Develope_Custom@!@Develope_Custom*!*Final_Punch@!@Final_Punch*!*ReviewPunch_List@!@ReviewPunch_List*!*Approved_Punch@!@Approved_Punch*!*Submit_Programming@!@Submit_Programming*!*Provide_Customer_OM@!@Provide_Customer_OM*!*Provide_Customer@!@Provide_Customer*!*Save_Files@!@Save_Files*!*Save_Project@!@Save_Project*!*PunchList_Complete@!@PunchList_Complete*!*Project_Audit@!@Project_Audit*!*Project_Closeout@!@Project_Closeout*!*Submit_Customer@!@Submit_Customer")
Function.Intrinsic.Control.EndIf


f.Intrinsic.Control.If(V.Global.sSubfrmScreen,"=","SOISS")
	F.Data.DataTable.SaveToDB("ESTSO","conx","GCG_4391_BIDSO","SO*!*SO_Ln",256,"SO@!@SO*!*SO_Ln@!@SO_Ln*!*Send_OrderAck@!@Send_OrderAck*!*HFAPO_Request@!@HFAPO_Request*!*Submittals_Approval@!@Submittals_Approval*!*Send_Customer@!@Send_Customer*!*Follow_Bond@!@Follow_Bond*!*Confirm_Receipt@!@Confirm_Receipt*!*SubmittalFU_DT@!@SubmittalFU_DT*!*Revise_Submittal@!@Revise_Submittal*!*Approval_Submitted@!@Approval_Submitted*!*Release_HFAPO@!@Release_HFAPO*!*Notice_Furnishing@!@Notice_Furnishing*!*Prevenative_Maint@!@Prevenative_Maint*!*O_M@!@O_M*!*Send_FSRequest@!@Send_FSRequest*!*Worsheet_Rev@!@Worsheet_Rev*!*Assign_To_ISS@!@Assign_To_ISS")
'	F.Data.DataTable.SaveToDB("ESTSO","conx","GCG_4391_BIDSO","SO*!*SO_Ln",256,"SO@!@SO*!*SO_Ln@!@SO_Ln")
Function.Intrinsic.Control.EndIf

f.Intrinsic.Control.If(V.Global.sSubScreen,"=","QuoteREP")
	F.Data.DataTable.SaveToDB("ESTQUOTE","conx","GCG_4391_WFREPQuote","SOrder*!*SLine",256,"SOrder@!@SOrder*!*SLine@!@SLine*!*Quote@!@Quote*!*Opennew_quote_router@!@Opennew_quote_router*!*PPP@!@PPP*!*Send_Repair_Quote@!@Send_Repair_Quote*!*Customer_Approval@!@Customer_Approval*!*RequestFS_Quote@!@RequestFS_Quote*!*Quote_Type@!@Quote_Type")
f.Intrinsic.Control.elseIf(V.Global.sSubScreen,"=","QuoteFS")


	F.Data.DataTable.SaveToDB("ESTQUOTE","conx","GCG_4391_WFFSQuote","SOrder*!*SLine*!*QType",256,"SOrder@!@SOrder*!*SLine@!@SLine*!*QType@!@QType*!*Opennew_quote_router@!@Opennew_quote_router*!*Quote_app10k@!@Quote_app10k*!*ISS_Quote_app@!@ISS_Quote_app*!*Send_Quote@!@Send_Quote*!*Customer_Approval@!@Customer_Approval")
f.Intrinsic.Control.elseIf(V.Global.sSubScreen,"=","PartsFS")
	F.Data.DataTable.SaveToDB("ESTQUOTE","conx","GCG_4391_WFFSParts","SO*!*SLine*!*PType",256,"SO@!@SO*!*SLine@!@SLine*!*PType@!@PType*!*Order_PartsPO@!@Order_PartsPO*!*Commit_Partsstock@!@Commit_Partsstock*!*Receive_InParts@!@Receive_InParts*!*Shipper@!@Shipper")
f.Intrinsic.Control.elseIf(V.Global.sSubScreen,"=","QuoteISS")
	F.Data.DataTable.SaveToDB("ESTQUOTE","conx","GCG_4391_BIDQO","SO*!*SO_Ln",256,"SO@!@SO*!*SO_Ln@!@SO_Ln*!*Create_Calendar@!@Create_Calendar*!*SendInvite_OSS@!@SendInvite_OSS*!*Prepare_EFile@!@Prepare_EFile*!*DevelopScope_Bid@!@DevelopScope_Bid*!*SendScope_Contractor@!@SendScope_Contractor*!*BidTeam_Analyze@!@BidTeam_Analyze*!*Quote_Due@!@Quote_Due*!*Quote_Given@!@Quote_Given")
f.Intrinsic.Control.elseIf(V.Global.sSubScreen,"=","Pump_ISS")
	F.Data.DataTable.SaveToDB("ESTQUOTE","conx","GCG_4391_PUMP","SO*!*SO_Ln*!*Pump_Type",256,"SO@!@SO*!*SO_Ln@!@SO_Ln*!*Pump_Type@!@Pump_Type*!*Pump@!@Pump*!*Panel@!@Panel*!*Valves@!@Valves*!*MISC@!@MISC")
f.Intrinsic.Control.elseIf(V.Global.sSubScreen,"=","WarrantyJob")
	F.Data.DataTable.SaveToDB("ESTQUOTE","conx","GCG_4391_Warranty","SO*!*SO_Ln",256,"SO@!@SO*!*SO_Ln@!@SO_Ln*!*Warranty_Type@!@Warranty_Type*!*Billing@!@Billing*!*TOL@!@TOL")	
f.Intrinsic.Control.elseIf(V.Global.sSubScreen,"=","QuoteNewSub")
'	F.Data.DataTable.SaveToDB("ESTQUOTE","conx","GCG_4391_Warranty","SO*!*SO_Ln",256,"SO@!@SO*!*SO_Ln@!@SO_Ln*!*Warranty_Type@!@Warranty_Type*!*Billing@!@Billing*!*TOL@!@TOL")	
	F.Data.DataTable.SaveToDB("ESTQUOTE","conx","GCG_4391_NEWSUBQuote","SO*!*SO_Ln",256,"SO@!@SO*!*SO_Ln@!@SO_Ln*!*FS_RFQ@!@FS_RFQ*!*Controls_RFQ@!@Controls_RFQ*!*SendOut_Pricing@!@SendOut_Pricing*!*Follow_up@!@Follow_up*!*Double_CheckSheet@!@Double_CheckSheet*!*Router_Worksheet@!@Router_Worksheet*!*Create_Quote@!@Create_Quote*!*Quote_Approval_10k@!@Quote_Approval_10k*!*Quote_Sent@!@Quote_Sent*!*Customer_Approval@!@Customer_Approval")	
Function.Intrinsic.Control.EndIf
F.ODBC.Connection!conx.CommitTransaction 
f.Intrinsic.UI.Msgbox("Data saved successfully")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Est_Quote_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	F.ODBC.Connection!conx.RollbackTransaction 
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.cmd_RepQuote_Click.End

Program.Sub.cmdRepSave_Click.Start
F.Intrinsic.Control.SetErrorHandler("BuckeyeStored_sub_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)


Function.Intrinsic.UI.InvokeWaitDialog("Saving records please wait ...")

f.Data.DataView.Create(v.Global.sgREL,"DVSave",22,"Sflag='1'","")
f.Data.DataView.ToDataTable(v.Global.sgHdrView,"DVSave","DTSave")

'Function.ODBC.Connection!conx.BeginTransaction
f.Intrinsic.Control.If(V.Global.sScreen,"=","Show_Data")
	F.Data.DataTable.SaveToDB("DTSave","conx","GCG_4391_WFDashboard","SO*!*SO_Ln",256,"SO@!@Sales_Order*!*SO_Ln@!@Sales_Line*!*Est_Quote@!@Est_Quote*!*Disassembly@!@Disassembly*!*Firm_Quote_Req@!@Firm_Quote_Req*!*UpdateBOM1_DT@!@UpdateBOM1_DT*!*Quote_New_Sub@!@Quote_New_Sub*!*Quote_New_Eng@!@Quote_New_Eng*!*Bond_Job_5K@!@Bond_Job_5K*!*Send_TY_5K@!@Send_TY_5K*!*Order_Parts@!@Order_Parts*!*Routing@!@Routing*!*Machining@!@Machining*!*Assembly@!@Assembly*!*Shipper@!@Shipper*!*Request_F5_Invoice@!@Request_F5_Invoice*!*As_Shipped_Report@!@As_Shipped_Report*!*Invoice@!@Invoice*!*Notes@!@Notes*!*PartsDue@!@PartsDue*!*FS_Scheduled@!@FS_Scheduled")

	f.Data.DataView.Create(v.Global.sgHdrView,"DVHdrSave",22,"SflagHdr='1'","")

	F.Intrinsic.Control.If(v.DataView.[v.Global.sgHdrView]!DVHdrSave.RowCount,>,0)
		f.Data.DataView.ToDataTable(v.Global.sgHdrView,"DVHdrSave","DTHdrSave")
		F.Data.DataTable.SaveToDB("DTHdrSave","conx","GCG_4391_RepairHdr","SOH",256,"SOH@!@So*!*Urgency@!@Urgency*!*EOMBilling@!@EOMBilling")
		Function.Data.DataTable.Close("DTHdrSave")
	f.Intrinsic.Control.EndIf 
	Function.Data.DataView.Close(v.Global.sgHdrView,"DVHdrSave")


f.Intrinsic.Control.elseIf(V.Global.sScreen,"=","Show_Buckeye")
	F.Data.DataTable.SaveToDB("DTSave","conx","GCG_4391_BuckyDash","SO_NO*!*SO_Line",256,"SO_NO@!@SO_NO*!*SO_Line@!@SO_Line*!*Bill_DT@!@Bill_DT*!*Job_DT@!@Job_DT*!*InspRpt_DT@!@InspRpt_DT*!*Pics_DT@!@Pics_DT*!*Invoice_DT@!@Invoice_DT*!*Remove_DT@!@Remove_DT*!*Close@!@Close*!*Notes@!@Notes*!*Shipper_DT@!@Shipper_DT")
f.Intrinsic.Control.elseIf(V.Global.sScreen,"=","Show_FieldServiceTech")
	F.Data.DataTable.SaveToDB("DTSave","conx","GCG_4391_FldService","So*!*So_Ln",256,"So@!@So_No*!*So_Ln@!@So_Line*!*FS_Request_Rec@!@FS_Request_Rec*!*Define_Job_Spec@!@Define_Job_Spec*!*Quote_Required@!@Quote_Required*!*Start_SO@!@Start_SO*!*CreateWO@!@CreateWO*!*Schedule_Service@!@Schedule_Service*!*VoiceConf@!@VoiceConf*!*Email_conf_dt@!@Email_conf_dt*!*Department@!@Department*!*PartsOrdered @!@PartsOrdered*!*PartsDue@!@PartsDue*!*AllPartsHere@!@AllPartsHere*!*Order_Sp_Equip@!@Order_Sp_Equip*!*Reconfirm_Cust@!@Reconfirm_Cust*!*Prepare_Reports@!@Prepare_Reports*!*Process_WO_Comp@!@Process_WO_Comp*!*Invoice@!@Invoice*!*Pump_Check_In@!@Pump_Check_In*!*RGA@!@RGA*!*Do_return@!@Do_return*!*Was_Start_Job@!@Was_Start_Job*!*Comments@!@Comments*!*Warranty_Job@!@Warranty_Job")
	f.Data.DataView.Create("DTSave","DVF2",22,"PLDET='F2'","")
	f.Data.DataView.ToDataTable("DTSave","DVF2","DTF2")
	f.Data.DataTable.AddColumn("DTF2","Order_Type","long",9999)
	F.Data.DataTable.SaveToDB("DTF2","conx","ORDER_LN_TEXT","So*!*So_Ln*!*Order_Type",256,"So@!@order_num*!*Order_Type@!@Order_Type*!*So_Ln@!@order_Line*!*Comments@!@Text")
	Function.Data.DataView.Close("DTSave","DVF2")
	
	f.Data.DataView.Create(v.Global.sgHdrView,"DVHdrSave",22,"SflagHdr='1'","")
	F.Intrinsic.Control.If(v.DataView.[v.Global.sgHdrView]!DVHdrSave.RowCount,>,0)
		f.Data.DataView.ToDataTable(v.Global.sgHdrView,"DVHdrSave","DTHdrSave")
		F.Data.DataTable.SaveToDB("DTHdrSave","conx","GCG_4391_FldSrvHdr","SOH",256,"SOH@!@So*!*CombinedJob@!@CombinedJob")
		Function.Data.DataTable.Close("DTHdrSave")
	f.Intrinsic.Control.EndIf 
	Function.Data.DataView.Close(v.Global.sgHdrView,"DVHdrSave")

f.Intrinsic.Control.elseIf(V.Global.sScreen,"=","Show_IssSOQO")
	F.Data.DataTable.SaveToDB("DTSave","conx","GCG_4391_ISSQOSO","SO*!*SO_Ln",256,"SO@!@SO*!*SO_Ln@!@SO_Ln*!*RFQ_Received@!@RFQ_Received*!*Bid_DueDate@!@Bid_DueDate*!*IsBid_Quote@!@IsBid_Quote*!*FS_RFQ@!@FS_RFQ*!*Controls_RFQ@!@Controls_RFQ*!*SendOut_Pricing@!@SendOut_Pricing*!*Follow_up@!@Follow_up*!*Double_CheckSheet@!@Double_CheckSheet*!*Router_Worksheet@!@Router_Worksheet*!*Create_Quote@!@Create_Quote*!*Quote_Approval_10k@!@Quote_Approval_10k*!*Quote_Sent@!@Quote_Sent*!*Customer_Approval@!@Customer_Approval*!*IsBid_SO@!@IsBid_SO*!*Create_SO@!@Create_SO*!*Send_OrderAck@!@Send_OrderAck*!*Prepare_PhysicalFile@!@Prepare_PhysicalFile*!*PO_TCNeeded@!@PO_TCNeeded*!*Invoice_CutoffDT@!@Invoice_CutoffDT*!*Issue_Material@!@Issue_Material*!*Order_Parts@!@Order_Parts*!*Verify_ShipSchedule@!@Verify_ShipSchedule*!*Shipper@!@Shipper*!*BOM@!@BOM*!*Notes@!@Notes")
	f.Data.DataView.Create(v.Global.sgHdrView,"DVHdrSave",22,"SflagHdr='1'","")

	F.Intrinsic.Control.If(v.DataView.[v.Global.sgHdrView]!DVHdrSave.RowCount,>,0)
		f.Data.DataView.ToDataTable(v.Global.sgHdrView,"DVHdrSave","DTHdrSave")
		F.Data.DataTable.SaveToDB("DTHdrSave","conx","GCG_4391_ISSQOSOHdr","SOH",256,"SOH@!@So*!*Urgency@!@Urgency")
		Function.Data.DataTable.Close("DTHdrSave")
	f.Intrinsic.Control.EndIf 
	Function.Data.DataView.Close(v.Global.sgHdrView,"DVHdrSave")
f.Intrinsic.Control.elseIf(V.Global.sScreen,"=","Control")
	F.Data.DataTable.SaveToDB("DTSave","conx","GCG_4391_CONTROL","SO*!*SO_Ln",256,"SO@!@SO*!*SO_Ln@!@SO_Ln*!*Request_Received@!@Request_Received*!*Walk_requied@!@Walk_requied*!*Walk_Complete@!@Walk_Complete*!*Define_Job@!@Define_Job*!*Quote_RequiredCO@!@Quote_RequiredCO*!*Create_SO@!@Create_SO*!*Create_WO@!@Create_WO*!*KISM_job@!@KISM_job*!*Controls_Engineer@!@Controls_Engineer*!*PartsNeeded_Cont@!@PartsNeeded_Cont*!*Controls_Programming@!@Controls_Programming*!*Reconfirm_Customer@!@Reconfirm_Customer*!*Schedule_Contractor@!@Schedule_Contractor*!*Prepare_ServerFile@!@Prepare_ServerFile*!*Process_WO@!@Process_WO*!*Invoice@!@Invoice*!*RGA@!@RGA*!*Job_complete@!@Job_complete*!*StartUpJob@!@StartUpJob*!*Notes@!@Notes")	
f.Intrinsic.Control.EndIf 
'F.ODBC.Connection!conx.CommitTransaction     
V.Global.bChanged.Set(False) 
Function.Data.DataView.Close(v.Global.sgHdrView,"DVSave")
Function.Data.DataTable.Close("DTSave")       
f.Intrinsic.UI.Msgbox("Data saved successfully")
Function.Intrinsic.UI.CloseWaitDialog

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("BuckeyeStored_sub_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
'	F.ODBC.Connection!conx.RollbackTransaction 
	Function.Intrinsic.UI.CloseWaitDialog
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdRepSave_Click.End

Program.Sub.Show_Buckeye.Start
F.Intrinsic.Control.SetErrorHandler("Show_Buckeye_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)


v.Local.iWF.Declare(long)
v.Local.ssql.Declare(String)
v.Local.iret.Declare(long)
v.Local.stitle.Declare(String)
v.Local.istatus.Declare(long)
v.Local.i.Declare(long)




	f.Global.WorkFlow.GetIDFromTitle("Buckeye Storage",v.Local.iWF)
		'get the ID to create the workflow
	f.Global.WorkFlow.GetTemplateIDFromTitle("Buckeye Storage",v.Local.iWF)

	f.Intrinsic.Control.If(v.Local.iWF,=,-1)
			'inform the user there is no template
			f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title Buckeye Storage")
			f.Intrinsic.Control.CallSub(form_unload)
	f.Intrinsic.Control.EndIf

'	v.Local.ssql.Set("select distinct Ord.order_no AS SO from v_Order_Header OH join v_customer_master Cust on OH.customer = Cust.customer  join v_order_lines as ORD on OH.order_no = ORD.order_no  ")
'	f.Intrinsic.String.Build("{0} where Ord.QTY_BO >0  order by Ord.order_no ",v.Local.ssql,v.Local.ssql)
'	'and ORD.Product_Line = 'B1' 
'
'	F.Intrinsic.Control.If(v.DataTable.Header.Exists,=,True)
'		F.Data.DataTable.Close("Header")
'	f.Intrinsic.Control.EndIf 
'	
'	F.Data.DataTable.CreateFromSql("Header","conx",v.Local.sSql,True)
'	F.Data.DataView.Create("Header","Header")
'	gui.Form.GsGridWF.AddGridViewFromDataView("Header","Header","Header")
'	

'	v.Local.ssql.Set("select distinct Ord.order_no AS SOH,name_Customer,Customer_PO,Contact from v_Order_Header OH join v_customer_master Cust on OH.customer = Cust.customer  join v_order_lines as ORD on OH.order_no = ORD.order_no  ")
'	f.Intrinsic.String.Build("{0} join v_ORDER_BILL_TO BILL on OH.order_no = BILL.order_no where Ord.QTY_BO >0 and ORD.Product_Line = 'B1'  order by Ord.order_no ",v.Local.ssql,v.Local.ssql)
'	'	'and ORD.Product_Line = 'B1' 

	v.Local.ssql.Set("select distinct Ord.order_no AS SOH,Cust.name_Customer,Customer_PO,Contact,ORD.Product_Line as 'PL' from v_DTL_BILL_HEADER OH join v_customer_master Cust on OH.customer = Cust.customer  join v_DTL_BILL_LINES as ORD on OH.order_no = ORD.order_no  ")
	f.Intrinsic.String.Build("{0} join v_DTL_BILL_BILL_TO Bill on OH.order_no = BILL.order_no  join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}'  ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)
'	'	'and ORD.Product_Line = 'B1' 

	f.Intrinsic.String.Build("{0} union select distinct job+suffix AS SOH,Cust.name_Customer,Customer_PO,'' as Contact,Product_Line as 'PL' from  v_job_header JobHdr left join v_customer_master Cust on JobHdr.customer = Cust.customer  ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}   join GCG_4391_PL PLMast on PLMast.PL = JobHdr.Product_Line  where dash_type = '{1}' and year(Date_Closed) = '1900' and CAST(Sales_order AS DOUBLE) =0   order by Ord.order_no ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)


	F.Data.DataTable.CreateFromSql(v.Global.sgHdrView,"conx",v.Local.sSql,True)
	F.Data.DataView.Create(v.Global.sgHdrView,v.Global.sgHdrView)
	gui.Form.GsGridWF.AddGridViewFromDataView(v.Global.sgHdrView,v.Global.sgHdrView,v.Global.sgHdrView)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","Caption","Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","HeaderFontBold","True")
	gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgHdrView,"Editable",False)
	gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgHdrView,"readonly",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","HeaderBackColor","#d3d3d3")

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","MaxWidth",100)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","Caption","Customer Name")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","MaxWidth",350)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","HeaderBackColor","#d3d3d3")


'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Customer_PO","MaxWidth",200)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Customer_PO","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Customer_PO","HeaderBackColor","#d3d3d3")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Contact","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Contact","HeaderBackColor","#d3d3d3")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Contact","MaxWidth",200)
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"PL","MaxWidth",100)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"PL","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"PL","HeaderBackColor","#d3d3d3")

'	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.Header.RowCount--,1)
'		gui.Form.GsGridWF.SetRowAppearance("Header",V.Local.i,"backcolor","#C3FDB8")	
'	F.Intrinsic.Control.Next(V.Local.i)

'	gui.Form1.GsGCTest.AddStyleFormatCOndition("Gridview1", "RunnerSpeed", "tagName1","between", 5, 7)
'	gui.Form1.GsGCTest.SetStyleFormatCOnditionProperty("Gridview1",  "RunnerSpeed", "tagName1", "backcolor", "pink")

	gui.Form.GsGridWF.AddStyleFormatCOndition(v.Global.sgHdrView, "SOH", "tagName1","NotEqual","1")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "SOH", "tagName1", "backcolor", "#C3FDB8")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "SOH", "tagName1", "ApplyToRow", True)

	gui.Form.GsGridWF.AddStyleFormatCondition(v.Global.sgHdrView,"SOH","Parentorange","Expression","len([SOH])<>7")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"SOH","Parentorange","Forecolor","Magenta")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"SOH","Parentorange","ApplyToRow",True)
	
	gui.Form.GsGridWF.AddSummaryItem(v.Global.sgHdrView, "name_Customer", "name_Customer", "Count", "Total No of Jobs :", "", "")
'	

'	v.Local.ssql.Set("select  Ord.order_no + '-' + Ord.Record_No AS SO")
'	f.Intrinsic.String.Build("{0} ,Part,Description,ORD.Product_Line,CASE WHEN Bill_Inspection IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Bill_Inspection,SQL_BIT)  END AS Bill_Inspection,Bill_DT,CASE WHEN Job_Web IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Job_Web,SQL_BIT)  END AS Job_Web,Job_DT,",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} CASE WHEN InspRpt_Web IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(InspRpt_Web,SQL_BIT)  END AS InspRpt_Web,InspRpt_DT,CASE WHEN Pics_Web IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Pics_Web,SQL_BIT)  END AS Pics_Web,Pics_DT,CASE WHEN Invoice_Storage IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Invoice_Storage,SQL_BIT)  END AS Invoice_Storage,Invoice_DT,",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} CASE WHEN Shipper IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Shipper,SQL_BIT)  END AS Shipper,Shipper_DT,CASE WHEN Remove_Web IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Remove_Web,SQL_BIT)  END AS Remove_Web,Remove_DT,CASE WHEN Close IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Close,SQL_BIT)  END AS Close,Notes,ORD.order_no as SO_NO,ORD.Record_No as SO_Line from v_DTL_BILL_HEADER OH  join v_customer_master Cust on OH.customer = Cust.customer ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} join v_DTL_BILL_LINES as ORD on OH.order_no = ORD.order_no ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} left join GCG_4391_BuckyDash as Dash on  ORD.order_no = Dash.SO_NO and Ord.Record_No = Dash.SO_Line join Inventory_Mstr INV on  Ord.part = INV.part and Ord.location = INV.location",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} where Ord.QTY_BO >0   ",v.Local.ssql,v.Local.ssql)
'	'and ORD.Product_Line = 'B1' 


	v.Local.ssql.Set("select  Ord.order_no + '-' + Ord.Record_No AS SO")
	f.Intrinsic.String.Build("{0} ,Ord.Part,Ord.Description,ORD.Product_Line,Bill_DT,Job_DT,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} InspRpt_DT,Pics_DT,Invoice_DT,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} Shipper_DT,Remove_DT,Close,Notes,ORD.Product_Line as 'PLDET',ORD.order_no as SO_NO,ORD.Record_No as SO_Line,' ' as SFlag from v_DTL_BILL_HEADER OH  join v_customer_master Cust on OH.customer = Cust.customer ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} join v_DTL_BILL_LINES as ORD on OH.order_no = ORD.order_no ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} left join GCG_4391_BuckyDash as Dash on  ORD.order_no = Dash.SO_NO and Ord.Record_No = Dash.SO_Line join Inventory_Mstr INV on  Ord.part = INV.part and Ord.location = INV.location",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line  where dash_type = '{1}'   ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)

	f.Intrinsic.String.Build("{0} union select  CASE WHEN JHdr.suffix = '' THEN JHdr.Job WHEN JHdr.suffix  <> '' THEN JHdr.Job + '-' + JHdr.suffix END AS SO ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} ,Part,Description,Product_Line,Bill_DT,Job_DT,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} InspRpt_DT,Pics_DT,Invoice_DT,",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} Shipper_DT,Remove_DT,Close,Notes,product_line as 'PLDET',job+suffix as SO_NO,'' as SO_Line,' ' as SFlag from  ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} v_job_header JHdr left join GCG_4391_BuckyDash as Dash on  job+suffix = Dash.SO_NO ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} join GCG_4391_PL PLMast on PLMast.PL = JHdr.Product_Line  where dash_type = '{1}' and year(Date_Closed) = '1900' and CAST(JHdr.Sales_order AS DOUBLE) =0   ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)

	F.Intrinsic.Control.If(v.DataTable.[v.Global.sgREL].Exists,=,True)
		F.Data.DataTable.Close(v.Global.sgREL)
	f.Intrinsic.Control.EndIf 


	F.Data.DataTable.CreateFromSql(v.Global.sgREL,"conx",v.Local.sSql,True)
	F.Data.DataView.Create(v.Global.sgREL,v.Global.sgDetView)
	F.Data.DataTable.AddRelation(v.Global.sgHdrView,"SOH",v.Global.sgREL,"So_No")
	gui.Form.GsGridWF.AddGridViewFromDataView(v.Global.sgDetView,v.Global.sgHdrView,v.Global.sgDetView)

	gui.Form.GsGridWF.MainView(v.Global.sgHdrView)

	gui.Form.GsGridWF.ExpandMasterRow(v.Global.sgHdrView,0)


'	F.Data.DataTable.CreateFromSQL("WFDT","conx",v.Local.sSQL,True)
'
'	gui.Form.GsGridWF.AddGridViewFromDataTable(v.Global.sgDetView,"WFDT") 
'	gui.Form.GsGridWF.mainview(v.Global.sgDetView)


	f.Intrinsic.Control.CallSub(enableapperance)

	gui.Form.GsGridWF.GetColumnCount(v.Global.sgDetView,v.Local.iret)
	f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
		gui.Form.GsGridWF.GetColumnNamebyIndex(v.Global.sgDetView,v.Local.i,v.Local.stitle)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"HeaderWordWrap","wrap")
'		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"MinWidth",50)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"HeaderFontBold","True")
	f.Intrinsic.Control.Next(v.Local.i)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "SO_NO", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "SO_Line", "Visible", False)
	'save flag
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Sflag", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SO","Caption","Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SO","CellForeColor","Blue")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"name_Customer","Caption","Customer Name")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "name_Customer", "Visible", False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Contact","Caption","Contact")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PLDET","Caption","PL")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PLDET","Visible",False)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Bill_DT","Caption","Bill for Inspection")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Job_DT","Caption","+Job to Website")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"InspRpt_DT","Caption","+Insp Rpt to Website")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Pics_DT","Caption","+Pics to Website")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_DT","Caption","Invoice Storage")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper_DT","Caption","Shipper")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Remove_DT","Caption","Remove from Website")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Close","Caption","Close")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","Caption","Notes")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","CellBackColor","LightYellow")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Bill_DT", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Job_DT", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "InspRpt_DT", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Pics_DT", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Invoice_DT", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Shipper_DT", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Remove_DT", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Close","Dropdownlist","YES*!*NO")




'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "start_date", "DisplayCustomDatetime", "d")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "due_date", "DisplayCustomDatetime", "d")
'	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Completed", "EditorButton", "Completed")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SO","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SO","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SO","MinWidth",80)
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Product_Line","MinWidth",30)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Product_Line","MaxWidth",30)

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"name_Customer","AllowEdit",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"name_Customer","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"name_Customer","FixedWidth",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"name_Customer","MinWidth",100)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"name_Customer","MaxWidth",300)
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"customer_PO","AllowEdit",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"customer_PO","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"customer_PO","MinWidth",100)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "customer_PO", "Visible", False)
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Contact","AllowEdit",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Contact","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Contact","MinWidth",100)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Contact","MaxWidth",300)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Part","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Part","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Part","MinWidth",90)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Description","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Description","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Description","MinWidth",120)

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Bill_DT","MinWidth",70)
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Job_DT","MinWidth",70)
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"InspRpt_DT","MinWidth",70)
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Pics_DT","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_DT","MinWidth",70)
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper_DT","MinWidth",70)
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Remove_DT","MinWidth",70)

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Close","MinWidth",10)


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","MinWidth",250)


'	f.Intrinsic.Control.CallSub(GridMode,"WFID",v.Local.iWF,"SMODE","Type1")
	f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type1","Start",4)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Show_Buckeye_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Show_Buckeye.End

Program.Sub.FieldServiceTech.Start
F.Intrinsic.Control.SetErrorHandler("FieldServiceTech_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.Local.ssql.Declare(String)
v.Local.ssqlsub.Declare(String)
v.Local.iWF.Declare(long)
V.Local.i.Declare(long)
v.Local.sPLsql.Declare(String)
v.Local.stitle.Declare(String)
v.Local.iret.Declare



	f.Global.WorkFlow.GetIDFromTitle("Field Service",v.Local.iWF)
		'get the ID to create the workflow
	f.Global.WorkFlow.GetTemplateIDFromTitle("Field Service",v.Local.iWF)

	f.Intrinsic.Control.If(v.Local.iWF,=,-1)
			'inform the user there is no template
			f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title Field Service")
			f.Intrinsic.Control.CallSub(form_unload)
	f.Intrinsic.Control.EndIf

'	v.Local.sPLsql.set(" Product_Line IN('F1','F2','F3','F4','F6','F7','F8','F9')")

	v.Local.ssql.Set("select  distinct Ord.order_no AS SOH,Cust.name_Customer,rtrim(ltrim(ORD.Group_lines)) as ISS,OH.salesperson as OSS,ORD.Product_Line as 'PL',OH.user_1 as 'End User',OH.user_2 as 'Location',OH.user_3 as 'Product',CASE WHEN CombinedJob IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(CombinedJob,SQL_BIT)  END as 'CombinedJob',' ' as SFlagHdr from v_Order_Header OH left join v_customer_master Cust on OH.customer = Cust.customer  join v_order_lines as ORD on OH.order_no = ORD.order_no  ")
	f.Intrinsic.String.Build("{0} left Join GCG_4391_FldSrvHdr GCG on OH.order_no = GCG.SO join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}'",v.Local.ssql,v.Global.sScreen,v.Local.ssql)

'	f.Intrinsic.String.Build("{0} union select job+suffix as order_no,Cust.name_Customer,' ' as ISS,' ' as OSS,product_line as 'PL',OH.user_1 as 'End User',OH.user_2 as 'Location' ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} from  v_job_header JOB left join v_customer_master Cust on JOB.customer = Cust.customer  where year(Date_Closed) = '1900' and CAST(Sales_order AS DOUBLE) =0   and {1} order by order_no ",v.Local.ssql,v.Local.sPLsql,v.Local.ssql)

	f.Intrinsic.String.Build("{0} union select Job.job+Job.suffix as order_no,Cust.name_Customer,rtrim(ltrim(JOB.code_sort)) as ISS,JOB.salesperson as OSS,JOB.product_line as 'PL',' ' as 'End User',Usr.user_6 as 'Location',Usr.user_7 as 'Product','' as 'Combined Job','' as SFlagHdr ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} from  v_job_header JOB left join WO_USER_FLDS USR on Job.Job = Usr.Job and Job.suffix = Usr.suffix left join v_customer_master Cust on JOB.customer = Cust.customer join GCG_4391_PL PLMast on PLMast.PL = JOB.product_line where dash_type = '{1}' and year(Date_Closed) = '1900' and CAST(Sales_order AS DOUBLE) =0   order by order_no ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)

	F.Intrinsic.Control.If(v.DataTable.[v.Global.sgHdrView].Exists,=,True)
		F.Data.DataTable.Close(v.Global.sgHdrView)
	f.Intrinsic.Control.EndIf 
'	F.Data.DataTable.CreateFromSQL("WFHDR","conx",v.Local.ssql)
'	
'	gui.Form.GsGridWF.AddGridView("WFHDR")
	F.Data.DataTable.CreateFromSql(v.Global.sgHdrView,"conx",v.Local.sSql,True)
	F.Data.DataView.Create(v.Global.sgHdrView,v.Global.sgHdrView)
	gui.Form.GsGridWF.AddGridViewFromDataView(v.Global.sgHdrView,v.Global.sgHdrView,v.Global.sgHdrView)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","Caption","Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","HeaderFontBold","True")
'	gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgHdrView,"Editable",False)
'	gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgHdrView,"readonly",True)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","Caption","Customer Name")

	gui.Form.GsGridWF.GetColumnCount(v.Global.sgHdrView,v.Local.iret)
	f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
		gui.Form.GsGridWF.GetColumnNamebyIndex(v.Global.sgHdrView,v.Local.i,v.Local.stitle)
'		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,v.Local.stitle,"MaxWidth",100)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,v.Local.stitle,"HeaderFontBold","True")
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,v.Local.stitle,"HeaderBackColor","#d3d3d3")
		
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,v.Local.stitle,"AllowEdit",False)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,v.Local.stitle,"ReadOnly",True)
	f.Intrinsic.Control.Next(v.Local.i)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"CombinedJob","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"CombinedJob","ReadOnly",False)

'	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.Header.RowCount--,1)
'		gui.Form.GsGridWF.SetRowAppearance("Header",V.Local.i,"backcolor","#C3FDB8")
'	F.Intrinsic.Control.Next(V.Local.i)

	gui.Form.GsGridWF.AddStyleFormatCOndition(v.Global.sgHdrView, "SOH", "tagName1","NotEqual","1")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "SOH", "tagName1", "backcolor", "#C3FDB8")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "SOH", "tagName1", "ApplyToRow", True)


	gui.Form.GsGridWF.AddStyleFormatCondition(v.Global.sgHdrView,"SOH","Parentorange","Expression","len([SOH])<>7")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"SOH","Parentorange","Forecolor","Magenta")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"SOH","Parentorange","ApplyToRow",True)
	
	gui.Form.GsGridWF.AddStyleFormatCOndition(v.Global.sgHdrView, "PL", "PLF2","Equal","F2")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "PL", "PLF2", "backcolor", "#CCCCFF")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "PL", "PLF2", "ApplyToRow", True)
	
	gui.Form.GsGridWF.AddStyleFormatCOndition(v.Global.sgHdrView, "CombinedJob", "CJ","Expression","[CombinedJob] = 1")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "CombinedJob", "CJ", "backcolor", "Yellow")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "CombinedJob", "CJ", "ApplyToRow", True)
	
	gui.Form.GsGridWF.AddSummaryItem(v.Global.sgHdrView, "name_Customer", "name_Customer", "Count", "Total No of Jobs :", "", "#")


'	Function.Intrinsic.Debug.InvokeDebugger
'	Function.Intrinsic.Debug.Stop
'	v.Local.ssql.Set("select CASE WHEN ORD.Record_No = '' THEN ORD.order_no WHEN ORD.Record_No <> '' THEN ORD.order_no + '-' + ORD.Record_No END AS SOD,CASE WHEN WO.Suffix = '' THEN WO.Job WHEN WO.Suffix <> '' THEN WO.Job + '-' + WO.Suffix END AS WO,FS_Request_Rec,CASE WHEN Define_Job_Spec IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Define_Job_Spec,SQL_BIT)  END AS Define_Job_Spec,CASE WHEN Warranty_Job IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Warranty_Job,SQL_BIT)  END AS Warranty_Job,CASE WHEN Quote_Required IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_Required,SQL_BIT)  END AS Quote_Required,CASE WHEN Start_SO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Start_SO,SQL_BIT)  END AS Start_SO,CASE WHEN CreateWO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(CreateWO,SQL_BIT)  END AS CreateWO,CASE WHEN Schedule_Service IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Schedule_Service,SQL_BIT)  END AS Schedule_Service,CASE WHEN VoiceConf IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(VoiceConf,SQL_BIT)  END AS VoiceConf,Email_conf_dt,Department,PartsOrdered,PartsDue,CASE WHEN AllPartsHere IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(AllPartsHere,SQL_BIT)  END AS AllPartsHere,CASE WHEN Order_Sp_Equip IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Order_Sp_Equip,SQL_BIT)  END AS Order_Sp_Equip,CASE WHEN Reconfirm_Cust IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Reconfirm_Cust,SQL_BIT)  END AS Reconfirm_Cust")
'	f.Intrinsic.String.Build("{0} ,CASE WHEN Prepare_Reports IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Prepare_Reports,SQL_BIT)  END AS Prepare_Reports,CASE WHEN Process_WO_Comp IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Process_WO_Comp,SQL_BIT)  END AS Process_WO_Comp,CASE WHEN Dash.Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Dash.Invoice,SQL_BIT)  END AS Invoice,CASE WHEN Pump_Check_In IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Pump_Check_In,SQL_BIT)  END AS Pump_Check_In, CASE WHEN RGA IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(RGA,SQL_BIT)  END AS RGA,CASE WHEN Do_return IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Do_return,SQL_BIT)  END AS Do_return,CASE WHEN Was_Start_Job IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Was_Start_Job,SQL_BIT)  END AS Was_Start_Job,CASE WHEN ORd.Product_Line =  'F2' THEN ORDTEXT.Text else Dash.Comments END AS Comments,ORD.order_no as So,ORD.record_no as So_Ln,'' as QUOTE,' ' as SFlag ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} ,CASE WHEN ORD.Record_No = '' THEN ORD.order_no WHEN ORD.Record_No <> '' THEN ORD.order_no + ORD.Record_No END  AS SOT,ORd.Product_Line as PLDET,' ' as SFlag  from order_header OH  join v_order_lines as ORD on OH.order_no = ORD.order_no and OH.Record_No = ORD.Record_No  left join order_to_wo as WO on  ORD.order_no = WO.order_no and Ord.Record_No = Wo.Order_line ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} left join GCG_4391_FldService as Dash on  ORD.order_no = Dash.SO_NO and Ord.Record_No = Dash.SO_Line left Join v_ORDER_LN_TEXT ORDTEXT on ORDTEXT.order_num =  ORD.order_no and ORDTEXT.Order_Line = ORD.Record_No and ORDTEXT.order_type = '9999' join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}'",v.Local.ssql,v.Global.sScreen,v.Local.ssql)

	v.Local.ssql.Set("select CASE WHEN ORD.Record_No = '' THEN ORD.order_no WHEN ORD.Record_No <> '' THEN ORD.order_no + '-' + ORD.Record_No END AS SOD,CASE WHEN WO.Suffix = '' THEN WO.Job WHEN WO.Suffix <> '' THEN WO.Job + '-' + WO.Suffix END AS WO,FS_Request_Rec,CASE WHEN Define_Job_Spec IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Define_Job_Spec,SQL_BIT)  END AS Define_Job_Spec,CASE WHEN Warranty_Job IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Warranty_Job,SQL_BIT)  END AS Warranty_Job,CASE WHEN Quote_Required IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_Required,SQL_BIT)  END AS Quote_Required,CASE WHEN Start_SO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Start_SO,SQL_BIT)  END AS Start_SO,CASE WHEN CreateWO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(CreateWO,SQL_BIT)  END AS CreateWO,CASE WHEN Schedule_Service IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Schedule_Service,SQL_BIT)  END AS Schedule_Service,CASE WHEN VoiceConf IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(VoiceConf,SQL_BIT)  END AS VoiceConf,Email_conf_dt,Department,PartsOrdered,PartsDue,CASE WHEN AllPartsHere IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(AllPartsHere,SQL_BIT)  END AS AllPartsHere,CASE WHEN Order_Sp_Equip IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Order_Sp_Equip,SQL_BIT)  END AS Order_Sp_Equip,CASE WHEN Reconfirm_Cust IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Reconfirm_Cust,SQL_BIT)  END AS Reconfirm_Cust")
	f.Intrinsic.String.Build("{0} ,CASE WHEN Prepare_Reports IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Prepare_Reports,SQL_BIT)  END AS Prepare_Reports,CASE WHEN Process_WO_Comp IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Process_WO_Comp,SQL_BIT)  END AS Process_WO_Comp,CASE WHEN Dash.Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Dash.Invoice,SQL_BIT)  END AS Invoice,CASE WHEN Pump_Check_In IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Pump_Check_In,SQL_BIT)  END AS Pump_Check_In, CASE WHEN RGA IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(RGA,SQL_BIT)  END AS RGA,CASE WHEN Do_return IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Do_return,SQL_BIT)  END AS Do_return,CASE WHEN Was_Start_Job IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Was_Start_Job,SQL_BIT)  END AS Was_Start_Job,CASE WHEN ORd.Product_Line =  'F2' THEN ORDTEXT.Text else Dash.Comments END AS Comments,ORD.order_no as So,ORD.record_no as So_Ln,'' as QUOTE,' ' as SFlag ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} ,CASE WHEN ORD.Record_No = '' THEN ORD.order_no WHEN ORD.Record_No <> '' THEN ORD.order_no + ORD.Record_No END  AS SOT,ORd.Product_Line as PLDET,' ' as SFlag  from v_order_lines as ORD left join order_to_wo as WO on  ORD.order_no = WO.order_no and Ord.Record_No = Wo.Order_line ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} left join GCG_4391_FldService as Dash on  ORD.order_no = Dash.SO_NO and Ord.Record_No = Dash.SO_Line left Join v_ORDER_LN_TEXT ORDTEXT on ORDTEXT.order_num =  ORD.order_no and ORDTEXT.Order_Line = ORD.Record_No and ORDTEXT.order_type = '9999' join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}'",v.Local.ssql,v.Global.sScreen,v.Local.ssql)


	v.Local.ssqlsub.Set("select CASE WHEN JHdr.suffix = '' THEN JHdr.Job WHEN JHdr.suffix  <> '' THEN JHdr.Job + '-' + JHdr.suffix END AS SOD,CASE WHEN JHdr.suffix = '' THEN JHdr.Job WHEN JHdr.suffix  <> '' THEN JHdr.Job + '-' + JHdr.suffix END AS WO,FS_Request_Rec,CASE WHEN Define_Job_Spec IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Define_Job_Spec,SQL_BIT)  END AS Define_Job_Spec,CASE WHEN Warranty_Job IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Warranty_Job,SQL_BIT)  END AS Warranty_Job,CASE WHEN Quote_Required IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_Required,SQL_BIT)  END AS Quote_Required,CASE WHEN Start_SO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Start_SO,SQL_BIT)  END AS Start_SO,CASE WHEN CreateWO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(CreateWO,SQL_BIT)  END AS CreateWO,CASE WHEN Schedule_Service IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Schedule_Service,SQL_BIT)  END AS Schedule_Service,CASE WHEN VoiceConf IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(VoiceConf,SQL_BIT)  END AS VoiceConf,Email_conf_dt,Department,PartsOrdered,PartsDue,CASE WHEN AllPartsHere IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(AllPartsHere,SQL_BIT)  END AS AllPartsHere,CASE WHEN Order_Sp_Equip IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Order_Sp_Equip,SQL_BIT)  END AS Order_Sp_Equip,CASE WHEN Reconfirm_Cust IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Reconfirm_Cust,SQL_BIT)  END AS Reconfirm_Cust")
	f.Intrinsic.String.Build("{0} ,CASE WHEN Prepare_Reports IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Prepare_Reports,SQL_BIT)  END AS Prepare_Reports,CASE WHEN Process_WO_Comp IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Process_WO_Comp,SQL_BIT)  END AS Process_WO_Comp,CASE WHEN Dash.Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Dash.Invoice,SQL_BIT)  END AS Invoice,CASE WHEN Pump_Check_In IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Pump_Check_In,SQL_BIT)  END AS Pump_Check_In, CASE WHEN RGA IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(RGA,SQL_BIT)  END AS RGA,CASE WHEN Do_return IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Do_return,SQL_BIT)  END AS Do_return,CASE WHEN Was_Start_Job IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Was_Start_Job,SQL_BIT)  END AS Was_Start_Job,Dash.Comments AS Comments,job+suffix as So,'' as So_Ln,'' as QUOTE,' ' as SFlag ",v.Local.ssqlsub,v.Local.ssqlsub)
	f.Intrinsic.String.Build("{0} ,job+suffix  AS SOT,Product_Line as PLDET,' ' as SFlag   ",v.Local.ssqlsub,v.Local.ssqlsub)
	f.Intrinsic.String.Build("{0} from v_job_header JHdr left join GCG_4391_FldService as Dash on  job+suffix = Dash.SO_NO join GCG_4391_PL PLMast on PLMast.PL = JHdr.Product_Line where dash_type = '{1}' and year(Date_Closed) = '1900' and CAST(JHdr.Sales_order AS DOUBLE) =0  ",v.Local.ssqlsub,v.Global.sScreen,v.Local.ssqlsub)


	F.Intrinsic.Control.If(v.DataTable.[v.Global.sgREL].Exists,=,True)
		F.Data.DataTable.Close(v.Global.sgREL)
		F.Data.DataTable.Close("DTTemp")
	f.Intrinsic.Control.EndIf 
	F.Data.DataTable.CreateFromSql(v.Global.sgREL,"conx",v.Local.sSql,True)

	F.Data.DataTable.CreateFromSql("DTTemp","conx",v.Local.ssqlsub,false)
	
	F.Data.DataTable.Merge("DTTemp",v.Global.sgREL,False,2)

	F.Data.DataView.Create(v.Global.sgREL,v.Global.sgDetView)
	F.Data.DataTable.AddRelation(v.Global.sgHdrView,"SOH",v.Global.sgREL,"So")
	gui.Form.GsGridWF.AddGridViewFromDataView(v.Global.sgDetView,v.Global.sgHdrView,v.Global.sgDetView)



	'	'---code to auto poulate data table from dictionary
	V.Local.bDictExists.Declare(boolean)

	F.Data.Dictionary.Exists("WFDIC",V.Local.bDictExists)
	F.Intrinsic.Control.If(V.Local.bDictExists,=,True)
		F.Data.Dictionary.Close("WFDIC")
	F.Intrinsic.Control.EndIf


	v.Local.ssql.Set("select distinct OH.order_no SOH,OH.Quote Quote from Order_Header OH  left join v_customer_master Cust on OH.customer = Cust.customer  ")
	f.Intrinsic.String.Build("{0} join v_QUOTE_LINES QO on OH.QUOTE = QO.QUOTE_NO  where OH.order_no in (select ORD.order_no from  v_order_lines as ORD join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}' and OH.order_no = ORD.order_no  ) ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)


	F.Data.Dictionary.CreateFromSQL("WFDIC","conx",v.Local.ssql)
	F.Data.Dictionary.SetDefaultReturn("WFDIC","")

	F.Data.DataTable.FillFromDictionary(v.Global.sgREL,"WFDIC","So","Quote")
	
	
	
'	gui.Form.GsGridWF.AddStyleFormatCOndition(v.Global.sgDetView, "PLDET", "PLF2","Equal","F2")
'	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgDetView,  "PLDET", "PLF2", "backcolor", "Yellow")
'	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgDetView,  "PLDET", "PLF2", "ApplyToRow", True)



	gui.Form.GsGridWF.MainView(v.Global.sgHdrView)

	gui.Form.GsGridWF.ExpandMasterRow(v.Global.sgHdrView,0)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "So", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "So_Ln", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "QUOTE", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "SOT", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "PLDET", "Visible", False)
	'save flag
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView, "SflagHdr", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Sflag", "Visible", False)

	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Department","Dropdownlist","*!*711*!*712*!*716*!*720*!*721")

	'Remove
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Quote", "Visible", True)


'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"QUOTE","MinWidth",200)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","Caption","Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "SOD", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","CellForeColor","Blue")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","Caption","Work Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "WO", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","CellForeColor","Blue")
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"name_Customer","Caption","Customer Name")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "name_Customer", "Visible", False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"ISS","Caption","ISS")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "ISS", "Visible", False)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"FS_Request_Rec","Caption","FS Request Received (Cust/ISS)")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "FS_Request_Rec", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "FS_Request_Rec", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Define_Job_Spec","Caption","Define Job Specs")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Define_Job_Spec", "HeaderWordWrap", "wrap")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Warranty_Job","Caption","Warranty Job")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Warranty_Job", "HeaderWordWrap", "wrap")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Required","Caption","Quote Required?")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Quote_Required", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Start_SO","Caption","Start Sales Order")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Start_SO", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"CreateWO","Caption","Create Work Order")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "CreateWO", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Schedule_Service","Caption","Schedule Service Tech- Service or Removal")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Schedule_Service", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Schedule_Service", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"VoiceConf","Caption","Voice Confirmation of date")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "VoiceConf", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Email_conf_dt","Caption","Email confirmation of date")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Email_conf_dt", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Email_conf_dt", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsOrdered","Caption","Parts Ordered")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsDue","Caption","Parts Due")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"AllPartsHere","Caption","All Parts Here")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "PartsOrdered", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Department", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "PartsOrdered", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "PartsDue", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "PartsDue", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Email_conf_dt", "DisplayCustomDatetime", "d")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Sp_Equip","Caption","Order Special Equipment, crane, contractor?")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Order_Sp_Equip", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Reconfirm_Cust","Caption","Reconfirm With Customer")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Reconfirm_Cust", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_Reports","Caption","Prepare Reports and Link Server File")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Prepare_Reports", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Process_WO_Comp","Caption","Process When WO is complete")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Process_WO_Comp", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice","Caption","Invoice")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Pump_Check_In","Caption","Pump Check In?")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Pump_Check_In", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RGA","Caption","RGA?")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Do_return","Caption","Do we need to return?")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Do_return", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Was_Start_Job","Caption","Was this a Start Up Job?")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Was_Start_Job", "HeaderWordWrap", "wrap")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Comments","Caption","Comments")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Comments","CellBackColor","LightYellow")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","ReadOnly",True)


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","ReadOnly",True)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Comments","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Comments","ReadOnly",False)
	
	f.Intrinsic.Control.CallSub(enableapperance)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Comments","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"FS_Request_Rec","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Define_Job_Spec","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Required","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Start_SO","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"CreateWO","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Schedule_Service","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"VoiceConf","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Email_conf_dt","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Department","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsOrdered","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsDue","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"AllPartsHere","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Sp_Equip","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Reconfirm_Cust","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_Reports","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Process_WO_Comp","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Pump_Check_In","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RGA","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Do_return","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Was_Start_Job","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Comments","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Warranty_Job","HeaderFontBold","True")

'Remove
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Warranty_Job","AllowEdit","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Warranty_Job","ReadOnly","False")

'	f.Intrinsic.Control.CallSub(GridMode,"WFID",v.Local.iWF,"SMODE","Type1")
	f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type1","Start",2)
	
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Department","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Department","ReadOnly",False)
'	
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsOrdered","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsOrdered","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsDue","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsDue","ReadOnly",False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("FieldServiceTech_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,=,21034)
	f.Intrinsic.Control.CallSub(pouplate_hdrdup)
F.Intrinsic.Control.elseIf(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.FieldServiceTech.End

Program.Sub.FS_Quote_UnLoad.Start
F.Intrinsic.Control.SetErrorHandler("Show_Data_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

gui.Form..enabled(true)
gui.FS_Quote..Visible(false)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Show_Data_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.FS_Quote_UnLoad.End

Program.Sub.Quote_RequiredFS.Start
F.Intrinsic.Control.SetErrorHandler("Quote_RequiredFS_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSO.Declare(String)
V.Local.sSline.Declare(String)
V.Local.sQO.Declare(String)
v.Local.iWF.Declare(long)
V.Local.sSQL.Declare(String)
v.Local.iCol.Declare(long)




f.Intrinsic.Control.If(v.Args.QType,=,"FSQ")
	f.Global.WorkFlow.GetIDFromTitle("Field Service Quote",v.Local.iWF)
		'get the ID to create the workflow
	f.Global.WorkFlow.GetTemplateIDFromTitle("Field Service Quote",v.Local.iWF)

	f.Intrinsic.Control.If(v.Local.iWF,=,-1)
			'inform the user there is no template
			f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title Field Service Quote")
	f.Intrinsic.Control.EndIf
'	
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,22,V.Args.cROW,V.Local.sSO)
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,23,V.Args.cROW,V.Local.sSline)
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,24,V.Args.cROW,V.Local.sQO)
'	
	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)

	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO_Ln", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)

	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "QUOTE", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sQO)
f.Intrinsic.Control.elseIf(v.Args.QType,=,"COQ")
	f.Global.WorkFlow.GetIDFromTitle("Controls Quote",v.Local.iWF)
		'get the ID to create the workflow
	f.Global.WorkFlow.GetTemplateIDFromTitle("Controls Quote",v.Local.iWF)

	f.Intrinsic.Control.If(v.Local.iWF,=,-1)
			'inform the user there is no template
			f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title Controls Quote")
	f.Intrinsic.Control.EndIf

'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,25,V.Args.cROW,V.Local.sSO)
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,26,V.Args.cROW,V.Local.sSline)
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,2,V.Args.cROW,V.Local.sQO)

	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)

	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO_Ln", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)

	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "QUOTE", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sQO)
f.Intrinsic.Control.EndIf 

'F.Intrinsic.Debug.InvokeDebugger
'
'


f.Intrinsic.String.Build("select '{0}' as Quote, CASE WHEN Opennew_quote_router IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Opennew_quote_router,SQL_BIT)  END AS Opennew_quote_router,CASE WHEN Quote_app10k IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_app10k,SQL_BIT)  END AS Quote_app10k,CASE WHEN ISS_Quote_app IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(ISS_Quote_app,SQL_BIT)  END AS ISS_Quote_app,Send_Quote,Customer_Approval,SOrder,SLine,QType  from GCG_4391_WFFSQuote where SOrder = '{1}' and SLine = '{2}' and QType = '{3}'",V.Local.sQO,V.Local.sSO,V.Local.sSline,v.Args.QType,v.Local.sSQL)

F.Intrinsic.Control.If(v.DataTable.ESTQUOTE.Exists,=,True)
	F.Data.DataTable.Close("ESTQUOTE")
f.Intrinsic.Control.EndIf 

F.Data.DataTable.CreateFromSQL("ESTQUOTE","conx",v.Local.sSQL,True)
gui.frmNestedQuote.GsGridQuote.AddGridViewFromDataTable("Grid_ESTQUOTE","ESTQUOTE") 
gui.frmNestedQuote.GsGridQuote.mainview("Grid_ESTQUOTE")


'F.Intrinsic.Control.If(v.DataView.drawing!Dup_View.rowcount,>,0)
'F.Intrinsic.Control.If(v.DataView.ESTQUOTE!Grid_ESTQUOTE.rowcount,=,0)
F.Intrinsic.Control.If(Variable.DataTable.ESTQUOTE.rowcount,=,0)
	F.Data.DataTable.AddRow("ESTQUOTE", "Quote", V.Local.sQO, "Opennew_quote_router", False, "Quote_app10k",False,"ISS_Quote_app",False,"Send_Quote",v.Ambient.dbnull,"Customer_Approval",v.Ambient.dbnull,"SOrder",V.Local.sSO,"SLine",V.Local.sSline,"QType",v.Args.QType)
Function.Intrinsic.Control.EndIf

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote","AllowEdit",False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote","ReadOnly",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote","MinWidth",80)

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "Send_Quote", "DisplayCustomDatetime", "d")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "Customer_Approval", "DisplayCustomDatetime", "d")

gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "Enableappearanceevenrow", "True")

'f.Intrinsic.Control.CallSub(GridMode,"WFID",v.Local.iWF,"SMODE","Type2")
f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type2","Start",1)


gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote","HeaderFontBold","True")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Opennew_quote_router","HeaderFontBold","True")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote_app10k","HeaderFontBold","True")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","ISS_Quote_app","HeaderFontBold","True")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Send_Quote","HeaderFontBold","True")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Customer_Approval","HeaderFontBold","True")

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Opennew_quote_router","Caption","Opennew Quote Router")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote_app10k","Caption","Quote app10k")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","ISS_Quote_app","Caption","ISS Quote app")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Send_Quote","Caption","Send Quote")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Customer_Approval","Caption","Customer Approval")

gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "Enableappearanceevenrow", "True")
'gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "ColumnPanelRowHeight", "50")


gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SOrder", "Visible", False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SLine", "Visible", False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "QType", "Visible", False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Quote_RequiredFS_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Quote_RequiredFS.End

Program.Sub.Parts_FS.Start
F.Intrinsic.Control.SetErrorHandler("Parts_FS_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSO.Declare(String)
V.Local.sSline.Declare(String)
V.Local.sQO.Declare(String)
v.Local.iWF.Declare(long)
V.Local.sSQL.Declare(String)
v.Local.iCol.Declare(long)


'PType
'FSP 
'COP


f.Intrinsic.Control.If(v.Args.PType,=,"FSP")
	f.Global.WorkFlow.GetIDFromTitle("Field Service Parts Needed",v.Local.iWF)
		'get the ID to create the workflow
	f.Global.WorkFlow.GetTemplateIDFromTitle("Field Service Parts Needed",v.Local.iWF)

'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,22,V.Args.cROW,V.Local.sSO)
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,23,V.Args.cROW,V.Local.sSline)


	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)

	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO_Ln", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)

f.Intrinsic.Control.ElseIf(v.Args.PType,=,"COP")
	f.Global.WorkFlow.GetIDFromTitle("Controls Parts Needed",v.Local.iWF)
		'get the ID to create the workflow
	f.Global.WorkFlow.GetTemplateIDFromTitle("Controls Parts Needed",v.Local.iWF)

'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,25,V.Args.cROW,V.Local.sSO)
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,26,V.Args.cROW,V.Local.sSline)


	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)

	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO_Ln", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)

f.Intrinsic.Control.EndIf 

f.Intrinsic.Control.If(v.Local.iWF,=,-1)
		'inform the user there is no template
		f.Intrinsic.UI.Msgbox("There are no Workflow templates")
f.Intrinsic.Control.EndIf


'F.Intrinsic.Debug.InvokeDebugger
'
'


'f.Intrinsic.String.Build("select Quote, CASE WHEN Opennew_quote_router IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Opennew_quote_router,SQL_BIT)  END AS Opennew_quote_router,CASE WHEN PPP IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(PPP,SQL_BIT)  END AS PPP,CASE WHEN RequestFS_Quote IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(RequestFS_Quote,SQL_BIT)  END AS RequestFS_Quote,CASE WHEN Send_Repair_Quote IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Send_Repair_Quote,SQL_BIT)  END AS Send_Repair_Quote,CASE WHEN Customer_Approval IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Customer_Approval,SQL_BIT)  END AS Customer_Approval,SOrder,SLine  from GCG_4391_WFREPQuote where SOrder = '{0}' and SLine = '{1}'",V.Local.sSO,V.Local.sSline,v.Args.Pump_Type,v.Local.sSQL)
f.Intrinsic.String.Build("select CASE WHEN Order_PartsPO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Order_PartsPO,SQL_BIT)  END AS Order_PartsPO,CASE WHEN Commit_Partsstock IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Commit_Partsstock,SQL_BIT)  END AS Commit_Partsstock,CASE WHEN Receive_InParts IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Receive_InParts,SQL_BIT)  END AS Receive_InParts,CASE WHEN Shipper IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Shipper,SQL_BIT)  END AS Shipper,SO,SLine,PType  from GCG_4391_WFFSParts where SO = '{0}' and SLine = '{1}' and PType = '{2}'",V.Local.sSO,V.Local.sSline,v.Args.PType,v.Local.sSQL)

F.Intrinsic.Control.If(v.DataTable.ESTQUOTE.Exists,=,True)
	F.Data.DataTable.Close("ESTQUOTE")
f.Intrinsic.Control.EndIf 

F.Data.DataTable.CreateFromSQL("ESTQUOTE","conx",v.Local.sSQL,True)
gui.frmNestedQuote.GsGridQuote.AddGridViewFromDataTable("Grid_ESTQUOTE","ESTQUOTE") 
gui.frmNestedQuote.GsGridQuote.mainview("Grid_ESTQUOTE")


F.Intrinsic.Control.If(Variable.DataTable.ESTQUOTE.rowcount,=,0)
	F.Data.DataTable.AddRow("ESTQUOTE","Order_PartsPO", False, "Commit_Partsstock",False,"Receive_InParts",False,"Shipper",False,"SO",V.Local.sSO,"SLine",V.Local.sSline,"PType",v.Args.PType)
Function.Intrinsic.Control.EndIf

'f.Intrinsic.Control.CallSub(GridMode,"WFID",v.Local.iWF,"SMODE","Type2")
f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type2","Start",0)

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SO", "Visible", False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SLine", "Visible", False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "PType", "Visible", False)


gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Order_PartsPO","HeaderFontBold","True")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Commit_Partsstock","HeaderFontBold","True")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Receive_InParts","HeaderFontBold","True")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Shipper","HeaderFontBold","True")

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Order_PartsPO","Caption","Order Parts PO")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Commit_Partsstock","Caption","Commit Parts stock")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Receive_InParts","Caption","Receive InParts")

gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "Enableappearanceevenrow", "True")
'gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "ColumnPanelRowHeight", "50")



F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Parts_FS_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Parts_FS.End

Program.Sub.ISS_SOQO.Start
F.Intrinsic.Control.SetErrorHandler("ISS_SOQO_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)



v.Local.ssql.Declare(String)
v.Local.iWF.Declare(long)
V.Local.i.Declare(long)
v.Local.stitle.Declare(String)
v.Local.iret.Declare(long)


	f.Global.WorkFlow.GetIDFromTitle("New Sales Order",v.Local.iWF)
		'get the ID to create the workflow
	f.Global.WorkFlow.GetTemplateIDFromTitle("New Sales Order",v.Local.iWF)

	f.Intrinsic.Control.If(v.Local.iWF,=,-1)
			'inform the user there is no template
			f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title New Sales Order")
			f.Intrinsic.Control.CallSub(form_unload)
	f.Intrinsic.Control.EndIf
''	

'('I1','I2','I3','I4','I5', 'IB', 'IH', 'IO', 'IP','M1','M2','M3','M4','M5', 'MB', 'MH', 'MO', 'MP','MR','MS','IR','IS')


'CAll from Repair Dash
'f.Intrinsic.Control.If(V.Global.sCall.trim ,=,"")
'	v.Local.ssql.Set("select distinct Ord.order_no AS SOH,Cust.name_Customer,OH.Customer_PO, ORD.Product_Line as 'PL',rtrim(ltrim(OH.code_sort)) as ISS,OH.salesperson as OSS,OH.user_1 as 'End User',OH.user_2 as 'Location',OH.user_3 as 'Product' from v_Order_Header OH left join v_customer_master Cust on OH.customer = Cust.customer  join v_order_lines as ORD on OH.order_no = ORD.order_no  ")
	v.Local.ssql.Set("select distinct Ord.order_no AS SOH,Cust.name_Customer,OH.Customer_PO, ORD.Product_Line as 'PL',rtrim(ltrim(ORD.Group_lines)) as ISS,OH.salesperson as OSS,OH.user_1 as 'End User',OH.user_2 as 'Location',OH.user_3 as 'Product',Date_Due as 'Date Due',Urgency,' ' as SFlagHdr from v_Order_Header OH left join v_customer_master Cust on OH.customer = Cust.customer  join v_order_lines as ORD on OH.order_no = ORD.order_no  ")
	f.Intrinsic.String.Build("{0} left Join GCG_4391_ISSQOSOHdr GCG on OH.order_no = GCG.SO  join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}' ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)
	' and ORD.Product_Line IN ('I1','I2','I3','I4','I5', 'IB', 'IH', 'IO', 'IP','M1','M2','M3','M4','M5', 'MB', 'MH', 'MO', 'MP')
	'

'	v.Local.ssql.Set(" union select distinct Ord.order_no AS SOH,Cust.name_Customer,OH.Customer_PO, ORD.Product_Line as 'PL',rtrim(ltrim(ORD.Group_lines)) as ISS,OH.salesperson as OSS,OH.user_1 as 'End User',OH.user_2 as 'Location',OH.user_3 as 'Product' from v_Order_Header OH left join v_customer_master Cust on OH.customer = Cust.customer  join v_order_lines as ORD on OH.order_no = ORD.order_no  ")
'	f.Intrinsic.String.Build("{0} where ORD.Product_Line IN ('I1','I2','I3','I4','I5', 'IB', 'IH', 'IO', 'IP','M1','M2','M3','M4','M5', 'MB', 'MH', 'MO', 'MP')  order by Ord.order_no ",v.Local.ssql,v.Local.ssql)

'	f.Intrinsic.String.Build("{0} union select job+suffix as SOH,Cust.name_Customer,customer_PO,product_line as 'PL','' as ISS,'' as OSS,'' as 'End User','' as Location,'' as Product,Date_Due as 'Date Due' ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} from  v_job_header JOB left join v_customer_master Cust on JOB.customer = Cust.customer  where year(Date_Closed) = '1900' and CAST(Sales_order AS DOUBLE) =0  and JOb.Product_Line IN ('I1','I2','I3','I4','I5', 'IB', 'IH', 'IO', 'IP','M1','M2','M3','M4','M5', 'MB', 'MH', 'MO', 'MP','MR','MS','IR','IS') order by order_no ",v.Local.ssql,v.Local.ssql)

	f.Intrinsic.String.Build("{0} union select Job.job+Job.suffix as SOH,Cust.name_Customer,customer_PO,product_line as 'PL',rtrim(ltrim(JOB.code_sort)) as ISS,JOB.salesperson as OSS,'' as 'End User',Usr.user_6 as 'Location',Usr.user_7 as 'Product',Date_Due as 'Date Due','' as 'Urgency',' ' as SFlagHdr ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} from  v_job_header JOB left join WO_USER_FLDS USR on Job.Job = Usr.Job and Job.suffix = Usr.suffix left join v_customer_master Cust on JOB.customer = Cust.customer   join GCG_4391_PL PLMast on PLMast.PL = Job.Product_Line where dash_type = '{1}' and year(Date_Closed) = '1900' and CAST(Sales_order AS DOUBLE) =0 order by order_no ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)

	F.Intrinsic.Control.If(v.DataTable.[v.Global.sgHdrView].Exists,=,True)
		F.Data.DataTable.Close(v.Global.sgHdrView)
	f.Intrinsic.Control.EndIf 

	F.Data.DataTable.CreateFromSql(v.Global.sgHdrView,"conx",v.Local.sSql,True)
	F.Data.DataView.Create(v.Global.sgHdrView,v.Global.sgHdrView)
	gui.Form.GsGridWF.AddGridViewFromDataView(v.Global.sgHdrView,v.Global.sgHdrView,v.Global.sgHdrView)
	
	gui.Form.GsGridWF.GetColumnCount(v.Global.sgHdrView,v.Local.iret)
	f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
		gui.Form.GsGridWF.GetColumnNamebyIndex(v.Global.sgHdrView,v.Local.i,v.Local.stitle)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,v.Local.stitle,"AllowEdit",False)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,v.Local.stitle,"ReadOnly",True)
	f.Intrinsic.Control.Next(v.Local.i)
	
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView, "SflagHdr", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Urgency","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Urgency","ReadOnly",False)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView, "Date Due", "DisplayCustomDatetime", "d")


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","Caption","Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","HeaderFontBold","True")
'	gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgHdrView,"Editable",False)
'	gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgHdrView,"readonly",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","HeaderBackColor","#d3d3d3")
'	gui.Form.GsGridWF.SetRowAppearance("Header",0,"backcolor","#C3FDB8")

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","MaxWidth",100)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","Caption","Customer Name")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","MaxWidth",350)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","HeaderBackColor","#d3d3d3")

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Customer_PO","MaxWidth",100)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Customer_PO","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Customer_PO","HeaderBackColor","#d3d3d3")

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"ISS","MaxWidth",100)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"ISS","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"ISS","HeaderBackColor","#d3d3d3")
'	
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"OSS","MaxWidth",100)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"OSS","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"OSS","HeaderBackColor","#d3d3d3")

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"End User","MaxWidth",200)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"End User","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"End User","HeaderBackColor","#d3d3d3")
'	
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Location","MaxWidth",200)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Location","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Location","HeaderBackColor","#d3d3d3")

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Product","MaxWidth",200)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Product","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Product","HeaderBackColor","#d3d3d3")

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"PL","MaxWidth",100)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"PL","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"PL","HeaderBackColor","#d3d3d3")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Date Due","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Date Due","HeaderBackColor","#d3d3d3")
	
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Urgency","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Urgency","HeaderBackColor","#d3d3d3")


'	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.Header.RowCount--,1)
'		gui.Form.GsGridWF.SetRowAppearance("Header",V.Local.i,"backcolor","#C3FDB8")
'	F.Intrinsic.Control.Next(V.Local.i)

	gui.Form.GsGridWF.AddStyleFormatCOndition(v.Global.sgHdrView, "SOH", "tagName1","NotEqual","1")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "SOH", "tagName1", "backcolor", "#C3FDB8")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "SOH", "tagName1", "ApplyToRow", True)

	gui.Form.GsGridWF.AddStyleFormatCondition(v.Global.sgHdrView,"SOH","Parentorange","Expression","len([SOH])<>7")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"SOH","Parentorange","Forecolor","Magenta")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"SOH","Parentorange","ApplyToRow",True)

'f.Intrinsic.Control.EndIf 


	gui.Form.GsGridWF.ColumnEdit(v.Global.sgHdrView,"Urgency","Dropdownlist","*!*Urgent*!*Normal*!*Late Delivery*!*RMA")

	gui.Form.GsGridWF.AddStyleFormatCondition(v.Global.sgHdrView,"Urgency","UrgentYell","Expression","[Urgency] = 'Late Delivery'")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"Urgency","UrgentYell","backcolor","Yellow")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"Urgency","UrgentYell","ApplyToRow",True)
	
	gui.Form.GsGridWF.AddStyleFormatCondition(v.Global.sgHdrView,"Urgency","UrgentRED","Expression","[Urgency] = 'Urgent'")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"Urgency","UrgentRED","backcolor","Red")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"Urgency","UrgentRED","ApplyToRow",True)
	
	gui.Form.GsGridWF.AddStyleFormatCondition(v.Global.sgHdrView,"Urgency","RMAPUR","Expression","[Urgency] = 'RMA'")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"Urgency","RMAPUR","backcolor","Magenta")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"Urgency","RMAPUR","ApplyToRow",True)
	gui.Form.GsGridWF.AddSummaryItem(v.Global.sgHdrView, "name_Customer", "name_Customer", "Count", "Total No of Jobs :", "", "")

'
'
	v.Local.ssql.Set("select distinct CASE WHEN ORD.Record_No = '' THEN ORD.order_no WHEN ORD.Record_No <> '' THEN ORD.order_no + '-' + ORD.Record_No END AS SOD,CASE WHEN WO.Suffix = '' THEN WO.Job WHEN WO.Suffix <> '' THEN WO.Job + '-' + WO.Suffix END AS WO")
	f.Intrinsic.String.Build("{0} ,ORD.Part,X.Mfg_part as 'MFG Part Number',Margin ,'' as Quote,ORD.Product_Line as PLDET,RFQ_Received,Bid_DueDate,CASE WHEN IsBid_Quote IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(IsBid_Quote,SQL_BIT)  END AS IsBid_Quote,FS_RFQ,Controls_RFQ,CASE WHEN SendOut_Pricing IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(SendOut_Pricing,SQL_BIT)  END AS SendOut_Pricing,Follow_up,CASE WHEN Double_CheckSheet IS NULL THEN '' else Double_CheckSheet  END AS Double_CheckSheet,CASE WHEN Router_Worksheet IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Router_Worksheet,SQL_BIT)  END AS Router_Worksheet,Create_Quote,CASE WHEN Quote_Approval_10k IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_Approval_10k,SQL_BIT)  END AS Quote_Approval_10k,CASE WHEN Quote_Sent IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_Sent,SQL_BIT)  END AS Quote_Sent,CASE WHEN Customer_Approval IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Customer_Approval,SQL_BIT)  END AS Customer_Approval,CASE WHEN IsBid_SO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(IsBid_SO,SQL_BIT)  END AS IsBid_SO,CASE WHEN Create_SO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Create_SO,SQL_BIT)  END AS Create_SO,Send_OrderAck,CASE WHEN Prepare_PhysicalFile IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Prepare_PhysicalFile,SQL_BIT)  END AS Prepare_PhysicalFile,PO_TCNeeded,Invoice_CutoffDT,CASE WHEN Issue_Material IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Issue_Material,SQL_BIT)  END AS Issue_Material,Order_Parts,CASE WHEN Verify_ShipSchedule IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Verify_ShipSchedule,SQL_BIT)  END AS Verify_ShipSchedule,CASE WHEN Shipper IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Shipper,SQL_BIT)  END AS Shipper,BOM,Notes,ORD.order_no as SO,ORD.record_no as So_Ln,OH.Customer,' ' as SFlag ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} from order_header OH  join v_order_lines as ORD on OH.order_no = ORD.order_no and OH.Record_No = ORD.Record_No  left join order_to_wo as WO on  ORD.order_no = WO.order_no and Ord.Record_No = Wo.Order_line ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)
	f.Intrinsic.String.Build("{0} left join GCG_4391_ISSQOSO as Dash on  ORD.order_no = Dash.SO and Ord.Record_No = Dash.SO_Ln left join v_INV_CROSS_REF X on X.Part = ORD.Part and Mfg_part <> ''",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0}  join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}'",v.Local.ssql,v.Local.ssql)

	f.Intrinsic.String.Build("{0}  union select CASE WHEN JHdr.suffix = '' THEN JHdr.Job WHEN JHdr.suffix  <> '' THEN JHdr.Job + '-' + JHdr.suffix END AS SOD,CASE WHEN JHdr.suffix = '' THEN JHdr.Job WHEN JHdr.suffix  <> '' THEN JHdr.Job + '-' + JHdr.suffix END  AS WO ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} ,JHdr.Part,X.Mfg_part as 'MFG Part Number','' as Margin,'' as Quote,Product_Line PLDET,RFQ_Received,Bid_DueDate,CASE WHEN IsBid_Quote IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(IsBid_Quote,SQL_BIT)  END AS IsBid_Quote,FS_RFQ,Controls_RFQ,CASE WHEN SendOut_Pricing IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(SendOut_Pricing,SQL_BIT)  END AS SendOut_Pricing,Follow_up,CASE WHEN Double_CheckSheet IS NULL THEN '' else Double_CheckSheet  END AS Double_CheckSheet,CASE WHEN Router_Worksheet IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Router_Worksheet,SQL_BIT)  END AS Router_Worksheet,Create_Quote,CASE WHEN Quote_Approval_10k IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_Approval_10k,SQL_BIT)  END AS Quote_Approval_10k,CASE WHEN Quote_Sent IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_Sent,SQL_BIT)  END AS Quote_Sent,CASE WHEN Customer_Approval IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Customer_Approval,SQL_BIT)  END AS Customer_Approval,CASE WHEN IsBid_SO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(IsBid_SO,SQL_BIT)  END AS IsBid_SO,CASE WHEN Create_SO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Create_SO,SQL_BIT)  END AS Create_SO,Send_OrderAck,CASE WHEN Prepare_PhysicalFile IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Prepare_PhysicalFile,SQL_BIT)  END AS Prepare_PhysicalFile,PO_TCNeeded,Invoice_CutoffDT,CASE WHEN Issue_Material IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Issue_Material,SQL_BIT)  END AS Issue_Material,Order_Parts,CASE WHEN Verify_ShipSchedule IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Verify_ShipSchedule,SQL_BIT)  END AS Verify_ShipSchedule,CASE WHEN Shipper IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Shipper,SQL_BIT)  END AS Shipper,BOM,Notes,job+suffix  as SO,'' as So_Ln,JHdr.Customer,' ' as SFlag ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} from v_job_header JHdr left join GCG_4391_ISSQOSO as Dash on  job+suffix = Dash.SO left join v_INV_CROSS_REF X on X.Part = JHdr.Part and Mfg_part <> ''  join GCG_4391_PL PLMast on PLMast.PL = JHdr.Product_Line where dash_type = '{1}' and year(Date_Closed) = '1900' and CAST(JHdr.Sales_order AS DOUBLE) =0   order by order_no,Record_No ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)

	F.Intrinsic.Control.If(v.DataTable.[v.Global.sgREL].Exists,=,True)
		F.Data.DataTable.Close(v.Global.sgREL)
	f.Intrinsic.Control.EndIf 


	F.Data.DataTable.CreateFromSql(v.Global.sgREL,"conx",v.Local.sSql,True)

	f.Data.DataTable.SetValueFormat(v.Global.sgREL,-1,"Margin","Margin","00")

	F.Data.DataView.Create(v.Global.sgREL,v.Global.sgDetView)
	gui.Form.GsGridWF.AddGridViewFromDataView(v.Global.sgDetView,v.Global.sgHdrView,v.Global.sgDetView)

'	'CAll from Repair Dash
	f.Intrinsic.Control.If(V.Global.sCall.trim,=,"")
		F.Data.DataTable.AddRelation(v.Global.sgHdrView,"SOH",v.Global.sgREL,"SO")
		gui.Form.GsGridWF.MainView(v.Global.sgHdrView)
	f.Intrinsic.Control.else
		gui.Form.GsGridWF.MainView(v.Global.sgDetView)
	f.Intrinsic.Control.EndIf 


	'	'---code to auto poulate data table from dictionary
	V.Local.bDictExists.Declare(boolean)

	F.Data.Dictionary.Exists("WFDIC",V.Local.bDictExists)
	F.Intrinsic.Control.If(V.Local.bDictExists,=,True)
		F.Data.Dictionary.Close("WFDIC")
	F.Intrinsic.Control.EndIf



	v.Local.ssql.Set("select distinct OH.order_no SOH,OH.Quote Quote from Order_Header OH  left join v_customer_master Cust on OH.customer = Cust.customer  ")
	f.Intrinsic.String.Build("{0} join v_QUOTE_LINES QO on OH.QUOTE = QO.QUOTE_NO where OH.order_no in (select ORD.order_no from  v_order_lines as ORD  join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}' and OH.order_no = ORD.order_no ) ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)

	F.Data.Dictionary.CreateFromSQL("WFDIC","conx",v.Local.ssql)
	F.Data.Dictionary.SetDefaultReturn("WFDIC","")
	F.Data.DataTable.FillFromDictionary(v.Global.sgREL,"WFDIC","SO","Quote")
	
	Function.Data.Dictionary.Close("WFDIC")
	

	gui.Form.GsGridWF.GetColumnCount(v.Global.sgDetView,v.Local.iret)
	f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
		gui.Form.GsGridWF.GetColumnNamebyIndex(v.Global.sgDetView,v.Local.i,v.Local.stitle)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"HeaderWordWrap","wrap")
'		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"MinWidth",50)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"HeaderFontBold","True")
	f.Intrinsic.Control.Next(v.Local.i)


	Gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","VisibleIndex",0)
	Gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","VisibleIndex",1)
	Gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote","VisibleIndex",2)
	Gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Part","VisibleIndex",3)
	Gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"MFG Part Number","VisibleIndex",4)
	Gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Margin","VisibleIndex",5)


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "SO", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "SO_Ln", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Customer", "Visible", False)
	'save flag
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Sflag", "Visible", False)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","Caption","Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","CellForeColor","Blue")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","Caption","Work Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","CellForeColor","Blue")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Margin","Caption","Margin(%)")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PLDET","Caption","PL")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PLDET","Visible",False)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RFQ_Received","Caption","RFQ Received")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "RFQ_Received", "DisplayCustomDatetime", "d")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Bid_DueDate","Caption","Bid Due Date")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Bid_DueDate", "DisplayCustomDatetime", "d")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_Quote","Caption","Is this a Bid?")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "IsBid_Quote", "HeaderWordWrap", "wrap")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"FS_RFQ","Caption","FS RFQ")
	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"FS_RFQ","Dropdownlist","Yes*!*No")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_RFQ","Caption","Controls RFQ")
	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Controls_RFQ","Dropdownlist","Yes*!*No")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SendOut_Pricing","Caption","Send Out For Pricing?")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Follow_up","Caption","Follow up")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Follow_up", "DisplayCustomDatetime", "d")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Double_CheckSheet","Caption","Double Check Sheet")
	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Double_CheckSheet","Dropdownlist","Complete*!*N/A")


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Router_Worksheet","Caption","Router / Worksheet")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Create_Quote","Caption","Create Quote")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Create_Quote", "DisplayCustomDatetime", "d")


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Approval_10k","Caption","Quote Approval Over $10,000")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Sent","Caption","Quote Sent")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Customer_Approval","Caption","Customer Approval")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_SO","Caption","Is this a bid?")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Create_SO","Caption","Create Sales Order")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Send_OrderAck","Caption","Send Order Ack.")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Send_OrderAck", "DisplayCustomDatetime", "d")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_PhysicalFile","Caption","Prepare Physical File")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PO_TCNeeded","Caption","PO T&C Needed?")
	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"PO_TCNeeded","Dropdownlist","Yes*!*No")


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_CutoffDT","Caption","Invoice Cutoff Date")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Invoice_CutoffDT", "DisplayCustomDatetime", "d")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Issue_Material","Caption","Issue Material")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","Caption","Order Parts")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Order_Parts", "DisplayCustomDatetime", "d")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Verify_ShipSchedule","Caption","Verify Shimpent Schedule")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper","Caption","Shipper")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"BOM","Caption","BOM")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "BOM", "DisplayCustomDatetime", "d")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","Caption","Notes")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","CellBackColor","LightYellow")


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","MinWidth",80)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","MinWidth",80)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote","MinWidth",80)



'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_RFQ","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SendOut_Pricing","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Router_Worksheet","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Approval_10k","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_PhysicalFile","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PO_TCNeeded","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Verify_ShipSchedule","MinWidth",70)
'
'
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RFQ_Received","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Bid_DueDate","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Follow_up","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Sent","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Customer_Approval","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Send_OrderAck","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_CutoffDT","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"BOM","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Double_CheckSheet","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Create_Quote","MinWidth",80)





	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_Quote","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_Quote","ReadOnly",False)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_SO","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_SO","ReadOnly",False)


'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RFQ_Received","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RFQ_Received","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Follow_up","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Follow_up","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_CutoffDT","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_CutoffDT","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","ReadOnly",False)
'	
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Double_CheckSheet","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Double_CheckSheet","ReadOnly",False)


'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"FS_Request_Rec","MinWidth",80)


'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Do_return","MinWidth",50)

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Email_conf_dt","MinWidth",70)
'

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","MinWidth",250)

	f.Intrinsic.Control.CallSub(enableapperance)

'ADD
'	f.Intrinsic.Control.CallSub(GridMode,"WFID",v.Local.iWF,"SMODE","Type1")
'	f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type1","Start",4)
'	f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type1","Start",5)
	f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type1","Start",7)

	'Remove
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_Quote","AllowEdit","True")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_Quote","ReadOnly","False")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_SO","AllowEdit","True")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"IsBid_SO","ReadOnly","False")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Issue_Material","AllowEdit","True")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Issue_Material","ReadOnly","False")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Verify_ShipSchedule","AllowEdit","True")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Verify_ShipSchedule","ReadOnly","False")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper","AllowEdit","True")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Shipper","ReadOnly","False")



F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ISS_SOQO_Err")

F.Intrinsic.Control.If(V.Ambient.ErrorNumber,=,21034)
	f.Intrinsic.Control.CallSub(pouplate_hdrdup)
F.Intrinsic.Control.elseIf(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.ISS_SOQO.End

Program.Sub.NestedPUMP_ISS.Start
F.Intrinsic.Control.SetErrorHandler("NestedPUMP_ISS_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)


V.Local.sSO.Declare(String)
V.Local.sSline.Declare(String)
V.Local.sQO.Declare(String)
v.Local.iWF.Declare(long)
V.Local.sSQL.Declare(String)
v.Local.iret.Declare(long)
v.Local.i.Declare(long)
V.Local.stitle.Declare(String)
v.Local.iCol.Declare(long)

'f.Global.WorkFlow.GetIDFromTitle("New Sales Bid Sales Order",v.Local.iWF)
'	'get the ID to create the workflow
'f.Global.WorkFlow.GetTemplateIDFromTitle("New Sales Bid Sales Order",v.Local.iWF)
'
'f.Intrinsic.Control.If(v.Local.iWF,=,-1)
'		'inform the user there is no template
'		f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title New Sales Bid Sales Order")
'f.Intrinsic.Control.EndIf




f.Intrinsic.Control.If(V.Global.sSubfrmScreen,=,"SOISS")
'	gui.frm2.GsGridQuote.GetCellValue("Grid_frm2",14,0,V.Local.sSO)
'	gui.frm2.GsGridQuote.GetCellValue("Grid_frm2",15,0,V.Local.sSline)

	gui.frm2.GsGridQuote.GetColumnIndexByName("Grid_frm2", "SO", v.Local.iCol)
	gui.frm2.GsGridQuote.GetCellValue("Grid_frm2",v.Local.iCol,V.Args.cROW,V.Local.sSO)

	gui.frm2.GsGridQuote.GetColumnIndexByName("Grid_frm2", "SO_Ln", v.Local.iCol)
	gui.frm2.GsGridQuote.GetCellValue("Grid_frm2",v.Local.iCol,V.Args.cROW,V.Local.sSline)
f.Intrinsic.Control.ElseIf(V.Global.sSubfrmScreen,<>,"SOISS")
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,28,V.Args.cROW,V.Local.sSO)
'	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,29,V.Args.cROW,V.Local.sSline)

	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)

	gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO_Ln", v.Local.iCol)
	gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)
f.Intrinsic.Control.EndIf 


f.Intrinsic.String.Build("select SO,SO_Ln,Pump_Type,Pump,Panel,Valves,MISC from GCG_4391_PUMP where SO = '{0}' and SO_Ln = '{1}' and Pump_Type = '{2}'",V.Local.sSO,V.Local.sSline,v.Args.Pump_Type,v.Local.sSQL)
'f.Intrinsic.UI.Msgbox(v.Local.sSQL)
F.Intrinsic.Control.If(v.DataTable.ESTQUOTE.Exists,=,True)
	F.Data.DataTable.Close("ESTQUOTE")
f.Intrinsic.Control.EndIf 

F.Data.DataTable.CreateFromSQL("ESTQUOTE","conx",v.Local.sSQL,True)
gui.frmNestedQuote.GsGridQuote.AddGridViewFromDataTable("Grid_ESTQUOTE","ESTQUOTE") 
gui.frmNestedQuote.GsGridQuote.mainview("Grid_ESTQUOTE")

F.Intrinsic.Control.If(Variable.DataTable.ESTQUOTE.rowcount,=,0)
	F.Data.DataTable.AddRow("ESTQUOTE", "Pump",v.Ambient.DBNull,"Panel",v.Ambient.DBNull,"Valves",v.Ambient.DBNull,"MISC",v.Ambient.DBNull,"SO",V.Local.sSO,"SO_Ln",V.Local.sSline,"Pump_Type",v.Args.Pump_Type)
'	F.Data.DataTable.AddRow("ESTQUOTE", "Quote", V.Local.sQO, "Create_Calendar", v.Ambient.DBNull , "SendInvite_OSS",v.Ambient.DBNull,"Prepare_EFile",v.Ambient.DBNull,"DevelopScope_Bid",v.Ambient.DBNull,"SendScope_Contractor",v.Ambient.DBNull,"BidTeam_Analyze",v.Ambient.DBNull,"AssignProject_ISS",v.Ambient.DBNull,"SO",V.Local.sSO,"SO_Ln",V.Local.sSline)
Function.Intrinsic.Control.EndIf

gui.frmNestedQuote.GsGridQuote.GetColumnCount("Grid_ESTQUOTE",v.Local.iret)
f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
	gui.frmNestedQuote.GsGridQuote.GetColumnNamebyIndex("Grid_ESTQUOTE",v.Local.i,v.Local.stitle)
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"HeaderFontBold","True")
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle, "DisplayCustomDatetime", "d")
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"MinWidth",70)
f.Intrinsic.Control.Next(v.Local.i)


'gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "ColumnPanelRowHeight", "70")


'F.Intrinsic.Debug.InvokeDebugger
'
'


'add
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SO", "Visible", False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SO_Ln", "Visible", False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "Pump_Type", "Visible", False)

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Pump","AllowEdit",True)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Pump","ReadOnly",False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Panel","AllowEdit",True)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Panel","ReadOnly",False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Valves","AllowEdit",True)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Valves","ReadOnly",False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","MISC","AllowEdit",True)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","MISC","ReadOnly",False)




F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("NestedPUMP_ISS_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.NestedPUMP_ISS.End

Program.Sub.Quote_ISS.Start
F.Intrinsic.Control.SetErrorHandler("Quote_ISS_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSO.Declare(String)
V.Local.sSline.Declare(String)
V.Local.sQO.Declare(String)
v.Local.iWF.Declare(long)
V.Local.sSQL.Declare(String)
v.Local.iret.Declare(long)
v.Local.i.Declare(long)
V.Local.stitle.Declare(String)
v.Local.iCol.Declare(long)

'
'F.Intrinsic.Debug.InvokeDebugger
'
'



f.Global.WorkFlow.GetIDFromTitle("New Sales Bid Quote",v.Local.iWF)
	'get the ID to create the workflow
f.Global.WorkFlow.GetTemplateIDFromTitle("New Sales Bid Quote",v.Local.iWF)

f.Intrinsic.Control.If(v.Local.iWF,=,-1)
		'inform the user there is no template
		f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title New Sales Bid Quote")
f.Intrinsic.Control.EndIf


gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "So_Ln", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "Quote", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sQO)


f.Intrinsic.String.Build("select '{0}' as Quote,Create_Calendar,SendInvite_OSS,Prepare_EFile,DevelopScope_Bid,SendScope_Contractor,Quote_Due,Quote_Given,BidTeam_Analyze,SO,SO_Ln  from GCG_4391_BIDQO where SO = '{1}' and SO_Ln = '{2}'",V.Local.sQO,V.Local.sSO,V.Local.sSline,v.Local.sSQL)


F.Intrinsic.Control.If(v.DataTable.ESTQUOTE.Exists,=,True)
	F.Data.DataTable.Close("ESTQUOTE")
f.Intrinsic.Control.EndIf 

F.Data.DataTable.CreateFromSQL("ESTQUOTE","conx",v.Local.sSQL,True)
gui.frmNestedQuote.GsGridQuote.AddGridViewFromDataTable("Grid_ESTQUOTE","ESTQUOTE") 
gui.frmNestedQuote.GsGridQuote.mainview("Grid_ESTQUOTE")

F.Intrinsic.Control.If(Variable.DataTable.ESTQUOTE.rowcount,=,0)
'	F.Data.DataTable.AddRow("ESTQUOTE", "Quote", V.Local.sQO, "Opennew_quote_router", False, "Quote_app10k",False,"ISS_Quote_app",False,"Send_Quote",False,"Customer_Approval",False,"SOrder",V.Local.sSO,"SLine",V.Local.sSline)
	F.Data.DataTable.AddRow("ESTQUOTE", "Quote", V.Local.sQO, "Create_Calendar", v.Ambient.DBNull , "SendInvite_OSS",v.Ambient.DBNull,"Prepare_EFile",v.Ambient.DBNull,"DevelopScope_Bid",v.Ambient.DBNull,"Quote_Due",v.Ambient.DBNull,"Quote_Given",v.Ambient.DBNull,"SendScope_Contractor",v.Ambient.DBNull,"BidTeam_Analyze",v.Ambient.DBNull,"SO",V.Local.sSO,"SO_Ln",V.Local.sSline)
Function.Intrinsic.Control.EndIf

gui.frmNestedQuote.GsGridQuote.GetColumnCount("Grid_ESTQUOTE",v.Local.iret)
f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
	gui.frmNestedQuote.GsGridQuote.GetColumnNamebyIndex("Grid_ESTQUOTE",v.Local.i,v.Local.stitle)
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"HeaderWordWrap","wrap")
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"MinWidth",70)
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"HeaderFontBold","True")
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle, "DisplayCustomDatetime", "d")
f.Intrinsic.Control.Next(v.Local.i)

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Create_Calendar","Caption","Create Calendar Appt")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendInvite_OSS","Caption","Send Invite to OSS")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Prepare_EFile","Caption","Prepare Electronic File")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","DevelopScope_Bid","Caption","Develop Scope Bid - Send to OSS")

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendScope_Contractor","Caption","Send Scope to Contractors")

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote_Due","Caption","Quote due to Mark for Approval")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote_Given","Caption","Quote Given to Mark for Approval")

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","BidTeam_Analyze","Caption","Bid Team Analyze")

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote","AllowEdit",False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote","ReadOnly",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote","MinWidth",80)

gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "Enableappearanceevenrow", "True")
gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "ColumnPanelRowHeight", "80")



'F.Intrinsic.Debug.InvokeDebugger
'
'

'ADD
'f.Intrinsic.Control.CallSub(GridMode,"WFID",v.Local.iWF,"SMODE","Type2")
f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type2","Start",1)


gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SO", "Visible", False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SO_Ln", "Visible", False)
'

'Remove
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Create_Calendar","AllowEdit",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Create_Calendar","ReadOnly",False)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendInvite_OSS","AllowEdit",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendInvite_OSS","ReadOnly",False)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Prepare_EFile","AllowEdit",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Prepare_EFile","ReadOnly",False)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","DevelopScope_Bid","AllowEdit",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","DevelopScope_Bid","ReadOnly",False)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendScope_Contractor","AllowEdit",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendScope_Contractor","ReadOnly",False)


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Quote_ISS_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Quote_ISS.End

Program.Sub.SO_ISS.Start
F.Intrinsic.Control.SetErrorHandler("SO_ISS_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSO.Declare(String)
V.Local.sSline.Declare(String)
V.Local.sQO.Declare(String)
v.Local.iWF.Declare(long)
V.Local.sSQL.Declare(String)
v.Local.iret.Declare(long)
v.Local.i.Declare(long)
V.Local.stitle.Declare(String)
V.Local.sCustomer.Declare(String)
V.Local.sRet.Declare(String)

 v.Local.iCol.Declare(long)

f.Global.WorkFlow.GetIDFromTitle("New Sales Bid Sales Order",v.Local.iWF)
	'get the ID to create the workflow
f.Global.WorkFlow.GetTemplateIDFromTitle("New Sales Bid Sales Order",v.Local.iWF)

f.Intrinsic.Control.If(v.Local.iWF,=,-1)
		'inform the user there is no template
		f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title New Sales Bid Sales Order")
f.Intrinsic.Control.EndIf

'gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,27,V.Args.cROW,V.Local.sSO)
'gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,28,V.Args.cROW,V.Local.sSline)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO_Ln", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "Customer", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sCustomer)

f.Intrinsic.String.Build("select Assign_To_ISS,Send_OrderAck,CASE WHEN HFAPO_Request IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(HFAPO_Request,SQL_BIT)  END AS HFAPO_Request,CASE WHEN Submittals_Approval IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Submittals_Approval,SQL_BIT)  END AS Submittals_Approval,CASE WHEN Send_Customer IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Send_Customer,SQL_BIT)  END AS Send_Customer,Follow_Bond,Confirm_Receipt,SubmittalFU_DT,CASE WHEN Revise_Submittal IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Revise_Submittal,SQL_BIT)  END AS Revise_Submittal,CASE WHEN Approval_Submitted IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Approval_Submitted,SQL_BIT)  END AS  Approval_Submitted,Worsheet_Rev,CASE WHEN Release_HFAPO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Release_HFAPO,SQL_BIT)  END AS  Release_HFAPO,Notice_Furnishing,Prevenative_Maint,O_M,Send_FSRequest,SO,SO_Ln  from GCG_4391_BIDSO where SO = '{0}' and SO_Ln = '{1}'",V.Local.sSO,V.Local.sSline,v.Local.sSQL)

F.Intrinsic.Control.If(v.DataTable.ESTSO.Exists,=,True)
	F.Data.DataTable.Close("ESTSO")
f.Intrinsic.Control.EndIf 

F.Data.DataTable.CreateFromSQL("ESTSO","conx",v.Local.sSQL,True)
gui.frm2.GsGridQuote.AddGridViewFromDataTable("Grid_frm2","ESTSO") 
gui.frm2.GsGridQuote.mainview("Grid_frm2")


F.Intrinsic.Control.If(Variable.DataTable.ESTSO.rowcount,=,0)
	F.Data.DataTable.AddRow("ESTSO", "Assign_To_ISS",v.Ambient.DBNull, "Send_OrderAck",v.Ambient.DBNull, "HFAPO_Request", False, "Submittals_Approval",False,"Send_Customer",False,"Follow_Bond",v.Ambient.DBNull,"Confirm_Receipt",v.Ambient.DBNull,"SubmittalFU_DT",v.Ambient.DBNull,"Revise_Submittal",False,"Approval_Submitted",False,"Worsheet_Rev",v.Ambient.DBNull,"Release_HFAPO",False,"Notice_Furnishing",v.Ambient.DBNull,"Prevenative_Maint",v.Ambient.DBNull,"O_M",v.Ambient.DBNull,"Send_FSRequest",v.Ambient.DBNull,"SO",V.Local.sSO,"SO_Ln",V.Local.sSline)
Function.Intrinsic.Control.EndIf

gui.frm2.GsGridQuote.GetColumnCount("Grid_frm2",v.Local.iret)
f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
	gui.frm2.GsGridQuote.GetColumnNamebyIndex("Grid_frm2",v.Local.i,v.Local.stitle)
	gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",v.Local.stitle,"HeaderWordWrap","wrap")
	gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",v.Local.stitle,"MinWidth",70)
	gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",v.Local.stitle,"HeaderFontBold","True")
	gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",v.Local.stitle, "DisplayCustomDatetime", "d")
f.Intrinsic.Control.Next(v.Local.i)

'

v.Local.sSQL.Set("select Buyer_code from "BUYERS" where Ass_Sys = 'AP' and Ass_Sub_Sys = 'BUY' order by Buyer_code")
Function.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sSQL,V.Local.sRet)
f.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
	f.Intrinsic.String.Replace(V.Local.sRet,"#$#","",V.Local.sRet)
	gui.frm2.GsGridQuote.ColumnEdit("Grid_frm2","Assign_To_ISS","Dropdownlist",V.Local.sRet)
f.Intrinsic.Control.endif

gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Assign_To_ISS","Caption","Assign to ISS")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_OrderAck","Caption","Send Order Ack, TY Letter & Bond Packet")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","HFAPO_Request","Caption","HFA PO's & Request Submittals")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submittals_Approval","Caption","Submittals Prepared & Sent for Approval")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_Customer","Caption","Send Submittal to Customer")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Follow_Bond","Caption","Follow Up on Bond")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Confirm_Receipt","Caption","Confirm Sumittal Receipt")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","SubmittalFU_DT","Caption","Submittal FU Date")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Revise_Submittal","Caption","Revise & Resubmit Submittal")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Approval_Submitted","Caption","Approval As Noted Submitted")

gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Worsheet_Rev","Caption","Worsheet Revised Per Approved Submittal")

gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Release_HFAPO","Caption","Release HFA PO's")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Notice_Furnishing","Caption","Notice of Furnishing")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Prevenative_Maint","Caption","Prevenative Maint. List")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","O_M","Caption","O&M's")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_FSRequest","Caption","Send FS Request")


gui.frm2.GsGridQuote.SetGridViewProperty("Grid_frm2", "Enableappearanceevenrow", "True")
gui.frm2.GsGridQuote.SetGridViewProperty("Grid_frm2", "ColumnPanelRowHeight", "70")


'F.Intrinsic.Debug.InvokeDebugger
'
'

'ADD
'f.Intrinsic.Control.CallSub(GridMode,"WFID",v.Local.iWF,"SMODE","Type3")
f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type3","Start",0)

'add
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2", "SO", "Visible", False)
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2", "SO_Ln", "Visible", False)


''delete
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_OrderAck","AllowEdit",True)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_OrderAck","ReadOnly",False)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","HFAPO_Request","AllowEdit",True)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","HFAPO_Request","ReadOnly",False)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_Customer","AllowEdit",True)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Send_Customer","ReadOnly",False)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Approval_Submitted","AllowEdit",True)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Approval_Submitted","ReadOnly",False)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Prevenative_Maint","AllowEdit",True)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Prevenative_Maint","ReadOnly",False)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Revise_Submittal","AllowEdit",True)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Revise_Submittal","ReadOnly",False)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Release_HFAPO","AllowEdit",True)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Release_HFAPO","ReadOnly",False)

'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submittals_Approval","AllowEdit",True)
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submittals_Approval","ReadOnly",False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("SO_ISS_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.SO_ISS.End

Program.Sub.frm2_UnLoad.Start
F.Intrinsic.Control.SetErrorHandler("frmNestedQuote_UnLoad_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

gui.Form..enabled(true)
gui.frm2..Visible(false)
V.Global.sSubfrmScreen.Set("")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("frmNestedQuote_UnLoad_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.frm2_UnLoad.End

Program.Sub.Control.Start
F.Intrinsic.Control.SetErrorHandler("Control_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)



v.Local.ssql.Declare(String)
v.Local.iWF.Declare(long)
V.Local.i.Declare(long)
v.Local.stitle.Declare(String)
v.Local.iret.Declare(long)


	f.Global.WorkFlow.GetIDFromTitle("Controls",v.Local.iWF)
		'get the ID to create the workflow
	f.Global.WorkFlow.GetTemplateIDFromTitle("Controls",v.Local.iWF)

	f.Intrinsic.Control.If(v.Local.iWF,=,-1)
			'inform the user there is no template
			f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title Controls")
			f.Intrinsic.Control.CallSub(form_unload)
	f.Intrinsic.Control.EndIf
''	



	v.Local.ssql.Set("select distinct Ord.order_no AS SOH,Cust.name_Customer,rtrim(ltrim(OH.code_sort)) as ISS,ORD.Product_Line as 'PL',OH.salesperson as OSS,OH.user_1 as 'End User',OH.user_2 as 'Location',OH.user_3 as 'Product' from v_Order_Header OH left join v_customer_master Cust on OH.customer = Cust.customer  join v_order_lines as ORD on OH.order_no = ORD.order_no join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line ")
	f.Intrinsic.String.Build("{0} where dash_type = '{1}'",v.Local.ssql,v.Global.sScreen,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} where ORD.Product_Line IN ('C1','C2','C3','CP','C6')",v.Local.ssql,v.Local.ssql)
	' and ORD.Product_Line IN ('C1','C2','C3','CP')

'	f.Intrinsic.String.Build("{0} union select job+suffix as SOH,Cust.name_Customer,'' as ISS,product_line as 'PL','' as OSS,'' as 'End User','' as 'Location','' as 'Product'",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} from  v_job_header JOB left join v_customer_master Cust on JOB.customer = Cust.customer  where year(Date_Closed) = '1900' and CAST(Sales_order AS DOUBLE) =0  and Product_Line IN ('C1','C2','C3','CP','C6') order by order_no ",v.Local.ssql,v.Local.ssql)

	f.Intrinsic.String.Build("{0} union select JOB.job+JOB.suffix as SOH,Cust.name_Customer,'' as ISS,product_line as 'PL','' as OSS,'' as 'End User',Usr.user_6 as 'Location',Usr.user_7 as 'Product'",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} from  v_job_header JOB left join WO_USER_FLDS USR on Job.Job = Usr.Job and Job.suffix = Usr.suffix left join v_customer_master Cust on JOB.customer = Cust.customer join GCG_4391_PL PLMast on PLMast.PL = Job.Product_Line  where year(Date_Closed) = '1900' and CAST(Sales_order AS DOUBLE) =0 and dash_type = '{1}' order by order_no ",v.Local.ssql,v.Global.sScreen,v.Local.ssql)



	F.Intrinsic.Control.If(v.DataTable.[v.Global.sgHdrView].Exists,=,True)
		F.Data.DataTable.Close(v.Global.sgHdrView)
	f.Intrinsic.Control.EndIf 

	F.Data.DataTable.CreateFromSql(v.Global.sgHdrView,"conx",v.Local.sSql,True)
	F.Data.DataView.Create(v.Global.sgHdrView,v.Global.sgHdrView)
	gui.Form.GsGridWF.AddGridViewFromDataView(v.Global.sgHdrView,v.Global.sgHdrView,v.Global.sgHdrView)


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","Caption","Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","HeaderFontBold","True")
	gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgHdrView,"Editable",False)
	gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgHdrView,"readonly",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","HeaderBackColor","#d3d3d3")
'	gui.Form.GsGridWF.SetRowAppearance("Header",0,"backcolor","#C3FDB8")

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"SOH","MaxWidth",100)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","Caption","Customer Name")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","MaxWidth",350)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"name_Customer","HeaderBackColor","#d3d3d3")

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"ISS","MaxWidth",100)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"ISS","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"ISS","HeaderBackColor","#d3d3d3")

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"PL","MaxWidth",100)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"PL","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"PL","HeaderBackColor","#d3d3d3")

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"OSS","MaxWidth",100)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"OSS","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"OSS","HeaderBackColor","#d3d3d3")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"End User","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"End User","HeaderBackColor","#d3d3d3")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Location","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Location","HeaderBackColor","#d3d3d3")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Product","HeaderFontBold","True")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgHdrView,"Product","HeaderBackColor","#d3d3d3")

'	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.Header.RowCount--,1)
'		gui.Form.GsGridWF.SetRowAppearance("Header",V.Local.i,"backcolor","#C3FDB8")
'	F.Intrinsic.Control.Next(V.Local.i)

	gui.Form.GsGridWF.AddStyleFormatCOndition(v.Global.sgHdrView, "SOH", "tagName1","NotEqual","1")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "SOH", "tagName1", "backcolor", "#C3FDB8")
	gui.Form.GsGridWF.SetStyleFormatCOnditionProperty(v.Global.sgHdrView,  "SOH", "tagName1", "ApplyToRow", True)


	gui.Form.GsGridWF.AddStyleFormatCondition(v.Global.sgHdrView,"SOH","Parentorange","Expression","len([SOH])<>7")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"SOH","Parentorange","Forecolor","Magenta")
	gui.Form.GsGridWF.SetStyleFormatConditionProperty(v.Global.sgHdrView,"SOH","Parentorange","ApplyToRow",True)
	
	gui.Form.GsGridWF.AddSummaryItem(v.Global.sgHdrView, "name_Customer", "name_Customer", "Count", "Total No of Jobs :", "", "")


'	v.Local.ssql.Set("select  CASE WHEN ORD.Record_No = '' THEN ORD.order_no WHEN ORD.Record_No <> '' THEN ORD.order_no + '-' + ORD.Record_No END AS SOD,CASE WHEN WO.Suffix = '' THEN WO.Job WHEN WO.Suffix <> '' THEN WO.Job + '-' + WO.Suffix END AS WO")
'	f.Intrinsic.String.Build("{0} ,'' as QUOTE,ORD.Product_Line,Request_Received,CASE WHEN Walk_requied IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Walk_requied,SQL_BIT)  END AS Walk_requied,CASE WHEN Walk_Complete IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Walk_Complete,SQL_BIT)  END AS Walk_Complete,CASE WHEN Define_Job IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Define_Job,SQL_BIT)  END AS Define_Job,CASE WHEN Quote_Required IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_Required,SQL_BIT)  END AS Quote_RequiredCO,CASE WHEN Create_SO IS NULL THEN '' else Create_SO  END AS Create_SO,CASE WHEN Create_WO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Create_WO,SQL_BIT)  END AS Create_WO,CASE WHEN KISM_job IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(KISM_job,SQL_BIT)  END AS KISM_job,CASE WHEN Controls_Engineer IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Controls_Engineer,SQL_BIT)  END AS Controls_Engineer,CASE WHEN Parts_Needed IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Parts_Needed,SQL_BIT)  END AS PartsNeeded_Cont,CASE WHEN Controls_Programming IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Controls_Programming,SQL_BIT)  END AS Controls_Programming,CASE WHEN Reconfirm_Customer IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Reconfirm_Customer,SQL_BIT)  END AS Reconfirm_Customer,CASE WHEN Schedule_Contractor IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Schedule_Contractor,SQL_BIT)  END AS Schedule_Contractor,CASE WHEN Prepare_ServerFile IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Prepare_ServerFile,SQL_BIT)  END AS Prepare_ServerFile,CASE WHEN Process_WO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Process_WO,SQL_BIT)  END AS Process_WO,CASE WHEN Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Invoice,SQL_BIT)  END AS Invoice,CASE WHEN RGA IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(RGA,SQL_BIT)  END AS RGA,CASE WHEN Job_complete IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Job_complete,SQL_BIT)  END AS Job_complete,CASE WHEN StartUpJob IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(StartUpJob,SQL_BIT)  END AS StartUpJob,Notes,ORD.order_no as SO,ORD.record_no as So_Ln ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} from order_header OH  join v_order_lines as ORD on OH.order_no = ORD.order_no and OH.Record_No = ORD.Record_No  left join order_to_wo as WO on  ORD.order_no = WO.order_no and Ord.Record_No = Wo.Order_line ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} left join GCG_4391_CONTROL as Dash on  ORD.order_no = Dash.SO and Ord.Record_No = Dash.SO_Ln  ",v.Local.ssql,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} where Ord.QTY_BO >0 order by ORD.order_no,ORD.Record_No",v.Local.ssql,v.Local.ssql)
'	' and ORD.Product_Line IN ('C1','C2','C3','CP')


	v.Local.ssql.Set("select  CASE WHEN ORD.Record_No = '' THEN ORD.order_no WHEN ORD.Record_No <> '' THEN ORD.order_no + '-' + ORD.Record_No END AS SOD,CASE WHEN WO.Suffix = '' THEN WO.Job WHEN WO.Suffix <> '' THEN WO.Job + '-' + WO.Suffix END AS WO")
	f.Intrinsic.String.Build("{0} ,'' as QUOTE,ORD.Product_Line as PLDET,Request_Received,CASE WHEN Controls_Programming IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Controls_Programming,SQL_BIT)  END AS Controls_Programming,Walk_requied,Walk_Complete,CASE WHEN Define_Job IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Define_Job,SQL_BIT)  END AS Define_Job,CASE WHEN Quote_RequiredCO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_RequiredCO,SQL_BIT)  END AS Quote_RequiredCO,CASE WHEN Create_SO IS NULL THEN '' else Create_SO  END AS Create_SO,CASE WHEN Create_WO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Create_WO,SQL_BIT)  END AS Create_WO,KISM_job,CASE WHEN Controls_Engineer IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Controls_Engineer,SQL_BIT)  END AS Controls_Engineer,CASE WHEN PartsNeeded_Cont IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(PartsNeeded_Cont,SQL_BIT)  END AS PartsNeeded_Cont,CASE WHEN Reconfirm_Customer IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Reconfirm_Customer,SQL_BIT)  END AS Reconfirm_Customer,Email_Customer,CASE WHEN Schedule_Contractor IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Schedule_Contractor,SQL_BIT)  END AS Schedule_Contractor,CASE WHEN Prepare_ServerFile IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Prepare_ServerFile,SQL_BIT)  END AS Prepare_ServerFile,CASE WHEN Process_WO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Process_WO,SQL_BIT)  END AS Process_WO,CASE WHEN Job_complete IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Job_complete,SQL_BIT)  END AS Job_complete,CASE WHEN Dash.Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Dash.Invoice,SQL_BIT)  END AS Invoice,CASE WHEN RGA IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(RGA,SQL_BIT)  END AS RGA,CASE WHEN StartUpJob IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(StartUpJob,SQL_BIT)  END AS StartUpJob,Notes,ORD.order_no as SO,ORD.record_no as So_Ln,' ' as SFlag ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} from order_header OH  join v_order_lines as ORD on OH.order_no = ORD.order_no and OH.Record_No = ORD.Record_No  left join order_to_wo as WO on  ORD.order_no = WO.order_no and Ord.Record_No = Wo.Order_line ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} left join GCG_4391_CONTROL as Dash on  ORD.order_no = Dash.SO and Ord.Record_No = Dash.SO_Ln join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line where dash_type = '{1}'",v.Local.ssql,v.Global.sScreen,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} where ORD.Product_Line IN ('C1','C2','C3','CP','C6') ",v.Local.ssql,v.Local.ssql)
	' and ORD.Product_Line IN ('C1','C2','C3','CP')

	f.Intrinsic.String.Build("{0} union select CASE WHEN JHdr.suffix = '' THEN JHdr.Job WHEN JHdr.suffix  <> '' THEN JHdr.Job + '-' + JHdr.suffix END AS SOD,CASE WHEN JHdr.suffix = '' THEN JHdr.Job WHEN JHdr.suffix  <> '' THEN JHdr.Job + '-' + JHdr.suffix END AS WO ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} ,'' as QUOTE,Product_Line as PLDET,Request_Received,CASE WHEN Controls_Programming IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Controls_Programming,SQL_BIT)  END AS Controls_Programming,Walk_requied,Walk_Complete,CASE WHEN Define_Job IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Define_Job,SQL_BIT)  END AS Define_Job,CASE WHEN Quote_RequiredCO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_RequiredCO,SQL_BIT)  END AS Quote_RequiredCO,CASE WHEN Create_SO IS NULL THEN '' else Create_SO  END AS Create_SO,CASE WHEN Create_WO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Create_WO,SQL_BIT)  END AS Create_WO,KISM_job,CASE WHEN Controls_Engineer IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Controls_Engineer,SQL_BIT)  END AS Controls_Engineer,CASE WHEN PartsNeeded_Cont IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(PartsNeeded_Cont,SQL_BIT)  END AS PartsNeeded_Cont,CASE WHEN Reconfirm_Customer IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Reconfirm_Customer,SQL_BIT)  END AS Reconfirm_Customer,Email_Customer,CASE WHEN Schedule_Contractor IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Schedule_Contractor,SQL_BIT)  END AS Schedule_Contractor,CASE WHEN Prepare_ServerFile IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Prepare_ServerFile,SQL_BIT)  END AS Prepare_ServerFile,CASE WHEN Process_WO IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Process_WO,SQL_BIT)  END AS Process_WO,CASE WHEN Job_complete IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Job_complete,SQL_BIT)  END AS Job_complete,CASE WHEN Dash.Invoice IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Dash.Invoice,SQL_BIT)  END AS Invoice,CASE WHEN RGA IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(RGA,SQL_BIT)  END AS RGA,CASE WHEN StartUpJob IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(StartUpJob,SQL_BIT)  END AS StartUpJob,Notes,job+suffix as SO,'' as So_Ln,' ' as SFlag ",v.Local.ssql,v.Local.ssql)
	f.Intrinsic.String.Build("{0} from v_job_header JHdr left join GCG_4391_CONTROL as Dash on  job+suffix = Dash.SO join GCG_4391_PL PLMast on PLMast.PL = JHdr.Product_Line where year(Date_Closed) = '1900' and CAST(JHdr.Sales_order AS DOUBLE) =0 and dash_type = '{1}'",v.Local.ssql,v.Global.sScreen,v.Local.ssql)
'	f.Intrinsic.String.Build("{0} and Product_Line IN ('C1','C2','C3','CP','C6')  order by ORD.order_no,ORD.Record_No",v.Local.ssql,v.Local.ssql)

	F.Intrinsic.Control.If(v.DataTable.[v.Global.sgREL].Exists,=,True)
		F.Data.DataTable.Close(v.Global.sgREL)
	f.Intrinsic.Control.EndIf 


	F.Data.DataTable.CreateFromSql(v.Global.sgREL,"conx",v.Local.sSql,True)

	F.Data.DataView.Create(v.Global.sgREL,v.Global.sgDetView)
	F.Data.DataTable.AddRelation(v.Global.sgHdrView,"SOH",v.Global.sgREL,"SO")
	gui.Form.GsGridWF.AddGridViewFromDataView(v.Global.sgDetView,v.Global.sgHdrView,v.Global.sgDetView)


		'	'---code to auto poulate data table from dictionary
	V.Local.bDictExists.Declare(boolean)

	F.Data.Dictionary.Exists("WFDIC",V.Local.bDictExists)
	F.Intrinsic.Control.If(V.Local.bDictExists,=,True)
		F.Data.Dictionary.Close("WFDIC")
	F.Intrinsic.Control.EndIf

'
'F.Intrinsic.Debug.InvokeDebugger
'

'	v.Local.ssql.Set("select distinct Ord.order_no SOH,OH.Quote Quote from Order_Header OH  left join v_customer_master Cust on OH.customer = Cust.customer join v_order_lines as ORD on OH.order_no = ORD.order_no and OH.Record_No = Ord.Record_No  ")
'	f.Intrinsic.String.Build("{0} join v_QUOTE_LINES QO on OH.QUOTE = QO.QUOTE_NO and  QO.QUOTE_WON = 'W' where Ord.QTY_BO >0 and ORD.Product_Line IN ('C1','C2','C3','CP') order by Ord.order_no, Ord.Record_No ",v.Local.ssql,v.Local.ssql)
'	' and ORD.Product_Line IN ('C1','C2','C3','CP')

	v.Local.ssql.Set("select distinct OH.order_no SOH,OH.Quote Quote from Order_Header OH  left join v_customer_master Cust on OH.customer = Cust.customer ")
	f.Intrinsic.String.Build("{0} join v_QUOTE_LINES QO on OH.QUOTE = QO.QUOTE_NO  where OH.order_no in (select ORD.order_no from  v_order_lines as ORD join GCG_4391_PL PLMast on PLMast.PL = ORD.Product_Line  where OH.order_no = ORD.order_no and dash_type = '{1}')",v.Local.ssql,v.Global.sScreen,v.Local.ssql)


	F.Data.Dictionary.CreateFromSQL("WFDIC","conx",v.Local.ssql)
	F.Data.Dictionary.SetDefaultReturn("WFDIC","")

	F.Data.DataTable.FillFromDictionary(v.Global.sgREL,"WFDIC","SO","Quote")



	gui.Form.GsGridWF.MainView(v.Global.sgHdrView)

	gui.Form.GsGridWF.ExpandMasterRow(v.Global.sgHdrView,0)


	gui.Form.GsGridWF.GetColumnCount(v.Global.sgDetView,v.Local.iret)
	f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
		gui.Form.GsGridWF.GetColumnNamebyIndex(v.Global.sgDetView,v.Local.i,v.Local.stitle)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"HeaderWordWrap","wrap")
'		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"MinWidth",50)
		gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,v.Local.stitle,"HeaderFontBold","True")
	f.Intrinsic.Control.Next(v.Local.i)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "SO", "Visible", False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "SO_Ln", "Visible", False)
	'save flag
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Sflag", "Visible", False)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","Caption","Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","CellForeColor","Blue")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","Caption","Work Order #")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","CellForeColor","Blue")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"QUOTE","Caption","Quote #")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"QUOTE","MinWidth",200)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PLDET","Caption","PL")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PLDET","Visible",False)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Request_Received","Caption","Request Received (Cust/ISS)")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "Request_Received", "DisplayCustomDatetime", "d")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_Programming","Caption","Is this a Controls Programming Job?")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Walk_requied","Caption","Walk-Thru Required")
	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Walk_requied","Dropdownlist","Yes*!*No")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Walk_Complete","Caption","Walk-Thru Complete")
	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Walk_Complete","Dropdownlist","Yes*!*No")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Define_Job","Caption","Define Job Specs")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_RequiredCO","Caption","Quote Required?")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Create_SO","Caption","Create Sales Order")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Create_WO","Caption","Create Work Order")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"KISM_job","Caption","Is this a KISM job?")
	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"KISM_job","Dropdownlist","Yes*!*No")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_Engineer","Caption","Controls Engineer Review")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsNeeded_Cont","Caption","Parts Needed")


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Reconfirm_Customer","Caption","Schedule With Customer")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Email_Customer","Caption","Email Confirmation with Customer")
	gui.Form.GsGridWF.ColumnEdit(v.Global.sgDetView,"Email_Customer","Dropdownlist","Yes*!*No")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Schedule_Contractor","Caption","Schedule Contractor and/or FS")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_ServerFile","Caption","Prepare Reports and Link Server File")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Process_WO","Caption","Process When WO is complete")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Job_complete","Caption","Is this job complete?")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice","Caption","Invoice")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RGA","Caption","RGA?")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"StartUpJob","Caption","Was this a Start Up Job?")

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","Caption","Comments")
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","CellBackColor","LightYellow")


	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SOD","MinWidth",80)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"WO","MinWidth",80)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote","AllowEdit",False)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote","ReadOnly",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote","MinWidth",80)


'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Request_Received","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_Programming","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Walk_requied","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Walk_Complete","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_RequiredCO","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Schedule_Contractor","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Process_WO","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Job_complete","MinWidth",70)

'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_RFQ","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"SendOut_Pricing","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Router_Worksheet","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Approval_10k","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Prepare_PhysicalFile","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PO_TCNeeded","MinWidth",70)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Verify_ShipSchedule","MinWidth",70)
'	
'	
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RFQ_Received","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Follow_up","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_Sent","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Customer_Approval","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Send_OrderAck","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_CutoffDT","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"BOM","MinWidth",80)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Double_CheckSheet","MinWidth",80)
'	
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RFQ_Received","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"RFQ_Received","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Follow_up","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Follow_up","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_CutoffDT","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Invoice_CutoffDT","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Order_Parts","ReadOnly",False)
'	
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Double_CheckSheet","AllowEdit",True)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Double_CheckSheet","ReadOnly",False)

	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","AllowEdit",True)
	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","ReadOnly",False)
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Notes","MinWidth",250)


	f.Intrinsic.Control.CallSub(enableapperance)

'ADD
'	f.Intrinsic.Control.CallSub(GridMode,"WFID",v.Local.iWF,"SMODE","Type1")


	f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type1","Start",4)


	'Remove
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsNeeded_Cont","AllowEdit","True")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"PartsNeeded_Cont","ReadOnly","False")
'	
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_Programming","AllowEdit","True")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Controls_Programming","ReadOnly","False")
'	
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_RequiredCO","AllowEdit","True")
'	gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,"Quote_RequiredCO","ReadOnly","False")


F.Intrinsic.Control.ExitSub


F.Intrinsic.Control.Label("Control_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,=,21034)
	f.Intrinsic.Control.CallSub(pouplate_hdrdup)
F.Intrinsic.Control.elseIf(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.Control.End

Program.Sub.Control_Program.Start
F.Intrinsic.Control.SetErrorHandler("Control_Program_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSO.Declare(String)
V.Local.sSline.Declare(String)
V.Local.sQO.Declare(String)
v.Local.iWF.Declare(long)
V.Local.sSQL.Declare(String)
v.Local.iret.Declare(long)
v.Local.i.Declare(long)
V.Local.stitle.Declare(String)
v.Local.iCol.Declare(long)


f.Global.WorkFlow.GetIDFromTitle("Controls Programming Job",v.Local.iWF)
	'get the ID to create the workflow
f.Global.WorkFlow.GetTemplateIDFromTitle("Controls Programming Job",v.Local.iWF)

f.Intrinsic.Control.If(v.Local.iWF,=,-1)
		'inform the user there is no template
		f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title Controls Programming Job")
f.Intrinsic.Control.EndIf

'gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,25,V.Args.cROW,V.Local.sSO)
'gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,26,V.Args.cROW,V.Local.sSline)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO_Ln", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)



f.Intrinsic.String.Build("select Submittal_Package,Package_Review,Receive_Approval,CASE WHEN Review_Job IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Review_Job,SQL_BIT)  END AS Review_Job,CASE WHEN Develop_Project IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Develop_Project,SQL_BIT)  END AS Develop_Project,CASE WHEN ProjectPlan_Customer IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(ProjectPlan_Customer,SQL_BIT)  END AS ProjectPlan_Customer,Complete_RD,Complete_PLC,Complete_SCADA,CASE WHEN List_Parts IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(List_Parts,SQL_BIT)  END AS List_Parts,CASE WHEN Punch_List IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Punch_List,SQL_BIT)  END AS  Punch_List,CASE WHEN Document_Pump IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Document_Pump,SQL_BIT)  END AS  Document_Pump,CASE WHEN Complete_Drawing IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Complete_Drawing,SQL_BIT)  END AS  Complete_Drawing,CASE WHEN Invoice_Total IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Invoice_Total,SQL_BIT)  END AS  Invoice_Total,CASE WHEN Customer_Training IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Customer_Training,SQL_BIT)  END AS  Customer_Training,CASE WHEN Review_Customer IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Review_Customer,SQL_BIT)  END AS  Review_Customer,CASE WHEN Develope_Custom IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Develope_Custom,SQL_BIT)  END AS  Develope_Custom,Final_Punch,ReviewPunch_List,Approved_Punch,CASE WHEN Submit_Programming IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Submit_Programming,SQL_BIT)  END AS  Submit_Programming,CASE WHEN Provide_Customer_OM IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Provide_Customer_OM,SQL_BIT)  END AS  Provide_Customer_OM,CASE WHEN Provide_Customer IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Provide_Customer,SQL_BIT)  END AS  Provide_Customer,CASE WHEN Save_Files IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Save_Files,SQL_BIT)  END AS  Save_Files,CASE WHEN Save_Project IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Save_Project,SQL_BIT)  END AS  Save_Project,PunchList_Complete,CASE WHEN Project_Audit IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Project_Audit,SQL_BIT)  END AS  Project_Audit,CASE WHEN Project_Closeout IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Project_Closeout,SQL_BIT)  END AS  Project_Closeout,CASE WHEN Submit_Customer IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Submit_Customer,SQL_BIT)  END AS  Submit_Customer,SO,SO_Ln  from GCG_4391_ContSubProg where SO = '{0}' and SO_Ln = '{1}'",V.Local.sSO,V.Local.sSline,v.Local.sSQL)


F.Intrinsic.Control.If(v.DataTable.ESTSO.Exists,=,True)
	F.Data.DataTable.Close("ESTSO")
f.Intrinsic.Control.EndIf 

F.Data.DataTable.CreateFromSQL("ESTSO","conx",v.Local.sSQL,True)
gui.frm2.GsGridQuote.AddGridViewFromDataTable("Grid_frm2","ESTSO") 
gui.frm2.GsGridQuote.mainview("Grid_frm2")



F.Intrinsic.Control.If(Variable.DataTable.ESTSO.rowcount,=,0)
'	F.Data.DataTable.AddRow("ESTSO", "Send_OrderAck",v.Ambient.DBNull, "HFAPO_Request", False, "Submittals_Approval",v.Ambient.DBNull,"Send_Customer",False,"Follow_Bond",v.Ambient.DBNull,"Confirm_Receipt",v.Ambient.DBNull,"SubmittalFU_DT",v.Ambient.DBNull,"Revise_Submittal",False,"Approval_Submitted",False,"Release_HFAPO",False,"Notice_Furnishing",v.Ambient.DBNull,"Prevenative_Maint",v.Ambient.DBNull,"O_M",v.Ambient.DBNull,"Send_FSRequest",v.Ambient.DBNull,"SO",V.Local.sSO,"SO_Ln",V.Local.sSline)
	F.Data.DataTable.AddRow("ESTSO", "Submittal_Package",v.Ambient.DBNull,"Package_Review",v.Ambient.DBNull,"Receive_Approval",v.Ambient.DBNull,"Review_Job",False,"Develop_Project",False,"ProjectPlan_Customer",False,"Complete_RD","","Complete_PLC","","Complete_SCADA","","List_Parts",False,"Punch_List",False,"Document_Pump",False,"Invoice_Total",False,"Complete_Drawing",False,"Customer_Training",False,"Review_Customer",False,"Develope_Custom",False,"Final_Punch",v.Ambient.DBNull,"ReviewPunch_List",v.Ambient.DBNull,"Approved_Punch",v.Ambient.DBNull,"Submit_Programming",False,"Provide_Customer_OM",False,"Provide_Customer",False,"Save_Files",False,"Save_Project",False,"PunchList_Complete",v.Ambient.DBNull,"Project_Audit",False,"Project_Closeout",False,"Submit_Customer",False,"SO",V.Local.sSO,"SO_Ln",V.Local.sSline)
Function.Intrinsic.Control.EndIf

gui.frm2.GsGridQuote.GetColumnCount("Grid_frm2",v.Local.iret)
f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
	gui.frm2.GsGridQuote.GetColumnNamebyIndex("Grid_frm2",v.Local.i,v.Local.stitle)
	gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",v.Local.stitle,"HeaderWordWrap","wrap")
	gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",v.Local.stitle,"MinWidth",70)
	gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",v.Local.stitle,"HeaderFontBold","True")
	gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",v.Local.stitle, "DisplayCustomDatetime", "d")
f.Intrinsic.Control.Next(v.Local.i)

gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submittal_Package","Caption","Create Submittal Package")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2", "Submittal_Package", "DisplayCustomDatetime", "d")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Package_Review","Caption","Submit Package for Review")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2", "Package_Review", "DisplayCustomDatetime", "d")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Receive_Approval","Caption","Receive Approval")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2", "Receive_Approval", "DisplayCustomDatetime", "d")

gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Review_Job","Caption","Review Job File")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Develop_Project","Caption","Develop Project Plan")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","ProjectPlan_Customer","Caption","Double-Check Project Plan with Customer")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_RD","Caption","Complete R & D")
gui.frm2.GsGridQuote.ColumnEdit("Grid_frm2","Complete_RD","Dropdownlist","0%*!*25%*!*50%*!*75%*!*100%")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_PLC","Caption","Complete PLC Programming")
gui.frm2.GsGridQuote.ColumnEdit("Grid_frm2","Complete_PLC","Dropdownlist","0%*!*25%*!*50%*!*75%*!*100%")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_SCADA","Caption","Complete SCADA Programming")
gui.frm2.GsGridQuote.ColumnEdit("Grid_frm2","Complete_SCADA","Dropdownlist","0%*!*25%*!*50%*!*75%*!*100%")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","List_Parts","Caption","List Parts Used Onsite")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Punch_List","Caption","Start Punch List")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Document_Pump","Caption","Document Pump Info and Show on KISM Screens")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_Drawing","Caption","Complete Drawing Set Changes")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Invoice_Total","Caption","Invoice Total Project")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Customer_Training","Caption","Customer Training")

gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Review_Customer","Caption","Review All Alarms, Priorities and Delay Times with Customer")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Develope_Custom","Caption","Develop Custom Reports")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Final_Punch","Caption","Create Final Punch List")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2", "Final_Punch", "DisplayCustomDatetime", "d")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","ReviewPunch_List","Caption","Review Punch List with Customer")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2", "ReviewPunch_List", "DisplayCustomDatetime", "d")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Approved_Punch","Caption","Submit Approved Punch List to ISS")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2", "Approved_Punch", "DisplayCustomDatetime", "d")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submit_Programming","Caption","Submit All Programming Files to ISS")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Provide_Customer_OM","Caption","Provide Customer O & M's")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Provide_Customer","Caption","Provide Customer Project CD")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Save_Files","Caption","Save All Files on KI Server")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Save_Project","Caption","Save Project CD on KISM FTP Site")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","PunchList_Complete","Caption","Punch List Complete")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2", "PunchList_Complete", "DisplayCustomDatetime", "d")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Project_Audit","Caption","Project Audit")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Project_Closeout","Caption","Project Closeout")
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Submit_Customer","Caption","Submit Testimonial Request Form to Customer")

gui.frm2.GsGridQuote.SetGridViewProperty("Grid_frm2", "Enableappearanceevenrow", "True")
gui.frm2.GsGridQuote.SetGridViewProperty("Grid_frm2", "ColumnPanelRowHeight", "70")


'F.Intrinsic.Debug.InvokeDebugger
'
'

'ADD
'f.Intrinsic.Control.CallSub(GridMode,"WFID",v.Local.iWF,"SMODE","Type3")
f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type3","Start",0)


'add
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2", "SO", "Visible", False)
gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2", "SO_Ln", "Visible", False)

'Remove
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_SCADA","AllowEdit","True")
'gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2","Complete_SCADA","ReadOnly","False")







F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Control_Program_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Control_Program.End

Program.Sub.GsGridWF_ColFilChange.Start
F.Intrinsic.Control.SetErrorHandler("GsGridWF_ColFilChange_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
v.local.sFilter.Declare(String)

'f.Intrinsic.UI.Msgbox(v.Args.ActiveFilterExpression)
'f.Intrinsic.UI.Msgbox(v.Args.ActiveFilterCriteria)
'f.Intrinsic.UI.Msgbox(Variable.Args.COLUMNNAME)

F.Intrinsic.String.Replace(v.Args.ActiveFilterExpression,"[","",v.local.sFilter)
f.Intrinsic.String.Replace(v.Local.sFilter,"]","",v.Local.sFilter)
'F.Intrinsic.Control.CallSub(FilterSub,"Filter",v.Local.sFilter)

f.Intrinsic.UI.Msgbox(v.Local.sFilter)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("GsGridWF_ColFilChange_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.GsGridWF_ColFilChange.End

Program.Sub.cmdRefresh_Click.Start
F.Intrinsic.Control.SetErrorHandler("GsGridWF_ColFilChange_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
variable.local.returnvalue.Declare(long)



F.Intrinsic.Control.If(V.Global.bChanged,=,True)
	Function.Intrinsic.UI.MsgBox("Changes not saved, Do you want to save the changes ?", "Confirm", 4, variable.local.returnvalue)
	F.Intrinsic.Control.If(variable.local.returnvalue,=,6)
		f.Intrinsic.Control.CallSub(cmdrepsave_click)
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.EndIf 

f.Intrinsic.Control.CallSub(close_data)

gui.Form..Visible(False)
Gui.Form.GsGridWF.Size(27165,v.Screen.Form!GsGridWF.Height)

f.Intrinsic.Control.CallSub(init_display)
F.Intrinsic.Control.If(v.Global.bDup,=,False)
	f.Intrinsic.Control.CallSub(deserialize)
f.Intrinsic.Control.endif
gui.Form..Visible(True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("GsGridWF_ColFilChange_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdRefresh_Click.End

Program.Sub.cmdok_Click.Start
F.Intrinsic.Control.SetErrorHandler("Show_Data_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sFilter.Declare(String)

F.Intrinsic.String.Build("Product_Line = '{0}'",V.Screen.Form!txtPL.text,V.Local.sFilter)
'F.Data.DataView.Create(v.Global.sgREL,"dvFilter",22,V.Local.sFilter,"DATE_DUE ASC,JOB ASC,SUFFIX ASC")

'F.Data.DataView.Create(v.Global.sgREL,"DVFilter",22,v.Local.sFilter,"")
'
'Gui.fCustomers.gsGCCustomer.DataSource("Customer", "Customer_Sales")
'Gui.fCustomers.gsGCCustomer.AddGridViewFromDataView("Sales", "Customer", "Customer_Sales")

'F.Data.DataTable.Compute("dtWOs","SUM(EST_HRS)",V.Args.Filter,V.Local.fEstHrs)

'Function.Data.DataView.SetFilter(datatable name [string], dataview name [string], filter [string])

Function.Data.DataView.SetFilter(v.Global.sgHdrView,v.Global.sgDetView, v.Local.sFilter)

gui.Form.GsGridWF.MainView(v.Global.sgHdrView)

gui.Form.GsGridWF.ExpandMasterRow(v.Global.sgHdrView,0)

'Gui.Form.GsGridWF.ResumeLayout()
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Show_Data_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdok_Click.End

Program.Sub.Close_Data.Start
F.Intrinsic.Control.SetErrorHandler("Close_Data_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)



F.Intrinsic.Control.If(v.DataTable.[v.Global.sgHdrView].Exists,=,True)
	F.Intrinsic.Control.If(v.Global.bDup,=,False)
		f.Intrinsic.Control.CallSub(serialize)	
	f.Intrinsic.Control.EndIf 
	F.Data.DataTable.Close(v.Global.sgHdrView)
f.Intrinsic.Control.EndIf 

F.Intrinsic.Control.If(v.DataTable.[v.Global.sgREL].Exists,=,True)
	F.Data.DataTable.Close(v.Global.sgREL)
f.Intrinsic.Control.EndIf 	


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Close_Data_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Close_Data.End

Program.Sub.Init_Display.Start
F.Intrinsic.Control.SetErrorHandler("Init_Display_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.lWOcnt.Declare(long)
V.Local.sRet.Declare(String)
V.local.sSubSwitch.Declare(String)
V.local.sLocalSwitch.Declare(String)
V.Global.sCall.Declare(String)

Function.Intrinsic.UI.InvokeWaitDialog("Opening Dashboard please wait ...")

'Field Service Warranty

'Split caller Switch
f.Intrinsic.String.Split(v.Caller.Switches,"@",V.local.sSubSwitch)

f.Intrinsic.Control.If(V.local.sSubSwitch.UBound,>,0)
	V.local.sLocalSwitch.Set(V.local.sSubSwitch(0))
	V.Global.sCall.Set(V.local.sSubSwitch(1))
f.Intrinsic.Control.Else 
	V.local.sLocalSwitch.Set(v.Caller.Switches)
f.Intrinsic.Control.endif



f.Intrinsic.Control.If(V.local.sLocalSwitch,=,"MD")
	v.Global.sgHdrView.Set("RepairHDR")
	v.Global.sgDetView.Set("RepairDET")
	f.Intrinsic.String.Build("{0}${1}",v.Global.sgHdrView,v.Global.sgDetView,v.Global.sgREL)
	V.Global.sScreen.Set("Show_Data")
	f.Intrinsic.Control.CallSub(Show_Data)
f.Intrinsic.Control.elseIf(V.local.sLocalSwitch,=,"BU")
	v.Global.sgHdrView.Set("BuckeyeHDR")
	v.Global.sgDetView.Set("BuckeyeDET")
	f.Intrinsic.String.Build("{0}${1}",v.Global.sgHdrView,v.Global.sgDetView,v.Global.sgREL)
	gui.Form..Caption("Buckeye Dashboard")
	V.Global.sScreen.Set("Show_Buckeye")
	f.Intrinsic.Control.CallSub(Show_Buckeye)
	gui.Form.GsGridWF.Anchor(15)
	Function.Intrinsic.UI.CloseWaitDialog
	F.Intrinsic.Control.ExitSub
f.Intrinsic.Control.elseIf(V.local.sLocalSwitch,=,"FS")
	v.Global.sgHdrView.Set("FieldServiceHDR")
	v.Global.sgDetView.Set("FieldServiceDET")
	f.Intrinsic.String.Build("{0}${1}",v.Global.sgHdrView,v.Global.sgDetView,v.Global.sgREL)
	gui.Form..Caption("Field Service Dashboard")
	V.Global.sScreen.Set("Show_FieldServiceTech")
	f.Intrinsic.Control.CallSub(FieldServiceTech)
f.Intrinsic.Control.elseIf(V.local.sLocalSwitch,=,"IS")
	v.Global.sgHdrView.Set("NewSalesHDR")
	v.Global.sgDetView.Set("NewSalesDET")
	f.Intrinsic.String.Build("{0}${1}",v.Global.sgHdrView,v.Global.sgDetView,v.Global.sgREL)
	gui.Form..Caption("New Sales Dashboard")
	V.Global.sScreen.Set("Show_IssSOQO")
	f.Intrinsic.Control.CallSub(ISS_SOQO)
f.Intrinsic.Control.elseIf(V.local.sLocalSwitch,=,"CO")
	v.Global.sgHdrView.Set("ControlHDR")
	v.Global.sgDetView.Set("ControlDET")
	f.Intrinsic.String.Build("{0}${1}",v.Global.sgHdrView,v.Global.sgDetView,v.Global.sgREL)
	gui.Form..Caption("Control Dashboard")
	V.Global.sScreen.Set("Control")
	f.Intrinsic.Control.CallSub(control)
f.Intrinsic.Control.EndIf 

Function.Intrinsic.UI.CloseWaitDialog

F.Intrinsic.Control.If(v.Global.bDup,=,True)
	F.Intrinsic.Control.ExitSub
f.Intrinsic.Control.endif

'calculate Total Job

'F.Intrinsic.Control.If(v.DataTable.DtJob.Exists,=,True)
'	F.Data.DataTable.Close("DtJob")
'f.Intrinsic.Control.EndIf 

'Function.Data.DataView.ToDataTableDistinct(v.Global.sgHdrView, v.Global.sgDetView, "DtJob", "WO*!*PLDET","True")

'Function.Data.DataTable.Compute("DtJob", "COUNT(WO)","WO <> ''",V.Local.lWOcnt)


'f.Intrinsic.String.Build("Total No of Jobs :{0}",V.Local.lWOcnt,V.Local.sRet)

'gui.Form.lbljob.Caption(V.Local.sRet)

'f.Data.DataTable.Close("DtJob")


gui.Form.GsGridWF.Anchor(15)





F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Init_Display_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Init_Display.End

Program.Sub.cmdExpand_Click.Start
F.Intrinsic.Control.SetErrorHandler("cmdExpand_Click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.i.Declare(long)




f.Intrinsic.Control.If(v.Screen.Form!cmdExpand.Caption,=,"Expand All")
	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.[v.Global.sgHdrView].RowCount--,1)
		gui.Form.GsGridWF.ExpandMasterRow(v.Global.sgHdrView,V.Local.i)
	F.Intrinsic.Control.Next(V.Local.i)


	gui.Form.cmdExpand.Caption("Collapse All")
f.Intrinsic.Control.Else
	'	Gui.Form.GsGridControlName.CollapseMasterRow("Header", 0)
	gui.Form.GsGridWF.MainView(v.Global.sgHdrView)
	gui.Form.cmdExpand.Caption("Expand All")
f.Intrinsic.Control.EndIf 



F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdExpand_Click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.cmdExpand_Click.End

Program.Sub.Warranty_Job.Start
F.Intrinsic.Control.SetErrorHandler("Warranty_Job_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSO.Declare(String)
V.Local.sSline.Declare(String)
V.Local.sQO.Declare(String)
v.Local.iWF.Declare(long)
V.Local.sSQL.Declare(String)
v.Local.iret.Declare(long)
v.Local.i.Declare(long)
V.Local.stitle.Declare(String)
v.Local.iCol.Declare(long)
'
''Field Service
f.Global.WorkFlow.GetIDFromTitle("Field Service Warranty",v.Local.iWF)
	'get the ID to create the workflow
f.Global.WorkFlow.GetTemplateIDFromTitle("Field Service Warranty",v.Local.iWF)

f.Intrinsic.Control.If(v.Local.iWF,=,-1)
		'inform the user there is no template
		f.Intrinsic.UI.Msgbox("There are no Workflow templates with the title Warranty Job")
f.Intrinsic.Control.EndIf

'gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,22,V.Args.cROW,V.Local.sSO)
'gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,23,V.Args.cROW,V.Local.sSline)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO_Ln", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)



f.Intrinsic.String.Build("select Warranty_Type,Billing,TOL,SO,SO_Ln  from GCG_4391_Warranty where SO = '{0}' and SO_Ln = '{1}'",V.Local.sSO,V.Local.sSline,v.Local.sSQL)


F.Intrinsic.Control.If(v.DataTable.ESTQUOTE.Exists,=,True)
	F.Data.DataTable.Close("ESTQUOTE")
f.Intrinsic.Control.EndIf 

F.Data.DataTable.CreateFromSQL("ESTQUOTE","conx",v.Local.sSQL,True)
gui.frmNestedQuote.GsGridQuote.AddGridViewFromDataTable("Grid_ESTQUOTE","ESTQUOTE") 
gui.frmNestedQuote.GsGridQuote.mainview("Grid_ESTQUOTE")

F.Intrinsic.Control.If(Variable.DataTable.ESTQUOTE.rowcount,=,0)
	F.Data.DataTable.AddRow("ESTQUOTE", "Warranty_Type", "","Billing", "", "TOL", v.Ambient.DBNull,"SO",V.Local.sSO,"SO_Ln",V.Local.sSline)
Function.Intrinsic.Control.EndIf

gui.frmNestedQuote.GsGridQuote.GetColumnCount("Grid_ESTQUOTE",v.Local.iret)
f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
	gui.frmNestedQuote.GsGridQuote.GetColumnNamebyIndex("Grid_ESTQUOTE",v.Local.i,v.Local.stitle)
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"HeaderWordWrap","wrap")
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"MinWidth",70)
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"HeaderFontBold","True")
f.Intrinsic.Control.Next(v.Local.i)


gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Warranty_Type","Caption","Warranty Type")
gui.frmNestedQuote.GsGridQuote.ColumnEdit("Grid_ESTQUOTE","Warranty_Type","Dropdownlist","KI*!*MFG")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Billing","Caption","Who Are We Billing")
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Billing","MaxWidth",150)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","TOL","Caption","TOL With Manager")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","TOL","MaxWidth",100)

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","TOL", "DisplayCustomDatetime", "d")


gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "Enableappearanceevenrow", "True")
gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "ColumnPanelRowHeight", "50")



'F.Intrinsic.Debug.InvokeDebugger
'
'

'ADD
'f.Intrinsic.Control.CallSub(GridMode,"WFID",v.Local.iWF,"SMODE","Type2")
f.Intrinsic.Control.CallSub(GridMode_new,"WFID",v.Local.iWF,"SMODE","Type2","Start",0)

'ADD
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SO", "Visible", False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SO_Ln", "Visible", False)
'

'Remove
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Create_Calendar","AllowEdit",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Create_Calendar","ReadOnly",False)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendInvite_OSS","AllowEdit",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendInvite_OSS","ReadOnly",False)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Prepare_EFile","AllowEdit",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Prepare_EFile","ReadOnly",False)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","DevelopScope_Bid","AllowEdit",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","DevelopScope_Bid","ReadOnly",False)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendScope_Contractor","AllowEdit",True)
'gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendScope_Contractor","ReadOnly",False)






F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Warranty_Job_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Warranty_Job.End

Program.Sub.GridMode_New.Start
F.Intrinsic.Control.SetErrorHandler("GridMode_New_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSql.Declare(String)
v.Local.iret.Declare(long)
v.Local.i.Declare(long)
v.Local.stitle.Declare(String)
v.Local.sret.Declare(String)
v.Local.bret.Declare(boolean)
v.Local.sheader.Declare(String)


Function.Data.Dictionary.Exists("DWFT", v.Local.bret)
f.Intrinsic.Control.If(v.Local.bret,=,true)
	Function.Data.Dictionary.Close("DWFT")
f.Intrinsic.Control.endif

F.Intrinsic.Control.If(v.DataTable.DTWFT.Exists,=,True)
	F.Data.DataTable.Close("DTWFT")
f.Intrinsic.Control.EndIf 


'f.Intrinsic.String.Build("select line,ucase(rtrim(ltrim(User_Group)) + '*!*' + rtrim(ltrim(SignOff_User_Grp))) as GRP from ATG_WFT_LINES where WFT_ID = {0} order by line",v.Args.WFID,v.Local.ssql)

'f.Intrinsic.String.Build("select line,USR_GRP_FLAG  + '*!*' +  ucase(rtrim(ltrim(User_Group)) +  '*@*' + SIGNOFF_TYPE + '*!*' + rtrim(ltrim(SignOff_User_Grp))) as GRP from ATG_WFT_LINES where WFT_ID = {0} order by line",v.Args.WFID,v.Local.ssql)

f.Intrinsic.String.Build("select line,line,ucase(USR_GRP_FLAG)  + '*!*' +  User_Group  +  '*@*' + ucase(SIGNOFF_TYPE) + '*!*' + rtrim(ltrim(SignOff_User_Grp))   as GRP from ATG_WFT_LINES where WFT_ID = {0} order by line",v.Args.WFID,v.Local.ssql)


'Function.Data.Dictionary.CreateFromSQL("DWFT","conx",v.Local.ssql)

Function.Data.DataTable.CreateFromSQL("DTWFT","conx",v.Local.ssql)

Function.Data.Dictionary.CreateFromDataTable("DWFT", "DTWFT", "line","GRP")
Function.Data.Dictionary.SetDefaultReturn("DWFT","")


v.Local.i.Set(v.Args.start)
f.Intrinsic.Control.If(v.Args.SMODE,=,"Type1")

	F.Intrinsic.Control.For(V.Local.iret,1,V.DataTable.DTWFT.RowCount,1)


		gui.Form.GsGridWF.GetColumnNamebyIndex(v.Global.sgDetView,v.Local.i,v.Local.sheader)
'		Gui.Form.GsGridWF.GetColumnProperty(v.Global.sgDetView,v.Local.sheader, "Caption", v.Local.stitle)
	'	Function.Data.Dictionary.ReturnKeyFromValue("DWFT",V.Local.stitle.UCase,V.Local.sret)
'		V.Local.sret.Set(v.Dictionary.DWFT![V.Local.stitle.UCase])

		V.Local.sret.Set(v.Dictionary.DWFT![v.Local.iret])
		
		f.Intrinsic.Control.If(V.Local.sret,<>,"")
			f.Intrinsic.String.Split(V.Local.sret,"*@*",V.Local.sret)
'			f.Intrinsic.Control.CallSub("GetValue","Group",V.Local.sret(0),"User",V.Local.sret(1))
			f.Intrinsic.Control.CallSub("GetValue","User_Group",V.Local.sret(0),"SignOff",V.Local.sret(1))
			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,V.Local.sheader,"AllowEdit",v.Args.bRet)
			gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView,V.Local.sheader,"ReadOnly",v.Args.bRet.not)
		f.Intrinsic.Control.EndIf 
		f.Intrinsic.Math.Add(v.Local.i,1,v.Local.i)
	F.Intrinsic.Control.Next(V.Local.iret)

f.Intrinsic.Control.elseIf(v.Args.SMODE,=,"Type2")
	F.Intrinsic.Control.For(V.Local.iret,1,V.DataTable.DTWFT.RowCount,1)
		gui.frmNestedQuote.GsGridQuote.GetColumnNamebyIndex("Grid_ESTQUOTE",v.Local.i,v.Local.sheader)
		V.Local.sret.Set(v.Dictionary.DWFT![v.Local.iret])
		f.Intrinsic.Control.If(V.Local.sret,<>,"")
			f.Intrinsic.String.Split(V.Local.sret,"*@*",V.Local.sret)
'			f.Intrinsic.Control.CallSub("GetValue","Group",V.Local.sret(0),"User",V.Local.sret(1))
			f.Intrinsic.Control.CallSub("GetValue","User_Group",V.Local.sret(0),"SignOff",V.Local.sret(1))
			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",V.Local.sheader,"AllowEdit",v.Args.bRet)
			gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",V.Local.sheader,"ReadOnly",v.Args.bRet.not)
		f.Intrinsic.Control.EndIf 
		f.Intrinsic.Math.Add(v.Local.i,1,v.Local.i)
	F.Intrinsic.Control.Next(V.Local.iret)
f.Intrinsic.Control.elseIf(v.Args.SMODE,=,"Type3")
	F.Intrinsic.Control.For(V.Local.iret,1,V.DataTable.DTWFT.RowCount,1)
		gui.frm2.GsGridQuote.GetColumnNamebyIndex("Grid_frm2",v.Local.i,v.Local.sheader)
		V.Local.sret.Set(v.Dictionary.DWFT![V.Local.iret])

		f.Intrinsic.Control.If(V.Local.sret,<>,"")
			f.Intrinsic.String.Split(V.Local.sret,"*@*",V.Local.sret)

'			f.Intrinsic.Control.CallSub("GetValue","Group",V.Local.sret(0),"User",V.Local.sret(1))
			f.Intrinsic.Control.CallSub("GetValue","User_Group",V.Local.sret(0),"SignOff",V.Local.sret(1))
			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",V.Local.sheader,"AllowEdit",v.Args.bRet)
			gui.frm2.GsGridQuote.SetColumnProperty("Grid_frm2",V.Local.sheader,"ReadOnly",v.Args.bRet.not)
		f.Intrinsic.Control.EndIf 
		f.Intrinsic.Math.Add(v.Local.i,1,v.Local.i)
	F.Intrinsic.Control.Next(V.Local.iret)
f.Intrinsic.Control.endif


Function.Data.Dictionary.Close("DWFT")
F.Data.DataTable.Close("DTWFT")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("GridMode_New_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.GridMode_New.End

Program.Sub.Quote_NewSub.Start
F.Intrinsic.Control.SetErrorHandler("Quote_NewSub_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSO.Declare(String)
V.Local.sSline.Declare(String)
V.Local.sQO.Declare(String)
v.Local.iWF.Declare(long)
V.Local.sSQL.Declare(String)
v.Local.iret.Declare(long)
v.Local.i.Declare(long)
V.Local.stitle.Declare(String)
v.Local.iCol.Declare(long)



'gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "Sales_Order", v.Local.iCol)
'gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)
'
'gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "Sales_Line", v.Local.iCol)
'gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)


gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSO)

gui.Form.GsGridWF.GetColumnIndexByName(v.Global.sgDetView, "SO_Ln", v.Local.iCol)
gui.Form.GsGridWF.GetCellValue(v.Global.sgDetView,v.Local.iCol,V.Args.cROW,V.Local.sSline)


f.Intrinsic.String.Build("select SO,SO_Ln,FS_RFQ,Controls_RFQ,CASE WHEN SendOut_Pricing IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(SendOut_Pricing,SQL_BIT)  END AS SendOut_Pricing,Follow_up,Double_CheckSheet,CASE WHEN Router_Worksheet IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Router_Worksheet,SQL_BIT)  END AS Router_Worksheet,Create_Quote,CASE WHEN Quote_Approval_10k IS NULL THEN CONVERT(0,SQL_BIT) else CONVERT(Quote_Approval_10k,SQL_BIT)  END AS Quote_Approval_10k,Quote_Sent,Customer_Approval from GCG_4391_NEWSUBQuote where SO = '{0}' and SO_Ln = '{1}'",V.Local.sSO,V.Local.sSline,v.Local.sSQL)

F.Intrinsic.Control.If(v.DataTable.ESTQUOTE.Exists,=,True)
	F.Data.DataTable.Close("ESTQUOTE")
f.Intrinsic.Control.EndIf 

F.Data.DataTable.CreateFromSQL("ESTQUOTE","conx",v.Local.sSQL,True)
gui.frmNestedQuote.GsGridQuote.AddGridViewFromDataTable("Grid_ESTQUOTE","ESTQUOTE") 
gui.frmNestedQuote.GsGridQuote.mainview("Grid_ESTQUOTE")

F.Intrinsic.Control.If(Variable.DataTable.ESTQUOTE.rowcount,=,0)
	F.Data.DataTable.AddRow("ESTQUOTE", "FS_RFQ","","Controls_RFQ","","SendOut_Pricing",False,"Follow_up",v.Ambient.DBNull,"Double_CheckSheet","","Router_Worksheet",False,"Create_Quote",v.Ambient.DBNull,"Quote_Approval_10k",False,"Quote_Sent",v.Ambient.DBNull,"Customer_Approval",v.Ambient.DBNull,"SO",V.Local.sSO,"SO_Ln",V.Local.sSline)
Function.Intrinsic.Control.EndIf

gui.frmNestedQuote.GsGridQuote.GetColumnCount("Grid_ESTQUOTE",v.Local.iret)
f.Intrinsic.Math.Sub(v.Local.iret,1,v.Local.iret)
f.Intrinsic.Control.For(v.Local.i,0,v.Local.iret,1)
	gui.frmNestedQuote.GsGridQuote.GetColumnNamebyIndex("Grid_ESTQUOTE",v.Local.i,v.Local.stitle)
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"HeaderFontBold","True")
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle, "DisplayCustomDatetime", "d")
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"MinWidth",80)

	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"AllowEdit",True)
	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"ReadOnly",False)

	gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE",v.Local.stitle,"HeaderWordWrap","wrap")
f.Intrinsic.Control.Next(v.Local.i)

gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","FS_RFQ","Caption","FS RFQ")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Controls_RFQ","Caption","Controls RFQ")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","SendOut_Pricing","Caption","Send Out For Pricing?")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Follow_up","Caption","Follow up")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Double_CheckSheet","Caption","Double Check Sheet")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Router_Worksheet","Caption","Router / Worksheet")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Create_Quote","Caption","Create Quote")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote_Approval_10k","Caption","Create Approval Over $10,000")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Quote_Sent","Caption","Quote Sent")
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE","Customer_Approval","Caption","Customer Approval")

gui.frmNestedQuote.GsGridQuote.SetGridViewProperty("Grid_ESTQUOTE", "ColumnPanelRowHeight", "70")


'F.Intrinsic.Debug.InvokeDebugger
'
'


'add
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SO", "Visible", False)
gui.frmNestedQuote.GsGridQuote.SetColumnProperty("Grid_ESTQUOTE", "SO_Ln", "Visible", False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Quote_NewSub_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Quote_NewSub.End

Program.Sub.GsGridQuote_CellValueChanged.Start
Program.Sub.GsGridQuote_CellValueChanged.End

Program.Sub.Create_Menus.Start
F.Intrinsic.Control.SetErrorHandler("Create_Menus_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

	Gui.Form..ContextMenuCreate("MNUGRID")
	Gui.Form.GsGridWF.ContextMenuAttach("MNUGRID")
'	Gui.Form..ContextMenuAddItem("MNUGRID","Refresh",0,"Refresh")
	Gui.Form..ContextMenuAddItem("MNUGRID","ResetColumns",0,"Reset Columns")
	Gui.Form..ContextMenuSetItemEventHandler("MNUGRID","ResetColumns","MenuResetColumns")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Create_Menus_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Create_Menus.End

Program.Sub.MenuResetColumns.Start
F.Intrinsic.Control.SetErrorHandler("MenuResetColumns_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)



F.Intrinsic.Control.SelectCase(V.Args.MenuName)
	F.Intrinsic.Control.Case("MNUGRID")
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,v.Global.sgHdrView,4391,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,v.Global.sgdetView,4391,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("MenuResetColumns_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.MenuResetColumns.End

Program.Sub.Serialize.Start
F.Intrinsic.Control.SetErrorHandler("Serialize_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSerialize.Declare 


Gui.Form.GsGridWF.Serialize(v.Global.sgHdrView,V.Local.sSerialize)
F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,v.Global.sgHdrView,4391,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

Gui.Form.GsGridWF.Serialize(v.Global.sgDetView,V.Local.sSerialize)
F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,v.Global.sgdetView,4391,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

'F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Serialize_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)

	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
F.Intrinsic.Control.SetErrorHandler("Deserialize_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSerialize.Declare 


F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,v.Global.sgHdrView,4391,1000,6,"",V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize.trim,<>,"")
	Gui.Form.GsGridWF.Deserialize(V.Local.sSerialize)
F.Intrinsic.Control.EndIf

F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,v.Global.sgdetView,4391,1000,6,"",V.Local.sSerialize)
F.Intrinsic.Control.If(V.Local.sSerialize.trim,<>,"")
	Gui.Form.GsGridWF.Deserialize(V.Local.sSerialize)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Deserialize_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Deserialize.End

Program.Sub.EnableApperance.Start
F.Intrinsic.Control.SetErrorHandler("EnableApperance_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgDetView, "Enableappearanceevenrow", "True")
gui.Form.GsGridWF.SetGridviewProperty(v.Global.sgHdrView,"Showgrouppanel",True)
gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgDetView, "OptionsViewRowAutoHeight", "True")
gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgDetView,"OptionsViewColumnAutoWidth",False)
gui.Form.GsGridWF.SetGridViewProperty(v.Global.sgHdrView,"OptionsViewColumnAutoWidth",False)


f.Intrinsic.Control.if(V.Global.sScreen,=,"Show_FieldServiceTech")
	Gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "comments", "CellWordWrap", "Wrap")
f.Intrinsic.Control.Else
	Gui.Form.GsGridWF.SetColumnProperty(v.Global.sgDetView, "notes", "CellWordWrap", "Wrap")
f.Intrinsic.Control.EndIf 

gui.Form.GsGridWF.SetGridviewProperty(v.Global.sgHdrView,"OptionsFindAlwaysVisible",True)
gui.Form.GsGridWF.SetGridviewProperty(v.Global.sgDetView,"Showgrouppanel",True)



F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("EnableApperance_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.EnableApperance.End

Program.Sub.Pouplate_HDRdup.Start
F.Intrinsic.Control.SetErrorHandler("Pouplate_HDRdup_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.ssql.Declare(String)
V.Local.sFilter.Declare(String)
V.Local.sPL.Declare(String)



F.Intrinsic.Control.If(v.Global.bDup,=,True)
	F.Data.Dataview.Close("DTDup","DVDup")
	F.Data.DataTable.Close("DTDup")
	F.Data.Dictionary.Close("DUPDIC")
f.Intrinsic.Control.EndIf 	


v.Global.bDup.Set(True)
 f.Intrinsic.String.Build("select a.order_no 'SODUP',count(*) as 'Count' from (select distinct order_no,Product_Line from v_order_lines Join GCG_4391_PL on PL = Product_line where dash_type = '{0}') as a  group by a.order_no HAVING COUNT(a.order_no)>1",v.Global.sScreen,v.Local.ssql)

F.Data.DataTable.CreateFromSql("DTDup","conx",v.Local.sSql,True)

f.Intrinsic.Control.If(V.DataTable.DTDup.RowCount,>,0)
	F.Data.DataView.Create("DTDup","DVDup")
	f.Intrinsic.UI.Msgbox("Duplicate Product Line exist")
f.Intrinsic.Control.Else
'	if only fieldservuce or new sales
	f.Intrinsic.Control.If(v.Global.sgHdrView,=,"FieldServiceHDR","or",v.Global.sgHdrView,=,"NewSalesHDR",v.Global.sgHdrView,=,"RepairHDR")
'		 v.Local.ssql.Set("select a.order_no 'SODUP',count(*) as 'Count','' as PL from (select distinct order_no,Group_lines from v_order_lines ) as a group by a.order_no HAVING COUNT(a.order_no)>1 ")
'		f.Intrinsic.String.Build("select a.order_no 'SODUP',count(*) as 'Count','' as PL from (select distinct order_no,Group_lines from v_order_lines Join GCG_4391_PL on PL = Product_line where dash_type = '{0}' ) as a group by a.order_no HAVING COUNT(a.order_no)>1 ",v.Global.sScreen,v.Local.ssql)
		f.Intrinsic.String.Build("select a.order_no 'SODUP',count(*) as 'Count' from (select distinct order_no,Group_lines from v_order_lines Join GCG_4391_PL on PL = Product_line where dash_type = '{0}' ) as a group by a.order_no HAVING COUNT(a.order_no)>1 ",v.Global.sScreen,v.Local.ssql)

		F.Data.DataTable.Close("DTDup")
		F.Data.DataTable.CreateFromSql("DTDup","conx",v.Local.sSql,True)
		f.Intrinsic.Control.If(V.DataTable.DTDup.RowCount,>,0)
'			 f.Intrinsic.String.Build("select distinct order_no,Product_Line from v_order_lines Join GCG_4391_PL on PL = Product_line where dash_type = '{0}'",v.Global.sScreen,v.Local.ssql)		
''				f.Intrinsic.String.Build("select distinct order_no,Product_Line from v_order_lines where {0}",v.Args.PL,v.Local.ssql)
'			
'			F.Data.Dictionary.CreateFromSQL("DUPDIC","conx",v.Local.ssql)
'			F.Data.Dictionary.SetDefaultReturn("DUPDIC","")
'			F.Data.DataTable.FillFromDictionary("DTDup","DUPDIC","SODUP","PL")
			f.Intrinsic.UI.Msgbox("Duplicate GroupID exist")
'			f.Data.DataView.Create(v.Global.sgREL,"DVSave",22,"Sflag='1'","")
'			F.Data.DataView.Create("DTDup","DVDup",22,"PL<>''","")
'			f.Data.DataTable.RemoveColumn("DTDup","PL")
			F.Data.DataView.Create("DTDup","DVDup")
		f.Intrinsic.Control.EndIf 
	f.Intrinsic.Control.EndIf 
f.Intrinsic.Control.EndIf 

gui.Form.GsGridWF.AddGridViewFromDataView("DView","DTDup","DVDup")

gui.Form.GsGridWF.SetColumnProperty("DView","SODUP","Caption","SO")
gui.Form.GsGridWF.setGridviewProperty("DView","ReadOnly",True)
gui.Form.GsGridWF.setGridviewProperty("DView","Editable",False)
gui.Form.GsGridWF.SetColumnProperty("DView","SODUP","CellForeColor","Blue")
gui.Form.GsGridWF.MainView("DView")

gui.Form.lbljob.Visible(false)
gui.Form.cmdRepSave.Visible(false)
gui.Form.cmdExpand.Visible(false)
Gui.Form.GsGridWF.Size(3405,12810)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Pouplate_HDRdup_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4391_WFDashboard.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf


Program.Sub.Pouplate_HDRdup.End

Program.Sub.cmdPL_Click.Start
F.Intrinsic.Control.SetErrorHandler("Sub_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sSQL.Declare
v.Local.iTotClmn.Declare
v.Local.i.Declare
v.Local.stitle.Declare

f.Intrinsic.String.Build("select PL,'' as 'CustBrow',Product_Line_Name,Last_Chg_User,Dash_Type from GCG_4391_PL join v_PRODUCT_LINE on PL = Product_line where Dash_Type = '{0}' ",v.Global.sScreen,V.Local.sSQL)
F.Intrinsic.Control.If(v.DataTable.DTPL.Exists,=,True)
	F.Data.DataTable.Close("DTPL")
f.Intrinsic.Control.EndIf 

F.Data.DataTable.CreateFromSQL("DTPL","conx",v.Local.sSQL,True)
'	f.Intrinsic.Control.If(Variable.DataTable.DTPL.rowcount,>,0)
'		v.Local.iret.Set(Variable.DataTable.DTPL.rowcount)
'	f.Intrinsic.Control.Else
'		v.Local.iret.Set(0)
'	f.Intrinsic.Control.EndIf

	F.Data.DataView.Create("DTPL","DVLines")
	
	gui.Form.GsPL.SuspendLayout 

	F.Data.DataTable.AddColumn("DTPL","Action","string","Delete")

'Function.Intrinsic.Debug.InvokeDebugger
'Function.Intrinsic.Debug.Stop

	'Add Blank row for data entry
'	f.Data.DataTable.AddRow("DTPL","ID",v.local.iret,"Customer","","CustBrow","","Name_Customer","","Email","","Frequency",1,"Action","Add")
'	f.Intrinsic.Math.Add(v.local.iret,1,V.Global.lRCnt)

	f.Data.DataTable.AddRow("DTPL","PL","","CustBrow","","Product_Line_Name","","Last_Chg_User",v.Caller.User,"Action","Add","Dash_Type",v.Global.sScreen)

	gui.Form.GsPL.AddGridViewFromDataView("GridView","DTPL","DVLines")

	gui.Form.GsPL.GetColumnCount("GridView",v.Local.iTotClmn)
	f.Intrinsic.Math.Sub(v.Local.iTotClmn,1,v.Local.iTotClmn)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.iTotClmn,1)
		gui.Form.GsPL.GetColumnNamebyIndex("GridView",v.Local.i,v.Local.stitle)
		gui.Form.GsPL.SetColumnProperty("GridView",v.Local.stitle,"AllowEdit",False)
		gui.Form.GsPL.SetColumnProperty("GridView",v.Local.stitle,"ReadOnly",True)

		gui.Form.GsPL.SetColumnProperty("GridView",v.Local.stitle,"HeaderFontBold","True")
		gui.Form.GsPL.SetColumnProperty("GridView",v.Local.stitle,"HeaderBackColor","#7FFF00")
		gui.Form.GsPL.SetColumnProperty("GridView",v.Local.stitle,"HeaderHAlignment","Center")
		gui.Form.GsPL.SetColumnProperty("GridView",v.Local.stitle,"HeaderWordWrap","wrap")
	f.Intrinsic.Control.Next(v.Local.i)
	gui.Form.GsPL.SetGridviewProperty("GridView","OptionsViewRowAutoHeight",True)

	gui.Form.GsPL.AddStyleFormatCOndition("GridView", "Action", "tagName1","NotEqual","1")
	gui.Form.GsPL.SetStyleFormatCOnditionProperty("GridView",  "Action", "tagName1", "backcolor", "#D3D3D3")

	gui.Form.GsPL.AddStyleFormatCOndition("GridView", "Action", "tagName1","NotEqual","1")
	gui.Form.GsPL.SetStyleFormatCOnditionProperty("GridView",  "Action", "tagName1", "FontBold", True)


'	gui.frmAddLines.GsGridLines.SetColumnProperty("GridView","Email","AllowEdit",True)
'	gui.frmAddLines.GsGridLines.SetColumnProperty("GridView","Email","ReadOnly",False)
'	gui.frmAddLines.GsGridLines.SetColumnProperty("GridView","Frequency","AllowEdit",True)
'	gui.frmAddLines.GsGridLines.SetColumnProperty("GridView","Frequency","ReadOnly",False)
'	
'	Gui.frmAddLines.GsGridLines.SetColumnProperty("GridView","CustBrow","Icon","BROWSE")
	gui.Form.GsPL.SetColumnProperty("GridView","CustBrow","Icon","^")

	gui.Form.GsPL.SetColumnProperty("GridView","CustBrow","Caption"," ")
	
	gui.Form.GsPL.SetColumnProperty("GridView","Product_Line_Name","Caption","PL Name")

'	gui.frmAddLines.GsGridLines.SetColumnProperty("GridView", "ID", "Visible", False)

'	gui.Form.GsPL.SetColumnProperty("GridView", "Last_Chg_User", "Visible", False)
	gui.Form.GsPL.SetColumnProperty("GridView", "Dash_Type", "Visible", False)

	gui.Form.GsPL.SetColumnProperty("GridView","PL","MinWidth",70)
	gui.Form.GsPL.SetColumnProperty("GridView","PL","MaxWidth",70)
	
	gui.Form.GsPL.SetColumnProperty("GridView","Product_Line_Name","MinWidth",150)
	gui.Form.GsPL.SetColumnProperty("GridView","Product_Line_Name","MaxWidth",150)
	
	gui.Form.GsPL.SetColumnProperty("GridView","CustBrow","MinWidth",30)
	gui.Form.GsPL.SetColumnProperty("GridView","CustBrow","MaxWidth",30)
	
'	
	gui.Form.GsPL.SetColumnProperty("GridView","Action","MinWidth",70)
	gui.Form.GsPL.SetColumnProperty("GridView","Action","MaxWidth",70)

	gui.Form.GsPL.SetColumnProperty("GridView","Action","CellHAlignment","center")


	gui.Form.GsPL.SetGridViewProperty("GridView", "OptionsSelectionEnableAppearanceFocusedRow", "False") 


	gui.Form.GsPL.ResumeLayout 

	gui.Form.GsPL.MainView("GridView")

	gui.Form.GsPL.Anchor(15)


gui.Form.framePL.Visible(true)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Sub_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: Project",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf
Program.Sub.cmdPL_Click.End

Program.Sub.cmdPLClose_Click.Start
F.Intrinsic.Control.SetErrorHandler("Sub_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.Intrinsic.Control.If(V.Global.bSave,=,True)
	f.Intrinsic.Control.CallSub(Save_PL,"Smode","Add")
	f.Intrinsic.Control.If(V.Args.bRet,=,False)
		f.Intrinsic.UI.Msgbox("Data not saved")
		F.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.Endif
f.Intrinsic.Control.EndIf 
gui.Form.framePL.Visible(false)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Sub_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: Project",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf
Program.Sub.cmdPLClose_Click.End

Program.Sub.GsPL_CellValueChanged.Start
F.Intrinsic.Control.SetErrorHandler("Sub_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Global.bSave.Set(True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Sub_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: Project",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf
Program.Sub.GsPL_CellValueChanged.End

Program.Sub.GsPL_RowCellClick.Start
F.Intrinsic.Control.SetErrorHandler("Sub_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sSql.Declare
V.Local.sRet.Declare
V.Local.sFilter.Declare	
V.Local.sSelect.Declare

f.Intrinsic.Control.BlockEvents 

f.Intrinsic.Control.If(V.Args.column,=,"CustBrow")
	F.Intrinsic.UI.SetBrowserHotTypeAhead(True)
	F.Intrinsic.UI.Browser(130,"",V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)

'		f.Intrinsic.String.RPad(V.Local.sRet(0)," ",6,V.Local.sRet)
		F.Intrinsic.String.Build("PL = '{0}'",V.Local.sRet.trim,V.Local.sFilter)
		F.Data.DataTable.Select("DTPL",V.Local.sFilter,V.Local.sSelect)
		F.Intrinsic.Control.If(V.Local.sSelect,<>,"***NORETURN***")
			f.Intrinsic.UI.Msgbox("Product Line already added , duplicate not allowed")
			f.Intrinsic.Control.UnBlockEvents 
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf 
		
		F.Data.DataTable.SetValue("DTPL",V.Args.RowIndex,"PL",V.Local.sRet(0))
		F.Data.DataTable.SetValue("DTPL",V.Args.RowIndex,"Product_Line_Name",V.Local.sRet(2).Trim)
		V.Global.bSave.Set(True)
'		Gui.form.GsPL.FocusCell("GridView",V.Args.RowIndex,1)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.ElseIf(V.Args.column,=,"Action")
	Gui.form.GsPL.GetCellValueByColumnName("GridView",V.Args.column,V.Args.RowIndex,Variable.local.sRet)
	'check key for Delete
	f.Intrinsic.Control.If(Variable.local.sRet,=,"Delete")
		f.Data.DataTable.DeleteRow("DTPL",V.Args.RowHandle)
		F.Data.DataTable.SaveToDB("DTPL","conx","GCG_4391_PL","Dash_Type*!*PL",4,"Dash_Type@!@Dash_Type*!*PL@!@PL*!*Last_Chg_User@!@Last_Chg_User")
		F.Data.DataTable.AcceptChanges("DTPL")
		V.Global.bSave.Set(False)
		Gui.form.GsPL.FocusCell("GridView",V.Args.RowIndex,1)
	f.Intrinsic.Control.Else 
		'check key for ADD
		'Validate for  Data Entry Fields
		f.Intrinsic.Control.If(v.DataTable.DTPL(v.Args.Rowhandle).PL!FieldValtrim,=,"")
			f.Intrinsic.Control.UnBlockEvents 
			f.Intrinsic.Control.ExitSub 
		f.Intrinsic.Control.EndIf 
		F.Data.DataTable.AcceptChanges("DTPL")
		f.Intrinsic.Control.CallSub(Save_PL,"Smode","ADD")
		f.Intrinsic.Control.If(V.Args.bRet,=,True)
			f.Data.DataTable.SetValue("DTPL",V.Args.RowHandle,"Action","Delete")

			f.Data.DataTable.AddRow("DTPL","PL", "","Product_Line_Name", "","CustBrow","","Last_Chg_User",v.Caller.User,"Action","Add","Dash_Type",v.Global.sScreen)
			Gui.form.GsPL.SetCellAppearance("GridView",1,V.DataTable.DTPL.ROWCOUNT--,"Icon","^")
'			f.Intrinsic.Math.Add(V.Global.lRCnt,1,V.Global.lRCnt)
			Gui.form.GsPL.FocusCell("GridView",V.Args.RowIndex,1)
		f.Intrinsic.Control.Endif
	Function.Intrinsic.Control.EndIf
Function.Intrinsic.Control.EndIf
f.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Sub_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	f.Intrinsic.Control.UnBlockEvents
	Function.Intrinsic.String.Concat("Project: Project",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf
Program.Sub.GsPL_RowCellClick.End

Program.Sub.Save_PL.Start
F.Intrinsic.Control.SetErrorHandler("Sub_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

V.Local.sRet.Declare(string)
V.Local.sFieldNames.Declare(string)
V.Local.sTypes.Declare(string)

F.Intrinsic.Control.If(V.DataView.DTPL!DVSave.Exists,=,True)
	Function.Data.DataView.Close("DTPL","DVSave")
f.Intrinsic.Control.EndIf 

f.Intrinsic.Control.If(v.Args.Smode,=,"ADD")
	f.Data.DataView.Create("DTPL","DVSave",22,"PL <> '' and Action='Add'","")
f.Intrinsic.Control.Else
	f.Data.DataView.Create("DTPL","DVSave",22,"PL <> ''","")
f.Intrinsic.Control.EndIf

f.Data.DataView.ToDataTable("DTPL","DVSave","DTSave")
'ADD
f.Intrinsic.Control.If(v.Args.Smode,=,"ADD")
	F.Data.DataTable.SaveToDB("DTSave","conx","GCG_4391_PL","Dash_Type*!*PL",1,"Dash_Type@!@Dash_Type*!*PL@!@PL*!*Last_Chg_User@!@Last_Chg_User")
f.Intrinsic.Control.Else
'Modify 
	F.Data.DataTable.SaveToDB("DTSave","conx","GCG_4391_PL","Dash_Type*!*PL",2,"Dash_Type@!@Dash_Type*!*PL@!@PL*!*Last_Chg_User@!@Last_Chg_User")
f.Intrinsic.Control.EndIf

V.Global.bSave.Set(False)
Function.Data.Datatable.Close("DTSave")
f.Intrinsic.Variable.AddRV("bRet","True")




F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Sub_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: Project",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.Save_PL.End

Program.Sub.GsGridWF_ColumnFilterChanged.Start
F.Intrinsic.Control.SetErrorHandler("Sub_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iRet.Declare(long)
V.Local.sRet.Declare
V.Local.lWOcnt.Declare


''f.Intrinsic.UI.Msgbox(V.Args.ActiveFilterRowCount)

'''Gui.Form.GsGridWF.GetRowCount(v.Global.sgHdrView,V.Local.iRet)

''Gui.Form.GsGridWF.GetSelectedRows(v.Global.sgHdrView,V.Local.sRet)
''f.Intrinsic.UI.Msgbox(V.Local.iRet)

''v.args.ActiveFilterExpression


'Function.Intrinsic.String.Occurs(Variable.Args.ActiveFilterExpression.Trim,"[PL]",V.Local.iRet)
'f.Intrinsic.Control.If(V.Local.iRet,<>,0)
'	Function.Intrinsic.String.Occurs(Variable.Args.ActiveFilterExpression.Trim,"And",V.Local.iRet)
'	f.Intrinsic.Control.If(V.Local.iRet,=,0)
'		f.Intrinsic.Control.If(Variable.Args.ActiveFilterExpression.Trim,<>,"")
'			f.Intrinsic.String.Replace(Variable.Args.ActiveFilterExpression.Trim,"PL","PLDET",V.Local.sRet)
'			f.Intrinsic.String.Build("WO <> '' and {0}",V.Local.sRet,V.Local.sRet)
'		f.Intrinsic.Control.else
'			V.Local.sRet.Set("WO <> ''")
'		f.Intrinsic.Control.endif
'		
'		Function.Data.DataTable.Compute("DtJob", "COUNT(WO)",V.Local.sRet,V.Local.lWOcnt)
'		
'		f.Intrinsic.String.Build("Total No of Jobs :{0}",V.Local.lWOcnt,V.Local.sRet)
'		
'		gui.Form.lbljob.Caption(V.Local.sRet)
'	f.Intrinsic.Control.EndIf	
'f.Intrinsic.Control.EndIf	

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Sub_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: Project",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.GsGridWF_ColumnFilterChanged.End

Program.Sub.Comments.Start
${$0$}$GCG_4391_WFDashboard.g2u$}$RAN$}$3/7/2017 10:52:50 AM$}$False
${$3$}$0$}$$}$0$}$-1$}$$}$12:00:00 AM$}$This will be a .Net GAB dashboard that facilitates workflows.  

1. 3 modes, by department. The three modes will have different data to be displayed as it relates to the workflow being used.
2. Will be able to complete/signoff and track workflows
3. Workflow template that is used will be determined by Customer Service Request Type.
4. Work Flow templates will still be facilitated in Standard GSS (Business Intelligence>Admin>Workflow Template)
5. Dashboard will be able to export to excel.
6. Sorting, Grouping, Filtering capabilities in the grid(s).
Program.Sub.Comments.End
